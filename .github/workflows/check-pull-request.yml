name: Check Pull Request

on:
  pull_request:
    branches:
      - main
    types:
      - opened
      - edited
      - reopened
      - synchronize
      - ready_for_review

jobs:
  pr-validator:
    name: Run Pull Request Checks
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Test code and Create Test Coverage Reports
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: npm
      - run: |
          npm audit --omit=dev
          npm ci
          npm test -- --coverage --coverageReporters="text" --coverageReporters="lcov" > ./coverage.txt 2>&1 || echo "TESTS_FAILED=true" >> $GITHUB_ENV

      - name: Prepare coverage comment
        run: |
          echo '## ðŸ§ª Jest Coverage Report' > coverage.txt
          echo '```' >> coverage.txt
          cat coverage/jest-output.txt >> coverage.txt
          echo '```' >> coverage.txt

      - name: Comment coverage on PR
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          recreate: true
          path: coverage.txt

      - name: Fail job if tests failed
        if: env.TESTS_FAILED == 'true'
        run: |
          echo "Tests or coverage threshold failed"
          exit 1

      - name: Test Docker Image Build
        run: |
          set +e
          docker build --no-cache --tag fcp-dal-api .
          exit $?

      - name: Sonarqube Cloud Scan
        if: github.actor != 'dependabot[bot]'
        uses: SonarSource/sonarqube-scan-action@v5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
