{
  "numFailedTestSuites": 0,
  "numFailedTests": 0,
  "numPassedTestSuites": 48,
  "numPassedTests": 342,
  "numPendingTestSuites": 0,
  "numPendingTests": 0,
  "numRuntimeErrorTestSuites": 0,
  "numTodoTests": 0,
  "numTotalTestSuites": 48,
  "numTotalTests": 342,
  "openHandles": [],
  "snapshot": {
    "added": 0,
    "didUpdate": false,
    "failure": false,
    "filesAdded": 0,
    "filesRemoved": 0,
    "filesRemovedList": [],
    "filesUnmatched": 0,
    "filesUpdated": 0,
    "matched": 0,
    "total": 0,
    "unchecked": 0,
    "uncheckedKeysByFile": [],
    "unmatched": 0,
    "updated": 0
  },
  "startTime": 1759946546949,
  "success": true,
  "testResults": [
    {
      "assertionResults": [
        {
          "ancestorTitles": ["business"],
          "duration": 125,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "business update business name",
          "invocations": 1,
          "location": { "column": 3, "line": 81 },
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "update business name"
        },
        {
          "ancestorTitles": ["business"],
          "duration": 66,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "business update business email",
          "invocations": 1,
          "location": { "column": 3, "line": 133 },
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "update business email"
        },
        {
          "ancestorTitles": ["business"],
          "duration": 61,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "business update business address - withUprn",
          "invocations": 1,
          "location": { "column": 3, "line": 188 },
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "update business address - withUprn"
        },
        {
          "ancestorTitles": ["business"],
          "duration": 59,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "business update business address - withoutUprn",
          "invocations": 1,
          "location": { "column": 3, "line": 366 },
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "update business address - withoutUprn"
        },
        {
          "ancestorTitles": ["business"],
          "duration": 53,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "business update business phone",
          "invocations": 1,
          "location": { "column": 3, "line": 538 },
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "update business phone"
        },
        {
          "ancestorTitles": ["business"],
          "duration": 55,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "business update business vat",
          "invocations": 1,
          "location": { "column": 3, "line": 606 },
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "update business vat"
        },
        {
          "ancestorTitles": ["business - external gateway"],
          "duration": 46,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "business - external gateway update business name",
          "invocations": 1,
          "location": { "column": 3, "line": 679 },
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "update business name"
        }
      ],
      "endTime": 1759946547797,
      "message": "",
      "name": "/Users/dominic/Sites/defra/fcp-dal-api/test/graphql/mutation/business-details.test.js",
      "startTime": 1759946546969,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["business"],
          "duration": 105,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "business update business legal status",
          "invocations": 1,
          "location": { "column": 3, "line": 45 },
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "update business legal status"
        },
        {
          "ancestorTitles": ["business"],
          "duration": 61,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "business update business type",
          "invocations": 1,
          "location": { "column": 3, "line": 107 },
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "update business type"
        },
        {
          "ancestorTitles": ["business"],
          "duration": 58,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "business update business registration numbers",
          "invocations": 1,
          "location": { "column": 3, "line": 171 },
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "update business registration numbers"
        },
        {
          "ancestorTitles": ["business"],
          "duration": 58,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "business update business date started farming",
          "invocations": 1,
          "location": { "column": 3, "line": 229 },
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "update business date started farming"
        },
        {
          "ancestorTitles": ["business - external"],
          "duration": 49,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "business - external update business legal status",
          "invocations": 1,
          "location": { "column": 3, "line": 298 },
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "update business legal status"
        }
      ],
      "endTime": 1759946548310,
      "message": "",
      "name": "/Users/dominic/Sites/defra/fcp-dal-api/test/graphql/mutation/business-additional-details.test.js",
      "startTime": 1759946547809,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["schema"],
          "duration": 77,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "schema should not include custom directives in final schema output",
          "invocations": 1,
          "location": { "column": 3, "line": 61 },
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should not include custom directives in final schema output"
        },
        {
          "ancestorTitles": ["schema"],
          "duration": 47,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "schema should contain all fields if process.env.ALL_SCHEMA is set",
          "invocations": 1,
          "location": { "column": 3, "line": 147 },
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "should contain all fields if process.env.ALL_SCHEMA is set"
        },
        {
          "ancestorTitles": ["schema"],
          "duration": 43,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "schema should only contain fields that have the directive",
          "invocations": 1,
          "location": { "column": 3, "line": 157 },
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "should only contain fields that have the directive"
        },
        {
          "ancestorTitles": ["schema"],
          "duration": 36,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "schema ensures all top-level fields have @auth directive",
          "invocations": 1,
          "location": { "column": 3, "line": 169 },
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "ensures all top-level fields have @auth directive"
        }
      ],
      "endTime": 1759946548656,
      "message": "",
      "name": "/Users/dominic/Sites/defra/fcp-dal-api/test/graphql/schema.test.js",
      "startTime": 1759946548322,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["customer mutations"],
          "duration": 106,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "customer mutations updateCustomerAddress",
          "invocations": 1,
          "location": { "column": 3, "line": 105 },
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "updateCustomerAddress"
        },
        {
          "ancestorTitles": ["customer mutations"],
          "duration": 58,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "customer mutations updateCustomerDateOfBirth",
          "invocations": 1,
          "location": { "column": 3, "line": 214 },
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "updateCustomerDateOfBirth"
        },
        {
          "ancestorTitles": ["customer mutations"],
          "duration": 56,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "customer mutations updateCustomerEmail",
          "invocations": 1,
          "location": { "column": 3, "line": 246 },
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "updateCustomerEmail"
        },
        {
          "ancestorTitles": ["customer mutations"],
          "duration": 57,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "customer mutations updateCustomerName",
          "invocations": 1,
          "location": { "column": 3, "line": 282 },
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "updateCustomerName"
        },
        {
          "ancestorTitles": ["customer mutations"],
          "duration": 54,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "customer mutations updateCustomerPhone",
          "invocations": 1,
          "location": { "column": 3, "line": 339 },
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "updateCustomerPhone"
        },
        {
          "ancestorTitles": ["customer mutations"],
          "duration": 52,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "customer mutations updateCustomerDoNotContact",
          "invocations": 1,
          "location": { "column": 3, "line": 373 },
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "updateCustomerDoNotContact"
        }
      ],
      "endTime": 1759946549219,
      "message": "",
      "name": "/Users/dominic/Sites/defra/fcp-dal-api/test/graphql/mutation/customer.test.js",
      "startTime": 1759946548664,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["Query.business internal"],
          "duration": 124,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Query.business internal authenticated external",
          "invocations": 1,
          "location": { "column": 3, "line": 325 },
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "authenticated external"
        },
        {
          "ancestorTitles": ["Query.business internal"],
          "duration": 71,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Query.business internal authenticated internal",
          "invocations": 1,
          "location": { "column": 3, "line": 495 },
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "authenticated internal"
        },
        {
          "ancestorTitles": ["Query.business internal"],
          "duration": 61,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Query.business internal is able to query land parcels with no date",
          "invocations": 1,
          "location": { "column": 3, "line": 648 },
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "is able to query land parcels with no date"
        },
        {
          "ancestorTitles": ["Query.business internal"],
          "duration": 41,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Query.business internal unauthenticated",
          "invocations": 1,
          "location": { "column": 3, "line": 783 },
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "unauthenticated"
        }
      ],
      "endTime": 1759946549700,
      "message": "",
      "name": "/Users/dominic/Sites/defra/fcp-dal-api/test/graphql/business.test.js",
      "startTime": 1759946549230,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["Query.customer"],
          "duration": 105,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Query.customer authenticated internal",
          "invocations": 1,
          "location": { "column": 3, "line": 78 },
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "authenticated internal"
        },
        {
          "ancestorTitles": ["Query.customer"],
          "duration": 64,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Query.customer authenticated external",
          "invocations": 1,
          "location": { "column": 3, "line": 190 },
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "authenticated external"
        },
        {
          "ancestorTitles": ["Query.customer"],
          "duration": 42,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Query.customer unauthenticated",
          "invocations": 1,
          "location": { "column": 3, "line": 309 },
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "unauthenticated"
        }
      ],
      "endTime": 1759946550088,
      "message": "",
      "name": "/Users/dominic/Sites/defra/fcp-dal-api/test/graphql/customer.test.js",
      "startTime": 1759946549710,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["App initialization"],
          "duration": 4,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "App initialization should initialize the application successfully",
          "invocations": 1,
          "location": { "column": 3, "line": 30 },
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should initialize the application successfully"
        },
        {
          "ancestorTitles": ["App initialization"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "App initialization should handle unhandled rejections",
          "invocations": 1,
          "location": { "column": 3, "line": 51 },
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle unhandled rejections"
        },
        {
          "ancestorTitles": ["App initialization"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "App initialization should handle uncaught exceptions",
          "invocations": 1,
          "location": { "column": 3, "line": 68 },
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle uncaught exceptions"
        }
      ],
      "endTime": 1759946550428,
      "message": "",
      "name": "/Users/dominic/Sites/defra/fcp-dal-api/test/unit/app/index.test.js",
      "startTime": 1759946550098,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["business lock and unlock"],
          "duration": 104,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "business lock and unlock lock a business",
          "invocations": 1,
          "location": { "column": 3, "line": 27 },
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "lock a business"
        },
        {
          "ancestorTitles": ["business lock and unlock"],
          "duration": 60,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "business lock and unlock unlock a business",
          "invocations": 1,
          "location": { "column": 3, "line": 78 },
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "unlock a business"
        }
      ],
      "endTime": 1759946550767,
      "message": "",
      "name": "/Users/dominic/Sites/defra/fcp-dal-api/test/graphql/mutation/business-lock-unlock.test.js",
      "startTime": 1759946550441,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["business"],
          "duration": 100,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "business create a business - withoutUprn",
          "invocations": 1,
          "location": { "column": 3, "line": 164 },
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "create a business - withoutUprn"
        },
        {
          "ancestorTitles": ["business"],
          "duration": 50,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "business create a business - withUprn",
          "invocations": 1,
          "location": { "column": 3, "line": 258 },
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "create a business - withUprn"
        }
      ],
      "endTime": 1759946551092,
      "message": "",
      "name": "/Users/dominic/Sites/defra/fcp-dal-api/test/graphql/mutation/business-create.test.js",
      "startTime": 1759946550777,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["getJwtPublicKey"],
          "duration": 52,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "getJwtPublicKey should return the public key and proxy called",
          "invocations": 1,
          "location": { "column": 3, "line": 108 },
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should return the public key and proxy called"
        },
        {
          "ancestorTitles": ["getJwtPublicKey"],
          "duration": 14,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "getJwtPublicKey should return the public key without proxy",
          "invocations": 1,
          "location": { "column": 3, "line": 124 },
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should return the public key without proxy"
        },
        {
          "ancestorTitles": ["getAuth"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "getAuth should return an empty object when no authHeader is provided",
          "invocations": 1,
          "location": { "column": 3, "line": 143 },
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should return an empty object when no authHeader is provided"
        },
        {
          "ancestorTitles": ["getAuth"],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "getAuth should return decoded token when token is valid",
          "invocations": 1,
          "location": { "column": 3, "line": 147 },
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should return decoded token when token is valid"
        },
        {
          "ancestorTitles": ["getAuth"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "getAuth should return an empty object when token cannot be decoded",
          "invocations": 1,
          "location": { "column": 3, "line": 153 },
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should return an empty object when token cannot be decoded"
        },
        {
          "ancestorTitles": ["getAuth"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "getAuth should return an empty object when token verification fails, due to incorrect signing key",
          "invocations": 1,
          "location": { "column": 3, "line": 158 },
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should return an empty object when token verification fails, due to incorrect signing key"
        },
        {
          "ancestorTitles": ["getAuth"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "getAuth should return an empty object when token verification fails, due to token expiry",
          "invocations": 1,
          "location": { "column": 3, "line": 163 },
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should return an empty object when token verification fails, due to token expiry"
        },
        {
          "ancestorTitles": ["checkAuthGroup"],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "checkAuthGroup checkAuthGroup should not throw an error for admins with correct group",
          "invocations": 1,
          "location": { "column": 3, "line": 177 },
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "checkAuthGroup should not throw an error for admins with correct group"
        },
        {
          "ancestorTitles": ["checkAuthGroup"],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "checkAuthGroup checkAuthGroup should throw Unauthorized when user is not in AD groups",
          "invocations": 1,
          "location": { "column": 3, "line": 181 },
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "checkAuthGroup should throw Unauthorized when user is not in AD groups"
        },
        {
          "ancestorTitles": ["checkAuthGroup"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "checkAuthGroup checkAuthGroup should throw Unauthorized when user is not in specified AD group",
          "invocations": 1,
          "location": { "column": 3, "line": 186 },
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "checkAuthGroup should throw Unauthorized when user is not in specified AD group"
        },
        {
          "ancestorTitles": ["checkAuthGroup"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "checkAuthGroup expect authGroups to match .env.test setup",
          "invocations": 1,
          "location": { "column": 3, "line": 191 },
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "expect authGroups to match .env.test setup"
        },
        {
          "ancestorTitles": ["authDirectiveTransformer"],
          "duration": 3,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "authDirectiveTransformer authDirectiveTransformer should not impact output schema",
          "invocations": 1,
          "location": { "column": 3, "line": 239 },
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "authDirectiveTransformer should not impact output schema"
        }
      ],
      "endTime": 1759946551535,
      "message": "",
      "name": "/Users/dominic/Sites/defra/fcp-dal-api/test/unit/auth/authenticate.test.js",
      "startTime": 1759946551103,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["Server config and startup", "Server Initialization"],
          "duration": 118,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Server config and startup Server Initialization should set timeout from env var",
          "invocations": 1,
          "location": { "column": 5, "line": 58 },
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should set timeout from env var"
        },
        {
          "ancestorTitles": ["Server config and startup", "Server Initialization"],
          "duration": 13,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Server config and startup Server Initialization idle socket should be closed by timeout",
          "invocations": 1,
          "location": { "column": 5, "line": 62 },
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "passed",
          "title": "idle socket should be closed by timeout"
        },
        {
          "ancestorTitles": ["Server config and startup", "Server Initialization"],
          "duration": 5,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Server config and startup Server Initialization should register routes",
          "invocations": 1,
          "location": { "column": 5, "line": 71 },
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should register routes"
        },
        {
          "ancestorTitles": ["Server config and startup", "Middleware behavior"],
          "duration": 7,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Server config and startup Middleware behavior onRequest adds transactionId and traceId",
          "invocations": 1,
          "location": { "column": 5, "line": 80 },
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "onRequest adds transactionId and traceId"
        },
        {
          "ancestorTitles": ["Server config and startup", "Middleware behavior"],
          "duration": 6,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Server config and startup Middleware behavior response event logs and sends metrics (non-health path)",
          "invocations": 1,
          "location": { "column": 5, "line": 99 },
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "response event logs and sends metrics (non-health path)"
        },
        {
          "ancestorTitles": ["Server config and startup", "Middleware behavior"],
          "duration": 7,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Server config and startup Middleware behavior response event skips metrics for health path",
          "invocations": 1,
          "location": { "column": 5, "line": 118 },
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "response event skips metrics for health path"
        }
      ],
      "endTime": 1759946551734,
      "message": "",
      "name": "/Users/dominic/Sites/defra/fcp-dal-api/test/unit/integration/narrow/app/server.test.js",
      "startTime": 1759946551538,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["GraphQL Dashboard test"],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "GraphQL Dashboard test expects graphql dashboard to be enabled when GRAPHQL_DASHBOARD_ENABLED is set in .env.test",
          "invocations": 1,
          "location": { "column": 3, "line": 21 },
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "expects graphql dashboard to be enabled when GRAPHQL_DASHBOARD_ENABLED is set in .env.test"
        },
        {
          "ancestorTitles": ["GraphQL Dashboard test"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "GraphQL Dashboard test enables graphql dashboard when GRAPHQL_DASHBOARD_ENABLED is enabled",
          "invocations": 1,
          "location": { "column": 3, "line": 26 },
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "enables graphql dashboard when GRAPHQL_DASHBOARD_ENABLED is enabled"
        },
        {
          "ancestorTitles": ["GraphQL Dashboard test"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "GraphQL Dashboard test disables graphql dashboard when GRAPHQL_DASHBOARD_ENABLED is disabled",
          "invocations": 1,
          "location": { "column": 3, "line": 34 },
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "disables graphql dashboard when GRAPHQL_DASHBOARD_ENABLED is disabled"
        }
      ],
      "endTime": 1759946551974,
      "message": "",
      "name": "/Users/dominic/Sites/defra/fcp-dal-api/test/unit/integration/narrow/routes/graphql-dashboard.test.js",
      "startTime": 1759946551738,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["Healthy test"],
          "duration": 14,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Healthy test GET /healthy route returns 200 with services status when health check is enabled",
          "invocations": 1,
          "location": { "column": 3, "line": 46 },
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "GET /healthy route returns 200 with services status when health check is enabled"
        },
        {
          "ancestorTitles": ["Healthy test"],
          "duration": 4,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Healthy test GET /healthy route returns 200 with services status when health check is disabled",
          "invocations": 1,
          "location": { "column": 3, "line": 64 },
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "GET /healthy route returns 200 with services status when health check is disabled"
        },
        {
          "ancestorTitles": ["Healthy test"],
          "duration": 3,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Healthy test GET /healthy route returns 200 with services status when health check is disabled in production",
          "invocations": 1,
          "location": { "column": 3, "line": 80 },
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "GET /healthy route returns 200 with services status when health check is disabled in production"
        },
        {
          "ancestorTitles": ["Healthy test"],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Healthy test GET /healthy route returns 200 with services status when RuralPaymentsPortal is down",
          "invocations": 1,
          "location": { "column": 3, "line": 96 },
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "GET /healthy route returns 200 with services status when RuralPaymentsPortal is down"
        },
        {
          "ancestorTitles": ["Healthy test"],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Healthy test GET /healthy route returns 500 when RuralPaymentsPortal check throws error",
          "invocations": 1,
          "location": { "column": 3, "line": 112 },
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "GET /healthy route returns 500 when RuralPaymentsPortal check throws error"
        },
        {
          "ancestorTitles": ["Healthy test"],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Healthy test GET /healthy route returns 200 with services status when health check disabled",
          "invocations": 1,
          "location": { "column": 3, "line": 125 },
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "GET /healthy route returns 200 with services status when health check disabled"
        }
      ],
      "endTime": 1759946552175,
      "message": "",
      "name": "/Users/dominic/Sites/defra/fcp-dal-api/test/unit/integration/narrow/routes/healthy.test.js",
      "startTime": 1759946551984,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["Healthz test"],
          "duration": 24,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Healthz test GET /health route returns 200",
          "invocations": 1,
          "location": { "column": 3, "line": 8 },
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "GET /health route returns 200"
        }
      ],
      "endTime": 1759946552406,
      "message": "",
      "name": "/Users/dominic/Sites/defra/fcp-dal-api/test/unit/integration/narrow/routes/health.test.js",
      "startTime": 1759946552182,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["Rural Payments Business", "getOrganisationById"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Rural Payments Business getOrganisationById should return organisation data when found",
          "invocations": 1,
          "location": { "column": 5, "line": 107 },
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should return organisation data when found"
        },
        {
          "ancestorTitles": ["Rural Payments Business", "getOrganisationById"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Rural Payments Business getOrganisationById should throw NotFound when organisation not found",
          "invocations": 1,
          "location": { "column": 5, "line": 116 },
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should throw NotFound when organisation not found"
        },
        {
          "ancestorTitles": ["Rural Payments Business", "getOrganisationBySBI"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Rural Payments Business getOrganisationBySBI should return organisation data when found by SBI",
          "invocations": 1,
          "location": { "column": 5, "line": 130 },
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should return organisation data when found by SBI"
        },
        {
          "ancestorTitles": ["Rural Payments Business", "getOrganisationIdBySBI"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Rural Payments Business getOrganisationIdBySBI should return organisation ID when found by SBI - internal",
          "invocations": 1,
          "location": { "column": 5, "line": 153 },
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should return organisation ID when found by SBI - internal"
        },
        {
          "ancestorTitles": ["Rural Payments Business", "getOrganisationIdBySBI"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Rural Payments Business getOrganisationIdBySBI should return organisation ID when found by SBI - external",
          "invocations": 1,
          "location": { "column": 5, "line": 172 },
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should return organisation ID when found by SBI - external"
        },
        {
          "ancestorTitles": ["Rural Payments Business", "getOrganisationIdBySBI"],
          "duration": 3,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Rural Payments Business getOrganisationIdBySBI should throw NotFound when organisation not found by SBI",
          "invocations": 1,
          "location": { "column": 5, "line": 180 },
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should throw NotFound when organisation not found by SBI"
        },
        {
          "ancestorTitles": ["Rural Payments Business", "getOrganisationCustomersByOrganisationId"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Rural Payments Business getOrganisationCustomersByOrganisationId should return organisation customers",
          "invocations": 1,
          "location": { "column": 5, "line": 194 },
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should return organisation customers"
        },
        {
          "ancestorTitles": ["Rural Payments Business", "getParcelsByOrganisationIdAndDate"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Rural Payments Business getParcelsByOrganisationIdAndDate should return parcels for organisation and date",
          "invocations": 1,
          "location": { "column": 5, "line": 205 },
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should return parcels for organisation and date"
        },
        {
          "ancestorTitles": [
            "Rural Payments Business",
            "getParcelEffectiveDatesByOrganisationIdAndDate"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Rural Payments Business getParcelEffectiveDatesByOrganisationIdAndDate should return parcel effective dates",
          "invocations": 1,
          "location": { "column": 5, "line": 219 },
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should return parcel effective dates"
        },
        {
          "ancestorTitles": ["Rural Payments Business", "getCoversByOrgSheetParcelIdDate"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Rural Payments Business getCoversByOrgSheetParcelIdDate should return covers for parcel",
          "invocations": 1,
          "location": { "column": 5, "line": 233 },
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should return covers for parcel"
        },
        {
          "ancestorTitles": ["Rural Payments Business", "getCoversSummaryByOrganisationIdAndDate"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Rural Payments Business getCoversSummaryByOrganisationIdAndDate should return covers summary",
          "invocations": 1,
          "location": { "column": 5, "line": 251 },
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should return covers summary"
        },
        {
          "ancestorTitles": ["Rural Payments Business", "getCountyParishHoldingsBySBI"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Rural Payments Business getCountyParishHoldingsBySBI should return county parish holdings list",
          "invocations": 1,
          "location": { "column": 5, "line": 273 },
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should return county parish holdings list"
        },
        {
          "ancestorTitles": ["Rural Payments Business", "getAgreementsBySBI"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Rural Payments Business getAgreementsBySBI should return agreements list",
          "invocations": 1,
          "location": { "column": 5, "line": 289 },
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should return agreements list"
        },
        {
          "ancestorTitles": ["Rural Payments Business", "getApplicationsBySBI"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Rural Payments Business getApplicationsBySBI should return applications list",
          "invocations": 1,
          "location": { "column": 5, "line": 300 },
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should return applications list"
        },
        {
          "ancestorTitles": ["Rural Payments Business", "updateOrganisationDetails"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Rural Payments Business updateOrganisationDetails should call put endpoint and return successful response",
          "invocations": 1,
          "location": { "column": 5, "line": 311 },
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should call put endpoint and return successful response"
        },
        {
          "ancestorTitles": ["Rural Payments Business", "updateOrganisationDetails"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Rural Payments Business updateOrganisationDetails should fail if error is thrown by put request",
          "invocations": 1,
          "location": { "column": 5, "line": 330 },
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should fail if error is thrown by put request"
        },
        {
          "ancestorTitles": ["Rural Payments Business", "formatDateDDMMMYY"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Rural Payments Business formatDateDDMMMYY should correctly format the date",
          "invocations": 1,
          "location": { "column": 5, "line": 347 },
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should correctly format the date"
        },
        {
          "ancestorTitles": ["Rural Payments Business", "lockOrganisation"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Rural Payments Business lockOrganisation should call post endpoint and return successful response",
          "invocations": 1,
          "location": { "column": 5, "line": 355 },
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should call post endpoint and return successful response"
        },
        {
          "ancestorTitles": ["Rural Payments Business", "lockOrganisation"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Rural Payments Business lockOrganisation should fail if error is thrown by post request",
          "invocations": 1,
          "location": { "column": 5, "line": 371 },
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should fail if error is thrown by post request"
        },
        {
          "ancestorTitles": ["Rural Payments Business", "lockOrganisation"],
          "duration": 4,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Rural Payments Business lockOrganisation should throw error when business is already locked",
          "invocations": 1,
          "location": { "column": 5, "line": 386 },
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should throw error when business is already locked"
        },
        {
          "ancestorTitles": ["Rural Payments Business", "unlockOrganisation"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Rural Payments Business unlockOrganisation should call post endpoint and return successful response",
          "invocations": 1,
          "location": { "column": 5, "line": 400 },
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should call post endpoint and return successful response"
        },
        {
          "ancestorTitles": ["Rural Payments Business", "unlockOrganisation"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Rural Payments Business unlockOrganisation should fail if error is thrown by post request",
          "invocations": 1,
          "location": { "column": 5, "line": 416 },
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should fail if error is thrown by post request"
        },
        {
          "ancestorTitles": ["Rural Payments Business", "unlockOrganisation"],
          "duration": 4,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Rural Payments Business unlockOrganisation should throw error when business is already unlocked",
          "invocations": 1,
          "location": { "column": 5, "line": 431 },
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should throw error when business is already unlocked"
        }
      ],
      "endTime": 1759946552568,
      "message": "",
      "name": "/Users/dominic/Sites/defra/fcp-dal-api/test/unit/data-sources/rural-payments-business.test.js",
      "startTime": 1759946552411,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["extractOrgIdFromDefraIdToken"],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "extractOrgIdFromDefraIdToken should extract orgId when relationship matches SBI",
          "invocations": 1,
          "location": { "column": 3, "line": 16 },
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should extract orgId when relationship matches SBI"
        },
        {
          "ancestorTitles": ["extractOrgIdFromDefraIdToken"],
          "duration": 3,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "extractOrgIdFromDefraIdToken should throw BadRequest if no relationship matches SBI",
          "invocations": 1,
          "location": { "column": 3, "line": 30 },
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should throw BadRequest if no relationship matches SBI"
        },
        {
          "ancestorTitles": ["extractOrgIdFromDefraIdToken"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "extractOrgIdFromDefraIdToken should throw BadRequest if relationships is missing",
          "invocations": 1,
          "location": { "column": 3, "line": 43 },
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should throw BadRequest if relationships is missing"
        },
        {
          "ancestorTitles": ["extractOrgIdFromDefraIdToken"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "extractOrgIdFromDefraIdToken should throw BadRequest if relationships is not an array",
          "invocations": 1,
          "location": { "column": 3, "line": 54 },
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should throw BadRequest if relationships is not an array"
        }
      ],
      "endTime": 1759946552731,
      "message": "",
      "name": "/Users/dominic/Sites/defra/fcp-dal-api/test/unit/app/kits-context.test.js",
      "startTime": 1759946552583,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["RuralPayments", "fetch"],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "RuralPayments fetch returns data from RPP",
          "invocations": 1,
          "location": { "column": 5, "line": 44 },
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "returns data from RPP"
        },
        {
          "ancestorTitles": ["RuralPayments", "fetch", "throws upstream errors from RPP"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "RuralPayments fetch throws upstream errors from RPP when the RPP service encounters an error",
          "invocations": 1,
          "location": { "column": 7, "line": 54 },
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "when the RPP service encounters an error"
        },
        {
          "ancestorTitles": ["RuralPayments", "fetch", "throws upstream errors from RPP"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "RuralPayments fetch throws upstream errors from RPP when the RPP service is totally unreachable",
          "invocations": 1,
          "location": { "column": 7, "line": 72 },
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "when the RPP service is totally unreachable"
        },
        {
          "ancestorTitles": ["RuralPayments", "didEncounterError"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "RuralPayments didEncounterError handles RPP errors",
          "invocations": 1,
          "location": { "column": 5, "line": 83 },
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "handles RPP errors"
        },
        {
          "ancestorTitles": ["RuralPayments", "didEncounterError"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "RuralPayments didEncounterError handles unknown RPP errors",
          "invocations": 1,
          "location": { "column": 5, "line": 100 },
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "handles unknown RPP errors"
        },
        {
          "ancestorTitles": ["RuralPayments", "willSendRequest"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "RuralPayments willSendRequest adds email & gateway type header from request headers & gateway type for internal requests",
          "invocations": 1,
          "location": { "column": 5, "line": 119 },
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "adds email & gateway type header from request headers & gateway type for internal requests"
        },
        {
          "ancestorTitles": ["RuralPayments", "willSendRequest"],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "RuralPayments willSendRequest adds crn, Authorization & gateway type header from request headers for external requests",
          "invocations": 1,
          "location": { "column": 5, "line": 133 },
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "adds crn, Authorization & gateway type header from request headers for external requests"
        },
        {
          "ancestorTitles": ["RuralPayments", "willSendRequest"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "RuralPayments willSendRequest throws error if external request headers are missing",
          "invocations": 1,
          "location": { "column": 5, "line": 164 },
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "throws error if external request headers are missing"
        },
        {
          "ancestorTitles": ["RuralPayments", "willSendRequest"],
          "duration": 4,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "RuralPayments willSendRequest throws error if gatewaytype is not internal or external",
          "invocations": 1,
          "location": { "column": 5, "line": 187 },
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "throws error if gatewaytype is not internal or external"
        },
        {
          "ancestorTitles": ["RuralPayments", "trace"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "RuralPayments trace logs request and response details",
          "invocations": 1,
          "location": { "column": 5, "line": 207 },
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "logs request and response details"
        },
        {
          "ancestorTitles": ["RuralPayments", "requestDeduplicationPolicyFor"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "RuralPayments requestDeduplicationPolicyFor returns correct deduplication policy",
          "invocations": 1,
          "location": { "column": 5, "line": 252 },
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "returns correct deduplication policy"
        },
        {
          "ancestorTitles": ["RuralPayments", "parseBody"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "RuralPayments parseBody returns NO_CONTENT status for 204 responses",
          "invocations": 1,
          "location": { "column": 5, "line": 267 },
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "returns NO_CONTENT status for 204 responses"
        },
        {
          "ancestorTitles": ["RuralPayments", "parseBody"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "RuralPayments parseBody parses JSON response when content type is application/json",
          "invocations": 1,
          "location": { "column": 5, "line": 279 },
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "parses JSON response when content type is application/json"
        },
        {
          "ancestorTitles": ["RuralPayments", "parseBody"],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "RuralPayments parseBody parses text response for non-JSON content",
          "invocations": 1,
          "location": { "column": 5, "line": 297 },
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "parses text response for non-JSON content"
        },
        {
          "ancestorTitles": ["RuralPayments", "throwIfResponseIsError"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "RuralPayments throwIfResponseIsError returns NO_CONTENT status for 204 responses",
          "invocations": 1,
          "location": { "column": 5, "line": 317 },
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "returns NO_CONTENT status for 204 responses"
        },
        {
          "ancestorTitles": ["extractCrnFromDefraIdToken"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "extractCrnFromDefraIdToken extracts crn succesfully from valid token",
          "invocations": 1,
          "location": { "column": 3, "line": 344 },
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "extracts crn succesfully from valid token"
        },
        {
          "ancestorTitles": ["extractCrnFromDefraIdToken"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "extractCrnFromDefraIdToken Throws error when provided an invalid token",
          "invocations": 1,
          "location": { "column": 3, "line": 350 },
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "Throws error when provided an invalid token"
        }
      ],
      "endTime": 1759946552887,
      "message": "",
      "name": "/Users/dominic/Sites/defra/fcp-dal-api/test/unit/data-sources/rural-payments.test.js",
      "startTime": 1759946552748,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["Rural Payments Customer"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Rural Payments Customer should call getExternalPerson for external gateway",
          "invocations": 1,
          "location": { "column": 3, "line": 36 },
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should call getExternalPerson for external gateway"
        },
        {
          "ancestorTitles": ["Rural Payments Customer"],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Rural Payments Customer should handle customer not found",
          "invocations": 1,
          "location": { "column": 3, "line": 44 },
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle customer not found"
        },
        {
          "ancestorTitles": ["Rural Payments Customer"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Rural Payments Customer should handle no notifications",
          "invocations": 1,
          "location": { "column": 3, "line": 65 },
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle no notifications"
        },
        {
          "ancestorTitles": ["Rural Payments Customer"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Rural Payments Customer should fetch notifications from single page",
          "invocations": 1,
          "location": { "column": 3, "line": 78 },
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should fetch notifications from single page"
        },
        {
          "ancestorTitles": ["Rural Payments Customer"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Rural Payments Customer should fetch notifications across pages",
          "invocations": 1,
          "location": { "column": 3, "line": 107 },
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should fetch notifications across pages"
        },
        {
          "ancestorTitles": ["Rural Payments Customer"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Rural Payments Customer should stop fetching once last message found",
          "invocations": 1,
          "location": { "column": 3, "line": 140 },
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should stop fetching once last message found"
        },
        {
          "ancestorTitles": ["Rural Payments Customer"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Rural Payments Customer should filter notifications using dateFrom argument",
          "invocations": 1,
          "location": { "column": 3, "line": 164 },
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should filter notifications using dateFrom argument"
        },
        {
          "ancestorTitles": ["Rural Payments Customer"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Rural Payments Customer should return security answers via getAuthenticateAnswersByCRN",
          "invocations": 1,
          "location": { "column": 3, "line": 182 },
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should return security answers via getAuthenticateAnswersByCRN"
        },
        {
          "ancestorTitles": ["Rural Payments Customer"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Rural Payments Customer should handle 204 reponse and return null via getAuthenticateAnswersByCRN",
          "invocations": 1,
          "location": { "column": 3, "line": 197 },
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle 204 reponse and return null via getAuthenticateAnswersByCRN"
        },
        {
          "ancestorTitles": ["Rural Payments Customer"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Rural Payments Customer should throw error via getAuthenticateAnswersByCRN",
          "invocations": 1,
          "location": { "column": 3, "line": 206 },
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should throw error via getAuthenticateAnswersByCRN"
        }
      ],
      "endTime": 1759946553074,
      "message": "",
      "name": "/Users/dominic/Sites/defra/fcp-dal-api/test/unit/data-sources/rural-payments-customer.test.js",
      "startTime": 1759946552899,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["RuralPayments Custom Fetch"],
          "duration": 57,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "RuralPayments Custom Fetch should call fetch with an AbortSignal with timeout and proxy dispatcher",
          "invocations": 1,
          "location": { "column": 3, "line": 48 },
          "numPassingAsserts": 5,
          "retryReasons": [],
          "status": "passed",
          "title": "should call fetch with an AbortSignal with timeout and proxy dispatcher"
        },
        {
          "ancestorTitles": ["RuralPayments Custom Fetch"],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "RuralPayments Custom Fetch should call fetch with an AbortSignal with timeout and proxy disabled without mTLS",
          "invocations": 1,
          "location": { "column": 3, "line": 95 },
          "numPassingAsserts": 5,
          "retryReasons": [],
          "status": "passed",
          "title": "should call fetch with an AbortSignal with timeout and proxy disabled without mTLS"
        }
      ],
      "endTime": 1759946553209,
      "message": "",
      "name": "/Users/dominic/Sites/defra/fcp-dal-api/test/unit/data-sources/rural-payments-custom-fetch.test.js",
      "startTime": 1759946553087,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "land",
          "invocations": 1,
          "location": { "column": 3, "line": 44 },
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "land"
        },
        {
          "ancestorTitles": [],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "customers",
          "invocations": 1,
          "location": { "column": 3, "line": 48 },
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "customers"
        },
        {
          "ancestorTitles": [],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "customer",
          "invocations": 1,
          "location": { "column": 3, "line": 55 },
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "customer"
        },
        {
          "ancestorTitles": [],
          "duration": 4,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "handle customer not found",
          "invocations": 1,
          "location": { "column": 3, "line": 64 },
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "handle customer not found"
        },
        {
          "ancestorTitles": [],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "countyParishHoldings",
          "invocations": 1,
          "location": { "column": 3, "line": 70 },
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "countyParishHoldings"
        },
        {
          "ancestorTitles": [],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "agreements",
          "invocations": 1,
          "location": { "column": 3, "line": 111 },
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "agreements"
        },
        {
          "ancestorTitles": [],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "should return applications list for specified SBI",
          "invocations": 1,
          "location": { "column": 5, "line": 176 },
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should return applications list for specified SBI"
        },
        {
          "ancestorTitles": [],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "permissionGroups",
          "invocations": 1,
          "location": { "column": 3, "line": 247 },
          "numPassingAsserts": 5,
          "retryReasons": [],
          "status": "passed",
          "title": "permissionGroups"
        }
      ],
      "endTime": 1759946553316,
      "message": "",
      "name": "/Users/dominic/Sites/defra/fcp-dal-api/test/unit/resolvers/business.test.js",
      "startTime": 1759946553222,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["Customer transformer"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Customer transformer #transformBusinessCustomerToCustomerRole",
          "invocations": 1,
          "location": { "column": 3, "line": 18 },
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "#transformBusinessCustomerToCustomerRole"
        },
        {
          "ancestorTitles": ["Customer transformer"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Customer transformer #transformPersonSummaryToCustomerAuthorisedBusinesses",
          "invocations": 1,
          "location": { "column": 3, "line": 31 },
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "#transformPersonSummaryToCustomerAuthorisedBusinesses"
        },
        {
          "ancestorTitles": [
            "Customer transformer",
            "#transformBusinessCustomerToCustomerPermissionGroups"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Customer transformer #transformBusinessCustomerToCustomerPermissionGroups should fail with NO_ACCESS if no customers",
          "invocations": 1,
          "location": { "column": 5, "line": 56 },
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should fail with NO_ACCESS if no customers"
        },
        {
          "ancestorTitles": [
            "Customer transformer",
            "#transformBusinessCustomerToCustomerPermissionGroups"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Customer transformer #transformBusinessCustomerToCustomerPermissionGroups should fail with NO_ACCESS if customers with no privileges",
          "invocations": 1,
          "location": { "column": 5, "line": 77 },
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should fail with NO_ACCESS if customers with no privileges"
        },
        {
          "ancestorTitles": [
            "Customer transformer",
            "#transformBusinessCustomerToCustomerPermissionGroups"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Customer transformer #transformBusinessCustomerToCustomerPermissionGroups should return correct privilege",
          "invocations": 1,
          "location": { "column": 5, "line": 98 },
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should return correct privilege"
        },
        {
          "ancestorTitles": [
            "Customer transformer",
            "#transformBusinessCustomerToCustomerPermissionGroups"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Customer transformer #transformBusinessCustomerToCustomerPermissionGroups should return highest privilege when two in same group",
          "invocations": 1,
          "location": { "column": 5, "line": 119 },
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should return highest privilege when two in same group"
        },
        {
          "ancestorTitles": [
            "Customer transformer",
            "#transformBusinessCustomerToCustomerPermissionGroups"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Customer transformer #transformBusinessCustomerToCustomerPermissionGroups should be case insensitive",
          "invocations": 1,
          "location": { "column": 5, "line": 147 },
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should be case insensitive"
        },
        {
          "ancestorTitles": [
            "Customer transformer",
            "#transformBusinessCustomerToCustomerPermissionGroups"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Customer transformer #transformBusinessCustomerToCustomerPermissionGroups given \"NO ACCESS - BPS - SA\" in customer.privileges, should return {\"id\": \"BASIC_PAYMENT_SCHEME\", \"level\": \"NO_ACCESS\"}",
          "invocations": 1,
          "location": { "column": 21, "line": 232 },
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given \"NO ACCESS - BPS - SA\" in customer.privileges, should return {\"id\": \"BASIC_PAYMENT_SCHEME\", \"level\": \"NO_ACCESS\"}"
        },
        {
          "ancestorTitles": [
            "Customer transformer",
            "#transformBusinessCustomerToCustomerPermissionGroups"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Customer transformer #transformBusinessCustomerToCustomerPermissionGroups given \"NO ACCESS - BPS\" in customer.privileges, should return {\"id\": \"BASIC_PAYMENT_SCHEME\", \"level\": \"NO_ACCESS\"}",
          "invocations": 1,
          "location": { "column": 21, "line": 232 },
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given \"NO ACCESS - BPS\" in customer.privileges, should return {\"id\": \"BASIC_PAYMENT_SCHEME\", \"level\": \"NO_ACCESS\"}"
        },
        {
          "ancestorTitles": [
            "Customer transformer",
            "#transformBusinessCustomerToCustomerPermissionGroups"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Customer transformer #transformBusinessCustomerToCustomerPermissionGroups given \"VIEW - BPS - SA\" in customer.privileges, should return {\"id\": \"BASIC_PAYMENT_SCHEME\", \"level\": \"VIEW\"}",
          "invocations": 1,
          "location": { "column": 21, "line": 232 },
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given \"VIEW - BPS - SA\" in customer.privileges, should return {\"id\": \"BASIC_PAYMENT_SCHEME\", \"level\": \"VIEW\"}"
        },
        {
          "ancestorTitles": [
            "Customer transformer",
            "#transformBusinessCustomerToCustomerPermissionGroups"
          ],
          "duration": 3,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Customer transformer #transformBusinessCustomerToCustomerPermissionGroups given \"View - bps\" in customer.privileges, should return {\"id\": \"BASIC_PAYMENT_SCHEME\", \"level\": \"VIEW\"}",
          "invocations": 1,
          "location": { "column": 21, "line": 232 },
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given \"View - bps\" in customer.privileges, should return {\"id\": \"BASIC_PAYMENT_SCHEME\", \"level\": \"VIEW\"}"
        },
        {
          "ancestorTitles": [
            "Customer transformer",
            "#transformBusinessCustomerToCustomerPermissionGroups"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Customer transformer #transformBusinessCustomerToCustomerPermissionGroups given \"AMEND - BPS - SA\" in customer.privileges, should return {\"id\": \"BASIC_PAYMENT_SCHEME\", \"level\": \"AMEND\"}",
          "invocations": 1,
          "location": { "column": 21, "line": 232 },
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given \"AMEND - BPS - SA\" in customer.privileges, should return {\"id\": \"BASIC_PAYMENT_SCHEME\", \"level\": \"AMEND\"}"
        },
        {
          "ancestorTitles": [
            "Customer transformer",
            "#transformBusinessCustomerToCustomerPermissionGroups"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Customer transformer #transformBusinessCustomerToCustomerPermissionGroups given \"Amend - bps\" in customer.privileges, should return {\"id\": \"BASIC_PAYMENT_SCHEME\", \"level\": \"AMEND\"}",
          "invocations": 1,
          "location": { "column": 21, "line": 232 },
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given \"Amend - bps\" in customer.privileges, should return {\"id\": \"BASIC_PAYMENT_SCHEME\", \"level\": \"AMEND\"}"
        },
        {
          "ancestorTitles": [
            "Customer transformer",
            "#transformBusinessCustomerToCustomerPermissionGroups"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Customer transformer #transformBusinessCustomerToCustomerPermissionGroups given \"SUBMIT - BPS - SA\" in customer.privileges, should return {\"id\": \"BASIC_PAYMENT_SCHEME\", \"level\": \"SUBMIT\"}",
          "invocations": 1,
          "location": { "column": 21, "line": 232 },
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given \"SUBMIT - BPS - SA\" in customer.privileges, should return {\"id\": \"BASIC_PAYMENT_SCHEME\", \"level\": \"SUBMIT\"}"
        },
        {
          "ancestorTitles": [
            "Customer transformer",
            "#transformBusinessCustomerToCustomerPermissionGroups"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Customer transformer #transformBusinessCustomerToCustomerPermissionGroups given \"Submit - bps\" in customer.privileges, should return {\"id\": \"BASIC_PAYMENT_SCHEME\", \"level\": \"SUBMIT\"}",
          "invocations": 1,
          "location": { "column": 21, "line": 232 },
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given \"Submit - bps\" in customer.privileges, should return {\"id\": \"BASIC_PAYMENT_SCHEME\", \"level\": \"SUBMIT\"}"
        },
        {
          "ancestorTitles": [
            "Customer transformer",
            "#transformBusinessCustomerToCustomerPermissionGroups"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Customer transformer #transformBusinessCustomerToCustomerPermissionGroups given \"View - business\" in customer.privileges, should return {\"id\": \"BUSINESS_DETAILS\", \"level\": \"VIEW\"}",
          "invocations": 1,
          "location": { "column": 21, "line": 232 },
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given \"View - business\" in customer.privileges, should return {\"id\": \"BUSINESS_DETAILS\", \"level\": \"VIEW\"}"
        },
        {
          "ancestorTitles": [
            "Customer transformer",
            "#transformBusinessCustomerToCustomerPermissionGroups"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Customer transformer #transformBusinessCustomerToCustomerPermissionGroups given \"Amend - business\" in customer.privileges, should return {\"id\": \"BUSINESS_DETAILS\", \"level\": \"AMEND\"}",
          "invocations": 1,
          "location": { "column": 21, "line": 232 },
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given \"Amend - business\" in customer.privileges, should return {\"id\": \"BUSINESS_DETAILS\", \"level\": \"AMEND\"}"
        },
        {
          "ancestorTitles": [
            "Customer transformer",
            "#transformBusinessCustomerToCustomerPermissionGroups"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Customer transformer #transformBusinessCustomerToCustomerPermissionGroups given \"Make legal changes - business\" in customer.privileges, should return {\"id\": \"BUSINESS_DETAILS\", \"level\": \"MAKE_LEGAL_CHANGES\"}",
          "invocations": 1,
          "location": { "column": 21, "line": 232 },
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given \"Make legal changes - business\" in customer.privileges, should return {\"id\": \"BUSINESS_DETAILS\", \"level\": \"MAKE_LEGAL_CHANGES\"}"
        },
        {
          "ancestorTitles": [
            "Customer transformer",
            "#transformBusinessCustomerToCustomerPermissionGroups"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Customer transformer #transformBusinessCustomerToCustomerPermissionGroups given \"Full permission - business\" in customer.privileges, should return {\"id\": \"BUSINESS_DETAILS\", \"level\": \"FULL_PERMISSION\"}",
          "invocations": 1,
          "location": { "column": 21, "line": 232 },
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given \"Full permission - business\" in customer.privileges, should return {\"id\": \"BUSINESS_DETAILS\", \"level\": \"FULL_PERMISSION\"}"
        },
        {
          "ancestorTitles": [
            "Customer transformer",
            "#transformBusinessCustomerToCustomerPermissionGroups"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Customer transformer #transformBusinessCustomerToCustomerPermissionGroups given \"NO ACCESS - CS AGREE - SA\" in customer.privileges, should return {\"id\": \"COUNTRYSIDE_STEWARDSHIP_AGREEMENTS\", \"level\": \"NO_ACCESS\"}",
          "invocations": 1,
          "location": { "column": 21, "line": 232 },
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given \"NO ACCESS - CS AGREE - SA\" in customer.privileges, should return {\"id\": \"COUNTRYSIDE_STEWARDSHIP_AGREEMENTS\", \"level\": \"NO_ACCESS\"}"
        },
        {
          "ancestorTitles": [
            "Customer transformer",
            "#transformBusinessCustomerToCustomerPermissionGroups"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Customer transformer #transformBusinessCustomerToCustomerPermissionGroups given \"NO ACCESS - CS AGREE\" in customer.privileges, should return {\"id\": \"COUNTRYSIDE_STEWARDSHIP_AGREEMENTS\", \"level\": \"NO_ACCESS\"}",
          "invocations": 1,
          "location": { "column": 21, "line": 232 },
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given \"NO ACCESS - CS AGREE\" in customer.privileges, should return {\"id\": \"COUNTRYSIDE_STEWARDSHIP_AGREEMENTS\", \"level\": \"NO_ACCESS\"}"
        },
        {
          "ancestorTitles": [
            "Customer transformer",
            "#transformBusinessCustomerToCustomerPermissionGroups"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Customer transformer #transformBusinessCustomerToCustomerPermissionGroups given \"VIEW - CS AGREE - SA\" in customer.privileges, should return {\"id\": \"COUNTRYSIDE_STEWARDSHIP_AGREEMENTS\", \"level\": \"VIEW\"}",
          "invocations": 1,
          "location": { "column": 21, "line": 232 },
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given \"VIEW - CS AGREE - SA\" in customer.privileges, should return {\"id\": \"COUNTRYSIDE_STEWARDSHIP_AGREEMENTS\", \"level\": \"VIEW\"}"
        },
        {
          "ancestorTitles": [
            "Customer transformer",
            "#transformBusinessCustomerToCustomerPermissionGroups"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Customer transformer #transformBusinessCustomerToCustomerPermissionGroups given \"View - cs agree\" in customer.privileges, should return {\"id\": \"COUNTRYSIDE_STEWARDSHIP_AGREEMENTS\", \"level\": \"VIEW\"}",
          "invocations": 1,
          "location": { "column": 21, "line": 232 },
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given \"View - cs agree\" in customer.privileges, should return {\"id\": \"COUNTRYSIDE_STEWARDSHIP_AGREEMENTS\", \"level\": \"VIEW\"}"
        },
        {
          "ancestorTitles": [
            "Customer transformer",
            "#transformBusinessCustomerToCustomerPermissionGroups"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Customer transformer #transformBusinessCustomerToCustomerPermissionGroups given \"AMEND - CS AGREE - SA\" in customer.privileges, should return {\"id\": \"COUNTRYSIDE_STEWARDSHIP_AGREEMENTS\", \"level\": \"AMEND\"}",
          "invocations": 1,
          "location": { "column": 21, "line": 232 },
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given \"AMEND - CS AGREE - SA\" in customer.privileges, should return {\"id\": \"COUNTRYSIDE_STEWARDSHIP_AGREEMENTS\", \"level\": \"AMEND\"}"
        },
        {
          "ancestorTitles": [
            "Customer transformer",
            "#transformBusinessCustomerToCustomerPermissionGroups"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Customer transformer #transformBusinessCustomerToCustomerPermissionGroups given \"Amend - cs agree\" in customer.privileges, should return {\"id\": \"COUNTRYSIDE_STEWARDSHIP_AGREEMENTS\", \"level\": \"AMEND\"}",
          "invocations": 1,
          "location": { "column": 21, "line": 232 },
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given \"Amend - cs agree\" in customer.privileges, should return {\"id\": \"COUNTRYSIDE_STEWARDSHIP_AGREEMENTS\", \"level\": \"AMEND\"}"
        },
        {
          "ancestorTitles": [
            "Customer transformer",
            "#transformBusinessCustomerToCustomerPermissionGroups"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Customer transformer #transformBusinessCustomerToCustomerPermissionGroups given \"SUBMIT - CS AGREE - SA\" in customer.privileges, should return {\"id\": \"COUNTRYSIDE_STEWARDSHIP_AGREEMENTS\", \"level\": \"SUBMIT\"}",
          "invocations": 1,
          "location": { "column": 21, "line": 232 },
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given \"SUBMIT - CS AGREE - SA\" in customer.privileges, should return {\"id\": \"COUNTRYSIDE_STEWARDSHIP_AGREEMENTS\", \"level\": \"SUBMIT\"}"
        },
        {
          "ancestorTitles": [
            "Customer transformer",
            "#transformBusinessCustomerToCustomerPermissionGroups"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Customer transformer #transformBusinessCustomerToCustomerPermissionGroups given \"Submit - cs agree\" in customer.privileges, should return {\"id\": \"COUNTRYSIDE_STEWARDSHIP_AGREEMENTS\", \"level\": \"SUBMIT\"}",
          "invocations": 1,
          "location": { "column": 21, "line": 232 },
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given \"Submit - cs agree\" in customer.privileges, should return {\"id\": \"COUNTRYSIDE_STEWARDSHIP_AGREEMENTS\", \"level\": \"SUBMIT\"}"
        },
        {
          "ancestorTitles": [
            "Customer transformer",
            "#transformBusinessCustomerToCustomerPermissionGroups"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Customer transformer #transformBusinessCustomerToCustomerPermissionGroups given \"NO ACCESS - CS APP - SA\" in customer.privileges, should return {\"id\": \"COUNTRYSIDE_STEWARDSHIP_APPLICATIONS\", \"level\": \"NO_ACCESS\"}",
          "invocations": 1,
          "location": { "column": 21, "line": 232 },
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given \"NO ACCESS - CS APP - SA\" in customer.privileges, should return {\"id\": \"COUNTRYSIDE_STEWARDSHIP_APPLICATIONS\", \"level\": \"NO_ACCESS\"}"
        },
        {
          "ancestorTitles": [
            "Customer transformer",
            "#transformBusinessCustomerToCustomerPermissionGroups"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Customer transformer #transformBusinessCustomerToCustomerPermissionGroups given \"NO ACCESS - CS APP\" in customer.privileges, should return {\"id\": \"COUNTRYSIDE_STEWARDSHIP_APPLICATIONS\", \"level\": \"NO_ACCESS\"}",
          "invocations": 1,
          "location": { "column": 21, "line": 232 },
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given \"NO ACCESS - CS APP\" in customer.privileges, should return {\"id\": \"COUNTRYSIDE_STEWARDSHIP_APPLICATIONS\", \"level\": \"NO_ACCESS\"}"
        },
        {
          "ancestorTitles": [
            "Customer transformer",
            "#transformBusinessCustomerToCustomerPermissionGroups"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Customer transformer #transformBusinessCustomerToCustomerPermissionGroups given \"VIEW - CS APP - SA\" in customer.privileges, should return {\"id\": \"COUNTRYSIDE_STEWARDSHIP_APPLICATIONS\", \"level\": \"VIEW\"}",
          "invocations": 1,
          "location": { "column": 21, "line": 232 },
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given \"VIEW - CS APP - SA\" in customer.privileges, should return {\"id\": \"COUNTRYSIDE_STEWARDSHIP_APPLICATIONS\", \"level\": \"VIEW\"}"
        },
        {
          "ancestorTitles": [
            "Customer transformer",
            "#transformBusinessCustomerToCustomerPermissionGroups"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Customer transformer #transformBusinessCustomerToCustomerPermissionGroups given \"VIEW - CS APP\" in customer.privileges, should return {\"id\": \"COUNTRYSIDE_STEWARDSHIP_APPLICATIONS\", \"level\": \"VIEW\"}",
          "invocations": 1,
          "location": { "column": 21, "line": 232 },
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given \"VIEW - CS APP\" in customer.privileges, should return {\"id\": \"COUNTRYSIDE_STEWARDSHIP_APPLICATIONS\", \"level\": \"VIEW\"}"
        },
        {
          "ancestorTitles": [
            "Customer transformer",
            "#transformBusinessCustomerToCustomerPermissionGroups"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Customer transformer #transformBusinessCustomerToCustomerPermissionGroups given \"AMEND - CS APP - SA\" in customer.privileges, should return {\"id\": \"COUNTRYSIDE_STEWARDSHIP_APPLICATIONS\", \"level\": \"AMEND\"}",
          "invocations": 1,
          "location": { "column": 21, "line": 232 },
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given \"AMEND - CS APP - SA\" in customer.privileges, should return {\"id\": \"COUNTRYSIDE_STEWARDSHIP_APPLICATIONS\", \"level\": \"AMEND\"}"
        },
        {
          "ancestorTitles": [
            "Customer transformer",
            "#transformBusinessCustomerToCustomerPermissionGroups"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Customer transformer #transformBusinessCustomerToCustomerPermissionGroups given \"Amend - cs app\" in customer.privileges, should return {\"id\": \"COUNTRYSIDE_STEWARDSHIP_APPLICATIONS\", \"level\": \"AMEND\"}",
          "invocations": 1,
          "location": { "column": 21, "line": 232 },
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given \"Amend - cs app\" in customer.privileges, should return {\"id\": \"COUNTRYSIDE_STEWARDSHIP_APPLICATIONS\", \"level\": \"AMEND\"}"
        },
        {
          "ancestorTitles": [
            "Customer transformer",
            "#transformBusinessCustomerToCustomerPermissionGroups"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Customer transformer #transformBusinessCustomerToCustomerPermissionGroups given \"SUBMIT - CS APP - SA\" in customer.privileges, should return {\"id\": \"COUNTRYSIDE_STEWARDSHIP_APPLICATIONS\", \"level\": \"SUBMIT\"}",
          "invocations": 1,
          "location": { "column": 21, "line": 232 },
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given \"SUBMIT - CS APP - SA\" in customer.privileges, should return {\"id\": \"COUNTRYSIDE_STEWARDSHIP_APPLICATIONS\", \"level\": \"SUBMIT\"}"
        },
        {
          "ancestorTitles": [
            "Customer transformer",
            "#transformBusinessCustomerToCustomerPermissionGroups"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Customer transformer #transformBusinessCustomerToCustomerPermissionGroups given \"Submit - cs app\" in customer.privileges, should return {\"id\": \"COUNTRYSIDE_STEWARDSHIP_APPLICATIONS\", \"level\": \"SUBMIT\"}",
          "invocations": 1,
          "location": { "column": 21, "line": 232 },
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given \"Submit - cs app\" in customer.privileges, should return {\"id\": \"COUNTRYSIDE_STEWARDSHIP_APPLICATIONS\", \"level\": \"SUBMIT\"}"
        },
        {
          "ancestorTitles": [
            "Customer transformer",
            "#transformBusinessCustomerToCustomerPermissionGroups"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Customer transformer #transformBusinessCustomerToCustomerPermissionGroups given \"NO ACCESS - ENTITLEMENT - SA\" in customer.privileges, should return {\"id\": \"ENTITLEMENTS\", \"level\": \"NO_ACCESS\"}",
          "invocations": 1,
          "location": { "column": 21, "line": 232 },
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given \"NO ACCESS - ENTITLEMENT - SA\" in customer.privileges, should return {\"id\": \"ENTITLEMENTS\", \"level\": \"NO_ACCESS\"}"
        },
        {
          "ancestorTitles": [
            "Customer transformer",
            "#transformBusinessCustomerToCustomerPermissionGroups"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Customer transformer #transformBusinessCustomerToCustomerPermissionGroups given \"NO ACCESS - ENTITLEMENT\" in customer.privileges, should return {\"id\": \"ENTITLEMENTS\", \"level\": \"NO_ACCESS\"}",
          "invocations": 1,
          "location": { "column": 21, "line": 232 },
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given \"NO ACCESS - ENTITLEMENT\" in customer.privileges, should return {\"id\": \"ENTITLEMENTS\", \"level\": \"NO_ACCESS\"}"
        },
        {
          "ancestorTitles": [
            "Customer transformer",
            "#transformBusinessCustomerToCustomerPermissionGroups"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Customer transformer #transformBusinessCustomerToCustomerPermissionGroups given \"VIEW - ENTITLEMENT - SA\" in customer.privileges, should return {\"id\": \"ENTITLEMENTS\", \"level\": \"VIEW\"}",
          "invocations": 1,
          "location": { "column": 21, "line": 232 },
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given \"VIEW - ENTITLEMENT - SA\" in customer.privileges, should return {\"id\": \"ENTITLEMENTS\", \"level\": \"VIEW\"}"
        },
        {
          "ancestorTitles": [
            "Customer transformer",
            "#transformBusinessCustomerToCustomerPermissionGroups"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Customer transformer #transformBusinessCustomerToCustomerPermissionGroups given \"View - entitlement\" in customer.privileges, should return {\"id\": \"ENTITLEMENTS\", \"level\": \"VIEW\"}",
          "invocations": 1,
          "location": { "column": 21, "line": 232 },
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given \"View - entitlement\" in customer.privileges, should return {\"id\": \"ENTITLEMENTS\", \"level\": \"VIEW\"}"
        },
        {
          "ancestorTitles": [
            "Customer transformer",
            "#transformBusinessCustomerToCustomerPermissionGroups"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Customer transformer #transformBusinessCustomerToCustomerPermissionGroups given \"AMEND - ENTITLEMENT - SA\" in customer.privileges, should return {\"id\": \"ENTITLEMENTS\", \"level\": \"AMEND\"}",
          "invocations": 1,
          "location": { "column": 21, "line": 232 },
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given \"AMEND - ENTITLEMENT - SA\" in customer.privileges, should return {\"id\": \"ENTITLEMENTS\", \"level\": \"AMEND\"}"
        },
        {
          "ancestorTitles": [
            "Customer transformer",
            "#transformBusinessCustomerToCustomerPermissionGroups"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Customer transformer #transformBusinessCustomerToCustomerPermissionGroups given \"Amend - entitlement\" in customer.privileges, should return {\"id\": \"ENTITLEMENTS\", \"level\": \"AMEND\"}",
          "invocations": 1,
          "location": { "column": 21, "line": 232 },
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given \"Amend - entitlement\" in customer.privileges, should return {\"id\": \"ENTITLEMENTS\", \"level\": \"AMEND\"}"
        },
        {
          "ancestorTitles": [
            "Customer transformer",
            "#transformBusinessCustomerToCustomerPermissionGroups"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Customer transformer #transformBusinessCustomerToCustomerPermissionGroups given \"ELM_APPLICATION_NO_ACCESS\" in customer.privileges, should return {\"id\": \"ENVIRONMENTAL_LAND_MANAGEMENT_APPLICATIONS\", \"level\": \"NO_ACCESS\"}",
          "invocations": 1,
          "location": { "column": 21, "line": 232 },
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given \"ELM_APPLICATION_NO_ACCESS\" in customer.privileges, should return {\"id\": \"ENVIRONMENTAL_LAND_MANAGEMENT_APPLICATIONS\", \"level\": \"NO_ACCESS\"}"
        },
        {
          "ancestorTitles": [
            "Customer transformer",
            "#transformBusinessCustomerToCustomerPermissionGroups"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Customer transformer #transformBusinessCustomerToCustomerPermissionGroups given \"ELM_APPLICATION_VIEW\" in customer.privileges, should return {\"id\": \"ENVIRONMENTAL_LAND_MANAGEMENT_APPLICATIONS\", \"level\": \"VIEW\"}",
          "invocations": 1,
          "location": { "column": 21, "line": 232 },
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given \"ELM_APPLICATION_VIEW\" in customer.privileges, should return {\"id\": \"ENVIRONMENTAL_LAND_MANAGEMENT_APPLICATIONS\", \"level\": \"VIEW\"}"
        },
        {
          "ancestorTitles": [
            "Customer transformer",
            "#transformBusinessCustomerToCustomerPermissionGroups"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Customer transformer #transformBusinessCustomerToCustomerPermissionGroups given \"ELM_APPLICATION_AMEND\" in customer.privileges, should return {\"id\": \"ENVIRONMENTAL_LAND_MANAGEMENT_APPLICATIONS\", \"level\": \"AMEND\"}",
          "invocations": 1,
          "location": { "column": 21, "line": 232 },
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given \"ELM_APPLICATION_AMEND\" in customer.privileges, should return {\"id\": \"ENVIRONMENTAL_LAND_MANAGEMENT_APPLICATIONS\", \"level\": \"AMEND\"}"
        },
        {
          "ancestorTitles": [
            "Customer transformer",
            "#transformBusinessCustomerToCustomerPermissionGroups"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Customer transformer #transformBusinessCustomerToCustomerPermissionGroups given \"ELM_APPLICATION_SUBMIT\" in customer.privileges, should return {\"id\": \"ENVIRONMENTAL_LAND_MANAGEMENT_APPLICATIONS\", \"level\": \"SUBMIT\"}",
          "invocations": 1,
          "location": { "column": 21, "line": 232 },
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given \"ELM_APPLICATION_SUBMIT\" in customer.privileges, should return {\"id\": \"ENVIRONMENTAL_LAND_MANAGEMENT_APPLICATIONS\", \"level\": \"SUBMIT\"}"
        },
        {
          "ancestorTitles": [
            "Customer transformer",
            "#transformBusinessCustomerToCustomerPermissionGroups"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Customer transformer #transformBusinessCustomerToCustomerPermissionGroups given \"NO ACCESS - LAND - SA\" in customer.privileges, should return {\"id\": \"LAND_DETAILS\", \"level\": \"NO_ACCESS\"}",
          "invocations": 1,
          "location": { "column": 21, "line": 232 },
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given \"NO ACCESS - LAND - SA\" in customer.privileges, should return {\"id\": \"LAND_DETAILS\", \"level\": \"NO_ACCESS\"}"
        },
        {
          "ancestorTitles": [
            "Customer transformer",
            "#transformBusinessCustomerToCustomerPermissionGroups"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Customer transformer #transformBusinessCustomerToCustomerPermissionGroups given \"NO ACCESS - LAND\" in customer.privileges, should return {\"id\": \"LAND_DETAILS\", \"level\": \"NO_ACCESS\"}",
          "invocations": 1,
          "location": { "column": 21, "line": 232 },
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given \"NO ACCESS - LAND\" in customer.privileges, should return {\"id\": \"LAND_DETAILS\", \"level\": \"NO_ACCESS\"}"
        },
        {
          "ancestorTitles": [
            "Customer transformer",
            "#transformBusinessCustomerToCustomerPermissionGroups"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Customer transformer #transformBusinessCustomerToCustomerPermissionGroups given \"VIEW - LAND - SA\" in customer.privileges, should return {\"id\": \"LAND_DETAILS\", \"level\": \"VIEW\"}",
          "invocations": 1,
          "location": { "column": 21, "line": 232 },
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given \"VIEW - LAND - SA\" in customer.privileges, should return {\"id\": \"LAND_DETAILS\", \"level\": \"VIEW\"}"
        },
        {
          "ancestorTitles": [
            "Customer transformer",
            "#transformBusinessCustomerToCustomerPermissionGroups"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Customer transformer #transformBusinessCustomerToCustomerPermissionGroups given \"View - land\" in customer.privileges, should return {\"id\": \"LAND_DETAILS\", \"level\": \"VIEW\"}",
          "invocations": 1,
          "location": { "column": 21, "line": 232 },
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given \"View - land\" in customer.privileges, should return {\"id\": \"LAND_DETAILS\", \"level\": \"VIEW\"}"
        },
        {
          "ancestorTitles": [
            "Customer transformer",
            "#transformBusinessCustomerToCustomerPermissionGroups"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Customer transformer #transformBusinessCustomerToCustomerPermissionGroups given \"AMEND - LAND - SA\" in customer.privileges, should return {\"id\": \"LAND_DETAILS\", \"level\": \"AMEND\"}",
          "invocations": 1,
          "location": { "column": 21, "line": 232 },
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given \"AMEND - LAND - SA\" in customer.privileges, should return {\"id\": \"LAND_DETAILS\", \"level\": \"AMEND\"}"
        },
        {
          "ancestorTitles": [
            "Customer transformer",
            "#transformBusinessCustomerToCustomerPermissionGroups"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Customer transformer #transformBusinessCustomerToCustomerPermissionGroups given \"Amend - land\" in customer.privileges, should return {\"id\": \"LAND_DETAILS\", \"level\": \"AMEND\"}",
          "invocations": 1,
          "location": { "column": 21, "line": 232 },
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "given \"Amend - land\" in customer.privileges, should return {\"id\": \"LAND_DETAILS\", \"level\": \"AMEND\"}"
        },
        {
          "ancestorTitles": [
            "Customer transformer",
            "#transformBusinessCustomerToCustomerPermissionGroups"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Customer transformer #transformBusinessCustomerToCustomerPermissionGroups should cover all privilege names",
          "invocations": 1,
          "location": { "column": 5, "line": 245 },
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should cover all privilege names"
        },
        {
          "ancestorTitles": ["Customer transformer", "transformCustomerUpdateInputToPersonUpdate"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Customer transformer transformCustomerUpdateInputToPersonUpdate transforms full input correctly",
          "invocations": 1,
          "location": { "column": 5, "line": 289 },
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "transforms full input correctly"
        },
        {
          "ancestorTitles": ["Customer transformer", "transformCustomerUpdateInputToPersonUpdate"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Customer transformer transformCustomerUpdateInputToPersonUpdate handles partial input",
          "invocations": 1,
          "location": { "column": 5, "line": 354 },
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "handles partial input"
        },
        {
          "ancestorTitles": ["Customer transformer", "transformCustomerUpdateInputToPersonUpdate"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Customer transformer transformCustomerUpdateInputToPersonUpdate handles undefined nested fields",
          "invocations": 1,
          "location": { "column": 5, "line": 376 },
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "handles undefined nested fields"
        },
        {
          "ancestorTitles": ["Customer transformer", "transformCustomerUpdateInputToPersonUpdate"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Customer transformer transformCustomerUpdateInputToPersonUpdate preserves original person fields not in input",
          "invocations": 1,
          "location": { "column": 5, "line": 392 },
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "preserves original person fields not in input"
        },
        {
          "ancestorTitles": ["Customer transformer", "transformCustomerUpdateInputToPersonUpdate"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Customer transformer transformCustomerUpdateInputToPersonUpdate handles empty input",
          "invocations": 1,
          "location": { "column": 5, "line": 405 },
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "handles empty input"
        },
        {
          "ancestorTitles": ["Customer transformer", "transformCustomerUpdateInputToPersonUpdate"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Customer transformer transformCustomerUpdateInputToPersonUpdate handles date",
          "invocations": 1,
          "location": { "column": 5, "line": 413 },
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "handles date"
        },
        {
          "ancestorTitles": ["Customer transformer", "transformCustomerUpdateInputToPersonUpdate"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Customer transformer transformCustomerUpdateInputToPersonUpdate handles null values in input",
          "invocations": 1,
          "location": { "column": 5, "line": 423 },
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "handles null values in input"
        }
      ],
      "endTime": 1759946553419,
      "message": "",
      "name": "/Users/dominic/Sites/defra/fcp-dal-api/test/unit/transformers/rural-payments/customer.test.js",
      "startTime": 1759946553322,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["businessDetailsUpdateResolver"],
          "duration": 4,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "businessDetailsUpdateResolver businessDetailsUpdateResolver returns true when updateOrganisationDetails returns a response",
          "invocations": 1,
          "location": { "column": 3, "line": 27 },
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "businessDetailsUpdateResolver returns true when updateOrganisationDetails returns a response"
        },
        {
          "ancestorTitles": ["businessDetailsUpdateResolver"],
          "duration": 3,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "businessDetailsUpdateResolver businessDetailsUpdateResolver, returns false and logs a warning when updateBusinessBySBI throws a NotFound error",
          "invocations": 1,
          "location": { "column": 3, "line": 52 },
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "businessDetailsUpdateResolver, returns false and logs a warning when updateBusinessBySBI throws a NotFound error"
        },
        {
          "ancestorTitles": ["businessAdditionalDetailsUpdateResolver"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "businessAdditionalDetailsUpdateResolver businessAdditionalDetailsUpdateResolver returns true when updateOrganisationDetails returns a response",
          "invocations": 1,
          "location": { "column": 3, "line": 80 },
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "businessAdditionalDetailsUpdateResolver returns true when updateOrganisationDetails returns a response"
        },
        {
          "ancestorTitles": ["businessAdditionalDetailsUpdateResolver"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "businessAdditionalDetailsUpdateResolver businessAdditionalDetailsUpdateResolver, returns false and logs a warning when updateBusinessBySBI throws a NotFound error",
          "invocations": 1,
          "location": { "column": 3, "line": 108 },
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "businessAdditionalDetailsUpdateResolver, returns false and logs a warning when updateBusinessBySBI throws a NotFound error"
        },
        {
          "ancestorTitles": ["businessLockResolver"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "businessLockResolver returns correct response when lockOrganisation is successfully executed",
          "invocations": 1,
          "location": { "column": 3, "line": 135 },
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "returns correct response when lockOrganisation is successfully executed"
        },
        {
          "ancestorTitles": ["businessLockResolver"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "businessLockResolver returns correct response when lockOrganisation is successfully executed with note and reason",
          "invocations": 1,
          "location": { "column": 3, "line": 150 },
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "returns correct response when lockOrganisation is successfully executed with note and reason"
        },
        {
          "ancestorTitles": ["businessLockResolver"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "businessLockResolver returns false and logs a warning when updateBusinessBySBI throws a NotFound error",
          "invocations": 1,
          "location": { "column": 3, "line": 166 },
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "returns false and logs a warning when updateBusinessBySBI throws a NotFound error"
        },
        {
          "ancestorTitles": ["businessLockResolver"],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "businessLockResolver returns error when neither reason or note are provided",
          "invocations": 1,
          "location": { "column": 3, "line": 177 },
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "returns error when neither reason or note are provided"
        },
        {
          "ancestorTitles": ["businessUnlockResolver"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "businessUnlockResolver returns correct response when unlockOrganisation is successfully executed",
          "invocations": 1,
          "location": { "column": 3, "line": 202 },
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "returns correct response when unlockOrganisation is successfully executed"
        },
        {
          "ancestorTitles": ["businessUnlockResolver"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "businessUnlockResolver returns correct response when unlockOrganisation is successfully executed with note and reason",
          "invocations": 1,
          "location": { "column": 3, "line": 217 },
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "returns correct response when unlockOrganisation is successfully executed with note and reason"
        },
        {
          "ancestorTitles": ["businessUnlockResolver"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "businessUnlockResolver returns false and logs a warning when updateBusinessBySBI throws a NotFound error",
          "invocations": 1,
          "location": { "column": 3, "line": 233 },
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "returns false and logs a warning when updateBusinessBySBI throws a NotFound error"
        },
        {
          "ancestorTitles": ["businessUnlockResolver"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "businessUnlockResolver returns error when neither reason or note are provided",
          "invocations": 1,
          "location": { "column": 3, "line": 244 },
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "returns error when neither reason or note are provided"
        }
      ],
      "endTime": 1759946553499,
      "message": "",
      "name": "/Users/dominic/Sites/defra/fcp-dal-api/test/unit/resolvers/common.test.js",
      "startTime": 1759946553424,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["Customer"],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Customer Query.customer.personId",
          "invocations": 1,
          "location": { "column": 3, "line": 93 },
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "Query.customer.personId"
        },
        {
          "ancestorTitles": ["Customer"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Customer Customer.info",
          "invocations": 1,
          "location": { "column": 3, "line": 108 },
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "Customer.info"
        },
        {
          "ancestorTitles": ["Customer"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Customer Customer.business - returns null if no business",
          "invocations": 1,
          "location": { "column": 3, "line": 154 },
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "Customer.business - returns null if no business"
        },
        {
          "ancestorTitles": ["Customer"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Customer Customer.business - returns business",
          "invocations": 1,
          "location": { "column": 3, "line": 166 },
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "Customer.business - returns business"
        },
        {
          "ancestorTitles": ["Customer"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Customer Customer.businesses",
          "invocations": 1,
          "location": { "column": 3, "line": 188 },
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "Customer.businesses"
        },
        {
          "ancestorTitles": ["Customer"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Customer Customer.authenticationQuestions",
          "invocations": 1,
          "location": { "column": 3, "line": 214 },
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "Customer.authenticationQuestions"
        },
        {
          "ancestorTitles": ["Customer"],
          "duration": 3,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Customer Customer.authenticationQuestions - error",
          "invocations": 1,
          "location": { "column": 3, "line": 227 },
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "Customer.authenticationQuestions - error"
        },
        {
          "ancestorTitles": ["CustomerBusiness"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CustomerBusiness CustomerBusiness.role",
          "invocations": 1,
          "location": { "column": 3, "line": 235 },
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "CustomerBusiness.role"
        },
        {
          "ancestorTitles": ["CustomerBusiness"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CustomerBusiness CustomerBusiness.permissionGroups",
          "invocations": 1,
          "location": { "column": 3, "line": 244 },
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "CustomerBusiness.permissionGroups"
        },
        {
          "ancestorTitles": ["CustomerBusiness", "CustomerBusiness.messages"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CustomerBusiness CustomerBusiness.messages get all messages",
          "invocations": 1,
          "location": { "column": 5, "line": 305 },
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "get all messages"
        },
        {
          "ancestorTitles": ["CustomerBusiness", "CustomerBusiness.messages"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CustomerBusiness CustomerBusiness.messages get messages fromDate",
          "invocations": 1,
          "location": { "column": 5, "line": 336 },
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "get messages fromDate"
        },
        {
          "ancestorTitles": ["CustomerBusiness", "CustomerBusiness.messages"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CustomerBusiness CustomerBusiness.messages get messages fromDate; should fail if date is in the future",
          "invocations": 1,
          "location": { "column": 5, "line": 371 },
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "get messages fromDate; should fail if date is in the future"
        },
        {
          "ancestorTitles": ["CustomerBusinessPermissionGroup"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CustomerBusinessPermissionGroup CustomerBusinessPermissionGroup.level",
          "invocations": 1,
          "location": { "column": 3, "line": 386 },
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "CustomerBusinessPermissionGroup.level"
        }
      ],
      "endTime": 1759946553582,
      "message": "",
      "name": "/Users/dominic/Sites/defra/fcp-dal-api/test/unit/resolvers/customer.test.js",
      "startTime": 1759946553506,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["Business Query Resolver"],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Business Query Resolver internal gateway should return transformed business data when found",
          "invocations": 1,
          "location": { "column": 3, "line": 21 },
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "internal gateway should return transformed business data when found"
        },
        {
          "ancestorTitles": ["Business Query Resolver"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Business Query Resolver should handle errors from dataSource for internal gateway",
          "invocations": 1,
          "location": { "column": 3, "line": 99 },
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle errors from dataSource for internal gateway"
        }
      ],
      "endTime": 1759946553651,
      "message": "",
      "name": "/Users/dominic/Sites/defra/fcp-dal-api/test/unit/resolvers/business-query.test.js",
      "startTime": 1759946553589,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["excludeFromListTransformer"],
          "duration": 7,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "excludeFromListTransformer should not change schema if directive not used",
          "invocations": 1,
          "location": { "column": 3, "line": 5 },
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should not change schema if directive not used"
        },
        {
          "ancestorTitles": ["excludeFromListTransformer"],
          "duration": 3,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "excludeFromListTransformer should create partial type with fields excluded",
          "invocations": 1,
          "location": { "column": 3, "line": 26 },
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should create partial type with fields excluded"
        },
        {
          "ancestorTitles": ["excludeFromListTransformer"],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "excludeFromListTransformer should use partial type when used in a list",
          "invocations": 1,
          "location": { "column": 3, "line": 47 },
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should use partial type when used in a list"
        }
      ],
      "endTime": 1759946553735,
      "message": "",
      "name": "/Users/dominic/Sites/defra/fcp-dal-api/test/unit/directives/excludeFromListTransformer.test.js",
      "startTime": 1759946553656,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["BusinessLand"],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "BusinessLand summary",
          "invocations": 1,
          "location": { "column": 3, "line": 59 },
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "summary"
        },
        {
          "ancestorTitles": ["BusinessLand"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "BusinessLand parcels",
          "invocations": 1,
          "location": { "column": 3, "line": 66 },
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "parcels"
        },
        {
          "ancestorTitles": ["BusinessLand"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "BusinessLand parcel",
          "invocations": 1,
          "location": { "column": 3, "line": 78 },
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "parcel"
        },
        {
          "ancestorTitles": ["BusinessLand"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "BusinessLand parcelCovers",
          "invocations": 1,
          "location": { "column": 3, "line": 96 },
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "parcelCovers"
        },
        {
          "ancestorTitles": ["BusinessLandSummary"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "BusinessLandSummary totalParcels",
          "invocations": 1,
          "location": { "column": 3, "line": 110 },
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "totalParcels"
        },
        {
          "ancestorTitles": ["BusinessLandSummary"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "BusinessLandSummary totalArea",
          "invocations": 1,
          "location": { "column": 3, "line": 118 },
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "totalArea"
        },
        {
          "ancestorTitles": ["BusinessLandSummary"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "BusinessLandSummary arableLandArea",
          "invocations": 1,
          "location": { "column": 3, "line": 126 },
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "arableLandArea"
        },
        {
          "ancestorTitles": ["BusinessLandSummary"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "BusinessLandSummary permanentGrasslandArea",
          "invocations": 1,
          "location": { "column": 3, "line": 134 },
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "permanentGrasslandArea"
        },
        {
          "ancestorTitles": ["BusinessLandSummary"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "BusinessLandSummary permanentCropsArea",
          "invocations": 1,
          "location": { "column": 3, "line": 142 },
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "permanentCropsArea"
        }
      ],
      "endTime": 1759946553805,
      "message": "",
      "name": "/Users/dominic/Sites/defra/fcp-dal-api/test/unit/resolvers/business-land.test.js",
      "startTime": 1759946553738,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["context"],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "context should build context with correct properties",
          "invocations": 1,
          "location": { "column": 3, "line": 38 },
          "numPassingAsserts": 7,
          "retryReasons": [],
          "status": "passed",
          "title": "should build context with correct properties"
        }
      ],
      "endTime": 1759946553878,
      "message": "",
      "name": "/Users/dominic/Sites/defra/fcp-dal-api/test/unit/app/context.test.js",
      "startTime": 1759946553810,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["sendMetric - with NODE_ENV=production"],
          "duration": 16,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "sendMetric - with NODE_ENV=production does not log a metric when NODE_ENV is not production",
          "invocations": 1,
          "location": { "column": 3, "line": 30 },
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "does not log a metric when NODE_ENV is not production"
        }
      ],
      "endTime": 1759946553942,
      "message": "",
      "name": "/Users/dominic/Sites/defra/fcp-dal-api/test/unit/logger/doNotSendMetric.test.js",
      "startTime": 1759946553882,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["Customer transformer"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Customer transformer transformPersonRolesToCustomerAuthorisedBusinessesRoles",
          "invocations": 1,
          "location": { "column": 3, "line": 44 },
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "transformPersonRolesToCustomerAuthorisedBusinessesRoles"
        },
        {
          "ancestorTitles": ["Customer transformer"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Customer transformer transformNotificationsToMessages",
          "invocations": 1,
          "location": { "column": 3, "line": 56 },
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "transformNotificationsToMessages"
        },
        {
          "ancestorTitles": ["Customer transformer"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Customer transformer transformNotificationsToMessages does not fail if messages empty",
          "invocations": 1,
          "location": { "column": 3, "line": 78 },
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "transformNotificationsToMessages does not fail if messages empty"
        },
        {
          "ancestorTitles": [
            "Customer transformer",
            "transformPersonSummaryToCustomerAuthorisedFilteredBusiness"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Customer transformer transformPersonSummaryToCustomerAuthorisedFilteredBusiness should return null when no sbi matching",
          "invocations": 1,
          "location": { "column": 5, "line": 84 },
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should return null when no sbi matching"
        },
        {
          "ancestorTitles": [
            "Customer transformer",
            "transformPersonSummaryToCustomerAuthorisedFilteredBusiness"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Customer transformer transformPersonSummaryToCustomerAuthorisedFilteredBusiness should return id, name, sbi, and personId when sbi is matching",
          "invocations": 1,
          "location": { "column": 5, "line": 96 },
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should return id, name, sbi, and personId when sbi is matching"
        },
        {
          "ancestorTitles": ["Customer transformer"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Customer transformer transformAuthenticateQuestionsAnswers",
          "invocations": 1,
          "location": { "column": 3, "line": 113 },
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "transformAuthenticateQuestionsAnswers"
        },
        {
          "ancestorTitles": ["Customer transformer"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Customer transformer transformNotificationsToMessages does not fail if response is empty",
          "invocations": 1,
          "location": { "column": 3, "line": 131 },
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "transformNotificationsToMessages does not fail if response is empty"
        },
        {
          "ancestorTitles": ["Customer transformer"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Customer transformer transformAuthenticateQuestionsAnswers with partially null results",
          "invocations": 1,
          "location": { "column": 3, "line": 143 },
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "transformAuthenticateQuestionsAnswers with partially null results"
        }
      ],
      "endTime": 1759946554018,
      "message": "",
      "name": "/Users/dominic/Sites/defra/fcp-dal-api/test/unit/transformers/rural-payments-portal/customer.test.js",
      "startTime": 1759946553948,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["Business transformer"],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Business transformer transformOrganisationToBusiness",
          "invocations": 1,
          "location": { "column": 3, "line": 90 },
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "transformOrganisationToBusiness"
        }
      ],
      "endTime": 1759946554086,
      "message": "",
      "name": "/Users/dominic/Sites/defra/fcp-dal-api/test/unit/transformers/rural-payments-portal/busines.test.js",
      "startTime": 1759946554021,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "#transformOrganisationCustomers",
          "invocations": 1,
          "location": { "column": 3, "line": 78 },
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "#transformOrganisationCustomers"
        },
        {
          "ancestorTitles": [],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "#transformBusinessCustomerPrivilegesToPermissionGroups",
          "invocations": 1,
          "location": { "column": 3, "line": 139 },
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "#transformBusinessCustomerPrivilegesToPermissionGroups"
        },
        {
          "ancestorTitles": [],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "#transformCountyParishHoldings sorts CPH numbers numerically by county, parish, and holding",
          "invocations": 1,
          "location": { "column": 3, "line": 152 },
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "#transformCountyParishHoldings sorts CPH numbers numerically by county, parish, and holding"
        },
        {
          "ancestorTitles": [],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "#transformCountyParishHoldings sorts by start_date descending",
          "invocations": 1,
          "location": { "column": 3, "line": 240 },
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "#transformCountyParishHoldings sorts by start_date descending"
        },
        {
          "ancestorTitles": [],
          "duration": 3,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "#transformCountyParishHoldings returns `null` if not array",
          "invocations": 1,
          "location": { "column": 3, "line": 288 },
          "numPassingAsserts": 6,
          "retryReasons": [],
          "status": "passed",
          "title": "#transformCountyParishHoldings returns `null` if not array"
        },
        {
          "ancestorTitles": [],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "#transformCountyParishHoldings returns empty array",
          "invocations": 1,
          "location": { "column": 3, "line": 297 },
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "#transformCountyParishHoldings returns empty array"
        },
        {
          "ancestorTitles": [],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "#transformCountyParishHoldings handles null values",
          "invocations": 1,
          "location": { "column": 3, "line": 301 },
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "#transformCountyParishHoldings handles null values"
        },
        {
          "ancestorTitles": [],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "#transformAgreements",
          "invocations": 1,
          "location": { "column": 3, "line": 329 },
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "#transformAgreements"
        },
        {
          "ancestorTitles": [],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "should transform application data correctly",
          "invocations": 1,
          "location": { "column": 5, "line": 390 },
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should transform application data correctly"
        },
        {
          "ancestorTitles": [],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "transforms base input correctly",
          "invocations": 1,
          "location": { "column": 3, "line": 512 },
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "transforms base input correctly"
        },
        {
          "ancestorTitles": [],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "handles undefined and null in nested correspondence fields",
          "invocations": 1,
          "location": { "column": 3, "line": 567 },
          "numPassingAsserts": 5,
          "retryReasons": [],
          "status": "passed",
          "title": "handles undefined and null in nested correspondence fields"
        },
        {
          "ancestorTitles": [],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "handles missing address nested fields",
          "invocations": 1,
          "location": { "column": 3, "line": 583 },
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "handles missing address nested fields"
        },
        {
          "ancestorTitles": [],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "handles missing phone nested fields",
          "invocations": 1,
          "location": { "column": 3, "line": 603 },
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "handles missing phone nested fields"
        },
        {
          "ancestorTitles": [],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "transforms base input correctly",
          "invocations": 1,
          "location": { "column": 3, "line": 717 },
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "transforms base input correctly"
        }
      ],
      "endTime": 1759946554170,
      "message": "",
      "name": "/Users/dominic/Sites/defra/fcp-dal-api/test/unit/transformers/rural-payments/business.test.js",
      "startTime": 1759946554090,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["Customer Mutations", "updateCustomerAddress"],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Customer Mutations updateCustomerAddress should call getCustomerByCRN with correct CRN",
          "invocations": 1,
          "location": { "column": 5, "line": 63 },
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should call getCustomerByCRN with correct CRN"
        },
        {
          "ancestorTitles": ["Customer Mutations", "updateCustomerAddress"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Customer Mutations updateCustomerAddress should call updatePersonDetails with correct parameters",
          "invocations": 1,
          "location": { "column": 5, "line": 74 },
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should call updatePersonDetails with correct parameters"
        },
        {
          "ancestorTitles": ["Customer Mutations", "updateCustomerAddress"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Customer Mutations updateCustomerAddress should return success and customer CRN",
          "invocations": 1,
          "location": { "column": 5, "line": 119 },
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should return success and customer CRN"
        },
        {
          "ancestorTitles": ["Customer Mutations", "updateCustomerDateOfBirth"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Customer Mutations updateCustomerDateOfBirth should call getCustomerByCRN with correct CRN",
          "invocations": 1,
          "location": { "column": 5, "line": 63 },
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should call getCustomerByCRN with correct CRN"
        },
        {
          "ancestorTitles": ["Customer Mutations", "updateCustomerDateOfBirth"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Customer Mutations updateCustomerDateOfBirth should call updatePersonDetails with correct parameters",
          "invocations": 1,
          "location": { "column": 5, "line": 74 },
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should call updatePersonDetails with correct parameters"
        },
        {
          "ancestorTitles": ["Customer Mutations", "updateCustomerDateOfBirth"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Customer Mutations updateCustomerDateOfBirth should return success and customer CRN",
          "invocations": 1,
          "location": { "column": 5, "line": 119 },
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should return success and customer CRN"
        },
        {
          "ancestorTitles": ["Customer Mutations", "updateCustomerEmail"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Customer Mutations updateCustomerEmail should call getCustomerByCRN with correct CRN",
          "invocations": 1,
          "location": { "column": 5, "line": 63 },
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should call getCustomerByCRN with correct CRN"
        },
        {
          "ancestorTitles": ["Customer Mutations", "updateCustomerEmail"],
          "duration": 3,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Customer Mutations updateCustomerEmail should call updatePersonDetails with correct parameters",
          "invocations": 1,
          "location": { "column": 5, "line": 74 },
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should call updatePersonDetails with correct parameters"
        },
        {
          "ancestorTitles": ["Customer Mutations", "updateCustomerEmail"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Customer Mutations updateCustomerEmail should return success and customer CRN",
          "invocations": 1,
          "location": { "column": 5, "line": 119 },
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should return success and customer CRN"
        },
        {
          "ancestorTitles": ["Customer Mutations", "updateCustomerName"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Customer Mutations updateCustomerName should call getCustomerByCRN with correct CRN",
          "invocations": 1,
          "location": { "column": 5, "line": 63 },
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should call getCustomerByCRN with correct CRN"
        },
        {
          "ancestorTitles": ["Customer Mutations", "updateCustomerName"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Customer Mutations updateCustomerName should call updatePersonDetails with correct parameters",
          "invocations": 1,
          "location": { "column": 5, "line": 74 },
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should call updatePersonDetails with correct parameters"
        },
        {
          "ancestorTitles": ["Customer Mutations", "updateCustomerName"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Customer Mutations updateCustomerName should return success and customer CRN",
          "invocations": 1,
          "location": { "column": 5, "line": 119 },
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should return success and customer CRN"
        },
        {
          "ancestorTitles": ["Customer Mutations", "updateCustomerPhone"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Customer Mutations updateCustomerPhone should call getCustomerByCRN with correct CRN",
          "invocations": 1,
          "location": { "column": 5, "line": 63 },
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should call getCustomerByCRN with correct CRN"
        },
        {
          "ancestorTitles": ["Customer Mutations", "updateCustomerPhone"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Customer Mutations updateCustomerPhone should call updatePersonDetails with correct parameters",
          "invocations": 1,
          "location": { "column": 5, "line": 74 },
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should call updatePersonDetails with correct parameters"
        },
        {
          "ancestorTitles": ["Customer Mutations", "updateCustomerPhone"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Customer Mutations updateCustomerPhone should return success and customer CRN",
          "invocations": 1,
          "location": { "column": 5, "line": 119 },
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should return success and customer CRN"
        }
      ],
      "endTime": 1759946554254,
      "message": "",
      "name": "/Users/dominic/Sites/defra/fcp-dal-api/test/unit/resolvers/customer-mutation.test.js",
      "startTime": 1759946554174,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["validateDate function"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "validateDate function should return a Date object for a valid ISO 8601 date string",
          "invocations": 1,
          "location": { "column": 3, "line": 5 },
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should return a Date object for a valid ISO 8601 date string"
        },
        {
          "ancestorTitles": ["validateDate function"],
          "duration": 4,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "validateDate function should throw a BadRequest error for an invalid date string",
          "invocations": 1,
          "location": { "column": 3, "line": 12 },
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should throw a BadRequest error for an invalid date string"
        }
      ],
      "endTime": 1759946554325,
      "message": "",
      "name": "/Users/dominic/Sites/defra/fcp-dal-api/test/unit/utils/date.test.js",
      "startTime": 1759946554260,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["Business Details Mutation resolvers"],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Business Details Mutation resolvers updateBusinessName calls businessDetailsUpdateResolver",
          "invocations": 1,
          "location": { "column": 3, "line": 23 },
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "updateBusinessName calls businessDetailsUpdateResolver"
        },
        {
          "ancestorTitles": ["Business Details Mutation resolvers"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Business Details Mutation resolvers updateBusinessPhone calls businessDetailsUpdateResolver",
          "invocations": 1,
          "location": { "column": 3, "line": 33 },
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "updateBusinessPhone calls businessDetailsUpdateResolver"
        },
        {
          "ancestorTitles": ["Business Details Mutation resolvers"],
          "duration": 3,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Business Details Mutation resolvers updateBusinessEmail calls businessDetailsUpdateResolver",
          "invocations": 1,
          "location": { "column": 3, "line": 43 },
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "updateBusinessEmail calls businessDetailsUpdateResolver"
        },
        {
          "ancestorTitles": ["Business Details Mutation resolvers"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Business Details Mutation resolvers updateBusinessAddress calls businessDetailsUpdateResolver",
          "invocations": 1,
          "location": { "column": 3, "line": 53 },
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "updateBusinessAddress calls businessDetailsUpdateResolver"
        },
        {
          "ancestorTitles": ["Business Details Mutation resolvers"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Business Details Mutation resolvers updateBusinessVAT calls businessAdditionalDetailsUpdateResolver",
          "invocations": 1,
          "location": { "column": 3, "line": 63 },
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "updateBusinessVAT calls businessAdditionalDetailsUpdateResolver"
        },
        {
          "ancestorTitles": ["Business Additional Details Mutation resolvers"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Business Additional Details Mutation resolvers updateBusinessLegalStatus calls businessAdditionalDetailsUpdateResolver",
          "invocations": 1,
          "location": { "column": 3, "line": 79 },
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "updateBusinessLegalStatus calls businessAdditionalDetailsUpdateResolver"
        },
        {
          "ancestorTitles": ["Business Additional Details Mutation resolvers"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Business Additional Details Mutation resolvers updateBusinessType calls businessAdditionalDetailsUpdateResolver",
          "invocations": 1,
          "location": { "column": 3, "line": 89 },
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "updateBusinessType calls businessAdditionalDetailsUpdateResolver"
        },
        {
          "ancestorTitles": ["Business Additional Details Mutation resolvers"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Business Additional Details Mutation resolvers updateBusinessDateStartedFarming calls businessAdditionalDetailsUpdateResolver",
          "invocations": 1,
          "location": { "column": 3, "line": 99 },
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "updateBusinessDateStartedFarming calls businessAdditionalDetailsUpdateResolver"
        },
        {
          "ancestorTitles": ["Business Additional Details Mutation resolvers"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Business Additional Details Mutation resolvers updateBusinessRegistrationNumbers calls businessAdditionalDetailsUpdateResolver",
          "invocations": 1,
          "location": { "column": 3, "line": 109 },
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "updateBusinessRegistrationNumbers calls businessAdditionalDetailsUpdateResolver"
        },
        {
          "ancestorTitles": ["Business Mutation UpdateBusinessResponse"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Business Mutation UpdateBusinessResponse updateBusinessName returns true when updateBusinessBySBI returns a response",
          "invocations": 1,
          "location": { "column": 3, "line": 133 },
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "updateBusinessName returns true when updateBusinessBySBI returns a response"
        },
        {
          "ancestorTitles": ["Business Mutation createBusiness"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Business Mutation createBusiness createBusiness returns business details and success",
          "invocations": 1,
          "location": { "column": 3, "line": 245 },
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "createBusiness returns business details and success"
        },
        {
          "ancestorTitles": ["Business Mutation updateBusinessLockStatus"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Business Mutation updateBusinessLockStatus updateBusinessLock",
          "invocations": 1,
          "location": { "column": 3, "line": 432 },
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "updateBusinessLock"
        },
        {
          "ancestorTitles": ["Business Mutation updateBusinessUnlockStatus"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Business Mutation updateBusinessUnlockStatus updateBusinessUnlock",
          "invocations": 1,
          "location": { "column": 3, "line": 452 },
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "updateBusinessUnlock"
        }
      ],
      "endTime": 1759946554403,
      "message": "",
      "name": "/Users/dominic/Sites/defra/fcp-dal-api/test/unit/resolvers/business-mutation.test.js",
      "startTime": 1759946554328,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["logger"],
          "duration": 15,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "logger Single default log transport enabled",
          "invocations": 1,
          "location": { "column": 3, "line": 22 },
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "Single default log transport enabled"
        },
        {
          "ancestorTitles": ["logger"],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "logger should use ecsFormat in production environment",
          "invocations": 1,
          "location": { "column": 3, "line": 28 },
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should use ecsFormat in production environment"
        },
        {
          "ancestorTitles": ["logger"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "logger should set the log level based on LOG_LEVEL environment variable",
          "invocations": 1,
          "location": { "column": 3, "line": 34 },
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should set the log level based on LOG_LEVEL environment variable"
        },
        {
          "ancestorTitles": ["logger"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "logger should close transports on process exit",
          "invocations": 1,
          "location": { "column": 3, "line": 40 },
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should close transports on process exit"
        }
      ],
      "endTime": 1759946554474,
      "message": "",
      "name": "/Users/dominic/Sites/defra/fcp-dal-api/test/unit/logger/logger.test.js",
      "startTime": 1759946554408,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["LMS transformer"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "LMS transformer transformLandCovers",
          "invocations": 1,
          "location": { "column": 3, "line": 9 },
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "transformLandCovers"
        },
        {
          "ancestorTitles": ["LMS transformer"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "LMS transformer transformLandCoversToArea",
          "invocations": 1,
          "location": { "column": 3, "line": 32 },
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "transformLandCoversToArea"
        },
        {
          "ancestorTitles": ["LMS transformer"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "LMS transformer transformLandCoversToArea - no name found",
          "invocations": 1,
          "location": { "column": 3, "line": 38 },
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "transformLandCoversToArea - no name found"
        },
        {
          "ancestorTitles": ["LMS transformer"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "LMS transformer transformLandParcels",
          "invocations": 1,
          "location": { "column": 3, "line": 44 },
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "transformLandParcels"
        },
        {
          "ancestorTitles": ["LMS transformer"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "LMS transformer transformLandParcelsEffectiveDates",
          "invocations": 1,
          "location": { "column": 3, "line": 66 },
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "transformLandParcelsEffectiveDates"
        }
      ],
      "endTime": 1759946554546,
      "message": "",
      "name": "/Users/dominic/Sites/defra/fcp-dal-api/test/unit/transformers/rural-payments-portal/lms.test.js",
      "startTime": 1759946554479,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["Custom GraphQL HTTP Errors"],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Custom GraphQL HTTP Errors Unauthorized error sets correct code and http status",
          "invocations": 1,
          "location": { "column": 3, "line": 6 },
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "Unauthorized error sets correct code and http status"
        },
        {
          "ancestorTitles": ["Custom GraphQL HTTP Errors"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Custom GraphQL HTTP Errors NotFound error sets correct code and http status",
          "invocations": 1,
          "location": { "column": 3, "line": 15 },
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "NotFound error sets correct code and http status"
        },
        {
          "ancestorTitles": ["Custom GraphQL HTTP Errors"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Custom GraphQL HTTP Errors BadRequest error sets correct code and http status",
          "invocations": 1,
          "location": { "column": 3, "line": 24 },
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "BadRequest error sets correct code and http status"
        },
        {
          "ancestorTitles": ["Custom GraphQL HTTP Errors"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Custom GraphQL HTTP Errors HttpError sets code and http status dynamically",
          "invocations": 1,
          "location": { "column": 3, "line": 33 },
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "HttpError sets code and http status dynamically"
        },
        {
          "ancestorTitles": ["Custom GraphQL HTTP Errors"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Custom GraphQL HTTP Errors All custom errors accept options",
          "invocations": 1,
          "location": { "column": 3, "line": 43 },
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "All custom errors accept options"
        }
      ],
      "endTime": 1759946554617,
      "message": "",
      "name": "/Users/dominic/Sites/defra/fcp-dal-api/test/unit/errors/graphql.test.js",
      "startTime": 1759946554548,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["winstonFormatters", "cdpSchemaTranslator"],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "winstonFormatters cdpSchemaTranslator should return a new object conforming to the CDP schema",
          "invocations": 1,
          "location": { "column": 5, "line": 65 },
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should return a new object conforming to the CDP schema"
        },
        {
          "ancestorTitles": ["winstonFormatters"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "winstonFormatters should handle request body as a string",
          "invocations": 1,
          "location": { "column": 3, "line": 116 },
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle request body as a string"
        },
        {
          "ancestorTitles": ["winstonFormatters"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "winstonFormatters should return a reduced object when only partial info is provided",
          "invocations": 1,
          "location": { "column": 3, "line": 149 },
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "should return a reduced object when only partial info is provided"
        },
        {
          "ancestorTitles": ["winstonFormatters", "sampleResponseBodyData"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "winstonFormatters sampleResponseBodyData should leave a simple log request unchanged",
          "invocations": 1,
          "location": { "column": 5, "line": 179 },
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should leave a simple log request unchanged"
        },
        {
          "ancestorTitles": ["winstonFormatters", "sampleResponseBodyData"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "winstonFormatters sampleResponseBodyData should limit log response body data to 5 items",
          "invocations": 1,
          "location": { "column": 5, "line": 182 },
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should limit log response body data to 5 items"
        }
      ],
      "endTime": 1759946554680,
      "message": "",
      "name": "/Users/dominic/Sites/defra/fcp-dal-api/test/unit/logger/winstonFormatters.test.js",
      "startTime": 1759946554619,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["config"],
          "duration": 6,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "config should have default values when optional env vars are unset",
          "invocations": 1,
          "location": { "column": 3, "line": 32 },
          "numPassingAsserts": 18,
          "retryReasons": [],
          "status": "passed",
          "title": "should have default values when optional env vars are unset"
        },
        {
          "ancestorTitles": ["config"],
          "duration": 5,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "config should throw an error any invalid combinations of env vars",
          "invocations": 1,
          "location": { "column": 3, "line": 60 },
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "should throw an error any invalid combinations of env vars"
        },
        {
          "ancestorTitles": ["config"],
          "duration": 4,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "config should throw on invalid values",
          "invocations": 1,
          "location": { "column": 3, "line": 100 },
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should throw on invalid values"
        },
        {
          "ancestorTitles": ["config"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "config should allow optional fields to be unset",
          "invocations": 1,
          "location": { "column": 3, "line": 107 },
          "numPassingAsserts": 9,
          "retryReasons": [],
          "status": "passed",
          "title": "should allow optional fields to be unset"
        }
      ],
      "endTime": 1759946554744,
      "message": "",
      "name": "/Users/dominic/Sites/defra/fcp-dal-api/test/unit/app/config.test.js",
      "startTime": 1759946554682,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["GraphQL Dashboard test with mocks"],
          "duration": 7,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "GraphQL Dashboard test with mocks expect ApolloServer to have been called with correct args to disable landing page",
          "invocations": 1,
          "location": { "column": 3, "line": 34 },
          "numPassingAsserts": 7,
          "retryReasons": [],
          "status": "passed",
          "title": "expect ApolloServer to have been called with correct args to disable landing page"
        },
        {
          "ancestorTitles": ["GraphQL Dashboard test with mocks"],
          "duration": 5,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "GraphQL Dashboard test with mocks expect ApolloServer to have been called with correct args to enable landing page",
          "invocations": 1,
          "location": { "column": 3, "line": 54 },
          "numPassingAsserts": 7,
          "retryReasons": [],
          "status": "passed",
          "title": "expect ApolloServer to have been called with correct args to enable landing page"
        }
      ],
      "endTime": 1759946554804,
      "message": "",
      "name": "/Users/dominic/Sites/defra/fcp-dal-api/test/unit/graphql/server.test.js",
      "startTime": 1759946554748,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["sendMetric - with NODE_ENV=production"],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "sendMetric - with NODE_ENV=production logs a metric with default values and no dimensions",
          "invocations": 1,
          "location": { "column": 3, "line": 66 },
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "logs a metric with default values and no dimensions"
        },
        {
          "ancestorTitles": ["sendMetric - with NODE_ENV=production"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "sendMetric - with NODE_ENV=production logs a metric with custom value, unit, dimensions and storage resolution",
          "invocations": 1,
          "location": { "column": 3, "line": 81 },
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "logs a metric with custom value, unit, dimensions and storage resolution"
        },
        {
          "ancestorTitles": ["sendMetric - with NODE_ENV=production"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "sendMetric - with NODE_ENV=production logs an error when custom metric sending fails",
          "invocations": 1,
          "location": { "column": 3, "line": 103 },
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "logs an error when custom metric sending fails"
        }
      ],
      "endTime": 1759946554859,
      "message": "",
      "name": "/Users/dominic/Sites/defra/fcp-dal-api/test/unit/logger/sendMetric.test.js",
      "startTime": 1759946554805,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["throttle function"],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "throttle function should call the function immediately if not throttled",
          "invocations": 1,
          "location": { "column": 3, "line": 19 },
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should call the function immediately if not throttled"
        },
        {
          "ancestorTitles": ["throttle function"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "throttle function should not call the function again if in throttle period",
          "invocations": 1,
          "location": { "column": 3, "line": 24 },
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should not call the function again if in throttle period"
        },
        {
          "ancestorTitles": ["throttle function"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "throttle function should call the function again after the throttle period",
          "invocations": 1,
          "location": { "column": 3, "line": 35 },
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should call the function again after the throttle period"
        },
        {
          "ancestorTitles": ["throttle function"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "throttle function should return true if the function executes successfully",
          "invocations": 1,
          "location": { "column": 3, "line": 47 },
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should return true if the function executes successfully"
        },
        {
          "ancestorTitles": ["throttle function"],
          "duration": 3,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "throttle function should return false if the function throws an error",
          "invocations": 1,
          "location": { "column": 3, "line": 53 },
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should return false if the function throws an error"
        }
      ],
      "endTime": 1759946554912,
      "message": "",
      "name": "/Users/dominic/Sites/defra/fcp-dal-api/test/unit/utils/throttle.test.js",
      "startTime": 1759946554861,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Query.permissionGroups",
          "invocations": 1,
          "location": { "column": 1, "line": 38 },
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "Query.permissionGroups"
        },
        {
          "ancestorTitles": [],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Permission.active",
          "invocations": 1,
          "location": { "column": 1, "line": 57 },
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "Permission.active"
        }
      ],
      "endTime": 1759946554961,
      "message": "",
      "name": "/Users/dominic/Sites/defra/fcp-dal-api/test/unit/resolvers/permissions.test.js",
      "startTime": 1759946554914,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["Common transformers", "Address transformer"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Common transformers Address transformer should fill dal address with supplied fields",
          "invocations": 1,
          "location": { "column": 5, "line": 54 },
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should fill dal address with supplied fields"
        },
        {
          "ancestorTitles": ["Common transformers", "Address transformer"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Common transformers Address transformer should fill kits address with supplied fields",
          "invocations": 1,
          "location": { "column": 5, "line": 58 },
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should fill kits address with supplied fields"
        },
        {
          "ancestorTitles": ["Common transformers", "Entity status transformer"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Common transformers Entity status transformer should transform entity status correctly",
          "invocations": 1,
          "location": { "column": 5, "line": 70 },
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should transform entity status correctly"
        },
        {
          "ancestorTitles": ["Common transformers", "booleanise function"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Common transformers booleanise function should return true for truthy values",
          "invocations": 1,
          "location": { "column": 5, "line": 80 },
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should return true for truthy values"
        },
        {
          "ancestorTitles": ["Common transformers", "booleanise function"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Common transformers booleanise function should return false for falsy values",
          "invocations": 1,
          "location": { "column": 5, "line": 86 },
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "should return false for falsy values"
        },
        {
          "ancestorTitles": ["Common transformers", "transformToISODate"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Common transformers transformToISODate should return iso string for valid values",
          "invocations": 1,
          "location": { "column": 5, "line": 95 },
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should return iso string for valid values"
        },
        {
          "ancestorTitles": ["Common transformers", "transformToISODate"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Common transformers transformToISODate should null for invalid values",
          "invocations": 1,
          "location": { "column": 5, "line": 101 },
          "numPassingAsserts": 10,
          "retryReasons": [],
          "status": "passed",
          "title": "should null for invalid values"
        },
        {
          "ancestorTitles": ["Common transformers", "transformDateTimeToISO"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Common transformers transformDateTimeToISO should return ISO  string for valid date-time",
          "invocations": 1,
          "location": { "column": 5, "line": 116 },
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should return ISO  string for valid date-time"
        },
        {
          "ancestorTitles": ["Common transformers", "transformDateTimeToISO"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Common transformers transformDateTimeToISO should default to UTC if no timezone is provided",
          "invocations": 1,
          "location": { "column": 5, "line": 122 },
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should default to UTC if no timezone is provided"
        },
        {
          "ancestorTitles": ["Common transformers", "transformDateTimeToISO"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Common transformers transformDateTimeToISO should return null for invalid date",
          "invocations": 1,
          "location": { "column": 5, "line": 127 },
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should return null for invalid date"
        }
      ],
      "endTime": 1759946555015,
      "message": "",
      "name": "/Users/dominic/Sites/defra/fcp-dal-api/test/unit/transformers/common.test.js",
      "startTime": 1759946554962,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["transformMapping"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "transformMapping should correctly transform businessDetailsUpdatePayload based on orgDetailsUpdateMapping",
          "invocations": 1,
          "location": { "column": 3, "line": 79 },
          "numPassingAsserts": 7,
          "retryReasons": [],
          "status": "passed",
          "title": "should correctly transform businessDetailsUpdatePayload based on orgDetailsUpdateMapping"
        },
        {
          "ancestorTitles": ["transformMapping"],
          "duration": 4,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "transformMapping should only return keys that are not undefined orgDetailsUpdateMapping",
          "invocations": 1,
          "location": { "column": 3, "line": 93 },
          "numPassingAsserts": 6,
          "retryReasons": [],
          "status": "passed",
          "title": "should only return keys that are not undefined orgDetailsUpdateMapping"
        },
        {
          "ancestorTitles": ["transformMapping"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "transformMapping should handle nested object mappings (object values in mapping)",
          "invocations": 1,
          "location": { "column": 3, "line": 104 },
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle nested object mappings (object values in mapping)"
        },
        {
          "ancestorTitles": ["transformMapping"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "transformMapping should return undefined if incorrect mapping passed",
          "invocations": 1,
          "location": { "column": 3, "line": 133 },
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should return undefined if incorrect mapping passed"
        }
      ],
      "endTime": 1759946555067,
      "message": "",
      "name": "/Users/dominic/Sites/defra/fcp-dal-api/test/unit/utils/mapping.test.js",
      "startTime": 1759946555017,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["sampleResponse"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "sampleResponse should return null for null input",
          "invocations": 1,
          "location": { "column": 3, "line": 4 },
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should return null for null input"
        },
        {
          "ancestorTitles": ["sampleResponse"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "sampleResponse should return undefined for undefined input",
          "invocations": 1,
          "location": { "column": 3, "line": 8 },
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should return undefined for undefined input"
        },
        {
          "ancestorTitles": ["sampleResponse"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "sampleResponse should parse JSON string input",
          "invocations": 1,
          "location": { "column": 3, "line": 12 },
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should parse JSON string input"
        },
        {
          "ancestorTitles": ["sampleResponse"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "sampleResponse should return original string if not valid JSON",
          "invocations": 1,
          "location": { "column": 3, "line": 18 },
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should return original string if not valid JSON"
        },
        {
          "ancestorTitles": ["sampleResponse"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "sampleResponse should sample arrays to 5 items",
          "invocations": 1,
          "location": { "column": 3, "line": 23 },
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should sample arrays to 5 items"
        },
        {
          "ancestorTitles": ["sampleResponse"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "sampleResponse should keep arrays with 5 or fewer items unchanged",
          "invocations": 1,
          "location": { "column": 3, "line": 33 },
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should keep arrays with 5 or fewer items unchanged"
        },
        {
          "ancestorTitles": ["sampleResponse"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "sampleResponse should handle nested objects and arrays",
          "invocations": 1,
          "location": { "column": 3, "line": 40 },
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle nested objects and arrays"
        },
        {
          "ancestorTitles": ["sampleResponse"],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "sampleResponse should not mutate the input object",
          "invocations": 1,
          "location": { "column": 3, "line": 60 },
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should not mutate the input object"
        }
      ],
      "endTime": 1759946555119,
      "message": "",
      "name": "/Users/dominic/Sites/defra/fcp-dal-api/test/unit/logger/utils.test.js",
      "startTime": 1759946555069,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["Permissions transformer"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Permissions transformer returns null if no match",
          "invocations": 1,
          "location": { "column": 3, "line": 8 },
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "returns null if no match"
        },
        {
          "ancestorTitles": ["Permissions transformer"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Permissions transformer returns level if matched",
          "invocations": 1,
          "location": { "column": 3, "line": 17 },
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "returns level if matched"
        }
      ],
      "endTime": 1759946555167,
      "message": "",
      "name": "/Users/dominic/Sites/defra/fcp-dal-api/test/unit/transformers/rural-payments/permissions.test.js",
      "startTime": 1759946555121,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["#convertSquareMetersToHectares"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "#convertSquareMetersToHectares should convert square meters to hectares",
          "invocations": 1,
          "location": { "column": 3, "line": 4 },
          "numPassingAsserts": 6,
          "retryReasons": [],
          "status": "passed",
          "title": "should convert square meters to hectares"
        },
        {
          "ancestorTitles": ["#convertSquareMetersToHectares"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "#convertSquareMetersToHectares should handle invalid inputs gracefully",
          "invocations": 1,
          "location": { "column": 3, "line": 13 },
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle invalid inputs gracefully"
        }
      ],
      "endTime": 1759946555217,
      "message": "",
      "name": "/Users/dominic/Sites/defra/fcp-dal-api/test/unit/utils/number.test.js",
      "startTime": 1759946555169,
      "status": "passed",
      "summary": ""
    }
  ],
  "wasInterrupted": false,
  "coverageMap": {
    "/Users/dominic/Sites/defra/fcp-dal-api/app/config.js": {
      "path": "/Users/dominic/Sites/defra/fcp-dal-api/app/config.js",
      "statementMap": {
        "0": { "start": { "line": 3, "column": 22 }, "end": { "line": 227, "column": 2 } },
        "1": { "start": { "line": 229, "column": 0 }, "end": { "line": 229, "column": 38 } }
      },
      "fnMap": {},
      "branchMap": {},
      "s": { "0": 32, "1": 32 },
      "f": {},
      "b": {},
      "inputSourceMap": null,
      "_coverageSchema": "1a1c01bbd47fc00a2c39e90264f33305004495a9",
      "hash": "8e35f6b97aeb556b58567e5d1fc235cca7ae5f58"
    },
    "/Users/dominic/Sites/defra/fcp-dal-api/app/errors/graphql.js": {
      "path": "/Users/dominic/Sites/defra/fcp-dal-api/app/errors/graphql.js",
      "statementMap": {
        "0": { "start": { "line": 6, "column": 4 }, "end": { "line": 6, "column": 27 } },
        "1": { "start": { "line": 8, "column": 4 }, "end": { "line": 8, "column": 92 } },
        "2": { "start": { "line": 9, "column": 4 }, "end": { "line": 9, "column": 63 } },
        "3": { "start": { "line": 15, "column": 4 }, "end": { "line": 15, "column": 27 } },
        "4": { "start": { "line": 17, "column": 4 }, "end": { "line": 17, "column": 89 } },
        "5": { "start": { "line": 18, "column": 4 }, "end": { "line": 18, "column": 60 } },
        "6": { "start": { "line": 24, "column": 4 }, "end": { "line": 24, "column": 27 } },
        "7": { "start": { "line": 26, "column": 4 }, "end": { "line": 26, "column": 91 } },
        "8": { "start": { "line": 27, "column": 4 }, "end": { "line": 27, "column": 62 } },
        "9": { "start": { "line": 33, "column": 23 }, "end": { "line": 33, "column": 60 } },
        "10": { "start": { "line": 35, "column": 4 }, "end": { "line": 35, "column": 30 } },
        "11": { "start": { "line": 37, "column": 4 }, "end": { "line": 37, "column": 51 } },
        "12": { "start": { "line": 38, "column": 4 }, "end": { "line": 38, "column": 49 } }
      },
      "fnMap": {
        "0": {
          "name": "(anonymous_0)",
          "decl": { "start": { "line": 5, "column": 2 }, "end": { "line": 5, "column": 3 } },
          "loc": { "start": { "line": 5, "column": 32 }, "end": { "line": 10, "column": 3 } },
          "line": 5
        },
        "1": {
          "name": "(anonymous_1)",
          "decl": { "start": { "line": 14, "column": 2 }, "end": { "line": 14, "column": 3 } },
          "loc": { "start": { "line": 14, "column": 32 }, "end": { "line": 19, "column": 3 } },
          "line": 14
        },
        "2": {
          "name": "(anonymous_2)",
          "decl": { "start": { "line": 23, "column": 2 }, "end": { "line": 23, "column": 3 } },
          "loc": { "start": { "line": 23, "column": 32 }, "end": { "line": 28, "column": 3 } },
          "line": 23
        },
        "3": {
          "name": "(anonymous_3)",
          "decl": { "start": { "line": 32, "column": 2 }, "end": { "line": 32, "column": 3 } },
          "loc": { "start": { "line": 32, "column": 35 }, "end": { "line": 39, "column": 3 } },
          "line": 32
        }
      },
      "branchMap": {},
      "s": {
        "0": 8,
        "1": 8,
        "2": 8,
        "3": 13,
        "4": 13,
        "5": 13,
        "6": 11,
        "7": 11,
        "8": 11,
        "9": 5,
        "10": 5,
        "11": 5,
        "12": 5
      },
      "f": { "0": 8, "1": 13, "2": 11, "3": 5 },
      "b": {},
      "inputSourceMap": null,
      "_coverageSchema": "1a1c01bbd47fc00a2c39e90264f33305004495a9",
      "hash": "32d985dc13b543f43c2e2bcf6d065bad45f2f803"
    },
    "/Users/dominic/Sites/defra/fcp-dal-api/app/logger/codes.js": {
      "path": "/Users/dominic/Sites/defra/fcp-dal-api/app/logger/codes.js",
      "statementMap": {
        "0": { "start": { "line": 7, "column": 46 }, "end": { "line": 7, "column": 78 } },
        "1": { "start": { "line": 8, "column": 43 }, "end": { "line": 8, "column": 72 } },
        "2": { "start": { "line": 9, "column": 44 }, "end": { "line": 9, "column": 74 } },
        "3": { "start": { "line": 10, "column": 39 }, "end": { "line": 10, "column": 64 } },
        "4": { "start": { "line": 11, "column": 42 }, "end": { "line": 11, "column": 70 } },
        "5": { "start": { "line": 12, "column": 36 }, "end": { "line": 12, "column": 58 } },
        "6": { "start": { "line": 13, "column": 37 }, "end": { "line": 13, "column": 60 } },
        "7": { "start": { "line": 15, "column": 45 }, "end": { "line": 15, "column": 76 } },
        "8": { "start": { "line": 16, "column": 47 }, "end": { "line": 16, "column": 80 } },
        "9": { "start": { "line": 17, "column": 43 }, "end": { "line": 17, "column": 72 } },
        "10": { "start": { "line": 18, "column": 51 }, "end": { "line": 18, "column": 88 } }
      },
      "fnMap": {},
      "branchMap": {},
      "s": {
        "0": 22,
        "1": 22,
        "2": 22,
        "3": 22,
        "4": 22,
        "5": 22,
        "6": 22,
        "7": 22,
        "8": 22,
        "9": 22,
        "10": 22
      },
      "f": {},
      "b": {},
      "inputSourceMap": null,
      "_coverageSchema": "1a1c01bbd47fc00a2c39e90264f33305004495a9",
      "hash": "ee0fb84b47190e0cf288be4b6ca56f73683164c3"
    },
    "/Users/dominic/Sites/defra/fcp-dal-api/app/logger/utils.js": {
      "path": "/Users/dominic/Sites/defra/fcp-dal-api/app/logger/utils.js",
      "statementMap": {
        "0": { "start": { "line": 1, "column": 20 }, "end": { "line": 9, "column": 1 } },
        "1": { "start": { "line": 2, "column": 2 }, "end": { "line": 4, "column": 3 } },
        "2": { "start": { "line": 3, "column": 4 }, "end": { "line": 3, "column": 16 } },
        "3": { "start": { "line": 5, "column": 2 }, "end": { "line": 7, "column": 3 } },
        "4": { "start": { "line": 6, "column": 4 }, "end": { "line": 6, "column": 16 } },
        "5": { "start": { "line": 8, "column": 2 }, "end": { "line": 8, "column": 35 } },
        "6": { "start": { "line": 11, "column": 30 }, "end": { "line": 42, "column": 1 } },
        "7": { "start": { "line": 12, "column": 22 }, "end": { "line": 29, "column": 3 } },
        "8": { "start": { "line": 13, "column": 4 }, "end": { "line": 15, "column": 5 } },
        "9": { "start": { "line": 14, "column": 6 }, "end": { "line": 14, "column": 23 } },
        "10": { "start": { "line": 17, "column": 4 }, "end": { "line": 26, "column": 5 } },
        "11": { "start": { "line": 18, "column": 24 }, "end": { "line": 18, "column": 41 } },
        "12": { "start": { "line": 19, "column": 6 }, "end": { "line": 21, "column": 7 } },
        "13": { "start": { "line": 20, "column": 8 }, "end": { "line": 20, "column": 52 } },
        "14": { "start": { "line": 22, "column": 6 }, "end": { "line": 22, "column": 22 } },
        "15": { "start": { "line": 23, "column": 11 }, "end": { "line": 26, "column": 5 } },
        "16": { "start": { "line": 24, "column": 22 }, "end": { "line": 24, "column": 45 } },
        "17": { "start": { "line": 25, "column": 6 }, "end": { "line": 25, "column": 37 } },
        "18": { "start": { "line": 28, "column": 4 }, "end": { "line": 28, "column": 21 } },
        "19": { "start": { "line": 31, "column": 13 }, "end": { "line": 31, "column": 21 } },
        "20": { "start": { "line": 32, "column": 2 }, "end": { "line": 39, "column": 3 } },
        "21": { "start": { "line": 34, "column": 4 }, "end": { "line": 36, "column": 5 } },
        "22": { "start": { "line": 35, "column": 6 }, "end": { "line": 35, "column": 29 } },
        "23": { "start": { "line": 41, "column": 2 }, "end": { "line": 41, "column": 26 } }
      },
      "fnMap": {
        "0": {
          "name": "(anonymous_0)",
          "decl": { "start": { "line": 1, "column": 20 }, "end": { "line": 1, "column": 21 } },
          "loc": { "start": { "line": 1, "column": 47 }, "end": { "line": 9, "column": 1 } },
          "line": 1
        },
        "1": {
          "name": "(anonymous_1)",
          "decl": { "start": { "line": 11, "column": 30 }, "end": { "line": 11, "column": 31 } },
          "loc": { "start": { "line": 11, "column": 44 }, "end": { "line": 42, "column": 1 } },
          "line": 11
        },
        "2": {
          "name": "(anonymous_2)",
          "decl": { "start": { "line": 12, "column": 22 }, "end": { "line": 12, "column": 23 } },
          "loc": { "start": { "line": 12, "column": 38 }, "end": { "line": 29, "column": 3 } },
          "line": 12
        }
      },
      "branchMap": {
        "0": {
          "loc": { "start": { "line": 1, "column": 28 }, "end": { "line": 1, "column": 42 } },
          "type": "default-arg",
          "locations": [
            { "start": { "line": 1, "column": 41 }, "end": { "line": 1, "column": 42 } }
          ],
          "line": 1
        },
        "1": {
          "loc": { "start": { "line": 2, "column": 2 }, "end": { "line": 4, "column": 3 } },
          "type": "if",
          "locations": [
            { "start": { "line": 2, "column": 2 }, "end": { "line": 4, "column": 3 } },
            { "start": {}, "end": {} }
          ],
          "line": 2
        },
        "2": {
          "loc": { "start": { "line": 5, "column": 2 }, "end": { "line": 7, "column": 3 } },
          "type": "if",
          "locations": [
            { "start": { "line": 5, "column": 2 }, "end": { "line": 7, "column": 3 } },
            { "start": {}, "end": {} }
          ],
          "line": 5
        },
        "3": {
          "loc": { "start": { "line": 13, "column": 4 }, "end": { "line": 15, "column": 5 } },
          "type": "if",
          "locations": [
            { "start": { "line": 13, "column": 4 }, "end": { "line": 15, "column": 5 } },
            { "start": {}, "end": {} }
          ],
          "line": 13
        },
        "4": {
          "loc": { "start": { "line": 17, "column": 4 }, "end": { "line": 26, "column": 5 } },
          "type": "if",
          "locations": [
            { "start": { "line": 17, "column": 4 }, "end": { "line": 26, "column": 5 } },
            { "start": { "line": 23, "column": 11 }, "end": { "line": 26, "column": 5 } }
          ],
          "line": 17
        },
        "5": {
          "loc": { "start": { "line": 17, "column": 8 }, "end": { "line": 17, "column": 82 } },
          "type": "binary-expr",
          "locations": [
            { "start": { "line": 17, "column": 8 }, "end": { "line": 17, "column": 18 } },
            { "start": { "line": 17, "column": 22 }, "end": { "line": 17, "column": 52 } },
            { "start": { "line": 17, "column": 56 }, "end": { "line": 17, "column": 82 } }
          ],
          "line": 17
        },
        "6": {
          "loc": { "start": { "line": 23, "column": 11 }, "end": { "line": 26, "column": 5 } },
          "type": "if",
          "locations": [
            { "start": { "line": 23, "column": 11 }, "end": { "line": 26, "column": 5 } },
            { "start": {}, "end": {} }
          ],
          "line": 23
        },
        "7": {
          "loc": { "start": { "line": 34, "column": 4 }, "end": { "line": 36, "column": 5 } },
          "type": "if",
          "locations": [
            { "start": { "line": 34, "column": 4 }, "end": { "line": 36, "column": 5 } },
            { "start": {}, "end": {} }
          ],
          "line": 34
        }
      },
      "s": {
        "0": 23,
        "1": 7,
        "2": 0,
        "3": 7,
        "4": 1,
        "5": 6,
        "6": 23,
        "7": 9,
        "8": 54,
        "9": 2,
        "10": 52,
        "11": 6,
        "12": 6,
        "13": 10,
        "14": 6,
        "15": 46,
        "16": 7,
        "17": 7,
        "18": 39,
        "19": 9,
        "20": 9,
        "21": 9,
        "22": 2,
        "23": 9
      },
      "f": { "0": 7, "1": 9, "2": 54 },
      "b": {
        "0": [7],
        "1": [0, 7],
        "2": [1, 6],
        "3": [2, 52],
        "4": [6, 46],
        "5": [52, 52, 13],
        "6": [7, 39],
        "7": [2, 7]
      },
      "inputSourceMap": null,
      "_coverageSchema": "1a1c01bbd47fc00a2c39e90264f33305004495a9",
      "hash": "d1406815219881493477a7fde3fe15b5dc5f476f"
    },
    "/Users/dominic/Sites/defra/fcp-dal-api/app/logger/winstonFormatters.js": {
      "path": "/Users/dominic/Sites/defra/fcp-dal-api/app/logger/winstonFormatters.js",
      "statementMap": {
        "0": { "start": { "line": 4, "column": 25 }, "end": { "line": 21, "column": 1 } },
        "1": { "start": { "line": 5, "column": 2 }, "end": { "line": 5, "column": 56 } },
        "2": { "start": { "line": 5, "column": 47 }, "end": { "line": 5, "column": 56 } },
        "3": { "start": { "line": 7, "column": 15 }, "end": { "line": 7, "column": 17 } },
        "4": { "start": { "line": 8, "column": 2 }, "end": { "line": 13, "column": 5 } },
        "5": { "start": { "line": 9, "column": 4 }, "end": { "line": 13, "column": 5 } },
        "6": { "start": { "line": 14, "column": 2 }, "end": { "line": 18, "column": 5 } },
        "7": { "start": { "line": 15, "column": 4 }, "end": { "line": 18, "column": 5 } },
        "8": { "start": { "line": 20, "column": 2 }, "end": { "line": 20, "column": 17 } },
        "9": { "start": { "line": 23, "column": 19 }, "end": { "line": 33, "column": 3 } },
        "10": { "start": { "line": 24, "column": 2 }, "end": { "line": 33, "column": 3 } },
        "11": { "start": { "line": 35, "column": 19 }, "end": { "line": 46, "column": 3 } },
        "12": { "start": { "line": 36, "column": 2 }, "end": { "line": 46, "column": 3 } },
        "13": { "start": { "line": 48, "column": 17 }, "end": { "line": 56, "column": 3 } },
        "14": { "start": { "line": 49, "column": 2 }, "end": { "line": 56, "column": 3 } },
        "15": { "start": { "line": 58, "column": 35 }, "end": { "line": 83, "column": 2 } },
        "16": { "start": { "line": 59, "column": 84 }, "end": { "line": 59, "column": 88 } },
        "17": { "start": { "line": 61, "column": 2 }, "end": { "line": 82, "column": 3 } },
        "18": { "start": { "line": 85, "column": 38 }, "end": { "line": 91, "column": 2 } },
        "19": { "start": { "line": 86, "column": 2 }, "end": { "line": 89, "column": 3 } },
        "20": { "start": { "line": 87, "column": 4 }, "end": { "line": 87, "column": 73 } },
        "21": { "start": { "line": 88, "column": 4 }, "end": { "line": 88, "column": 29 } },
        "22": { "start": { "line": 90, "column": 2 }, "end": { "line": 90, "column": 13 } }
      },
      "fnMap": {
        "0": {
          "name": "(anonymous_0)",
          "decl": { "start": { "line": 4, "column": 25 }, "end": { "line": 4, "column": 26 } },
          "loc": { "start": { "line": 4, "column": 63 }, "end": { "line": 21, "column": 1 } },
          "line": 4
        },
        "1": {
          "name": "(anonymous_1)",
          "decl": { "start": { "line": 23, "column": 19 }, "end": { "line": 23, "column": 20 } },
          "loc": { "start": { "line": 24, "column": 2 }, "end": { "line": 33, "column": 3 } },
          "line": 24
        },
        "2": {
          "name": "(anonymous_2)",
          "decl": { "start": { "line": 35, "column": 19 }, "end": { "line": 35, "column": 20 } },
          "loc": { "start": { "line": 36, "column": 2 }, "end": { "line": 46, "column": 3 } },
          "line": 36
        },
        "3": {
          "name": "(anonymous_3)",
          "decl": { "start": { "line": 48, "column": 17 }, "end": { "line": 48, "column": 18 } },
          "loc": { "start": { "line": 49, "column": 2 }, "end": { "line": 56, "column": 3 } },
          "line": 49
        },
        "4": {
          "name": "(anonymous_4)",
          "decl": { "start": { "line": 58, "column": 42 }, "end": { "line": 58, "column": 43 } },
          "loc": { "start": { "line": 58, "column": 52 }, "end": { "line": 83, "column": 1 } },
          "line": 58
        },
        "5": {
          "name": "(anonymous_5)",
          "decl": { "start": { "line": 85, "column": 45 }, "end": { "line": 85, "column": 46 } },
          "loc": { "start": { "line": 85, "column": 55 }, "end": { "line": 91, "column": 1 } },
          "line": 85
        }
      },
      "branchMap": {
        "0": {
          "loc": { "start": { "line": 5, "column": 2 }, "end": { "line": 5, "column": 56 } },
          "type": "if",
          "locations": [
            { "start": { "line": 5, "column": 2 }, "end": { "line": 5, "column": 56 } },
            { "start": {}, "end": {} }
          ],
          "line": 5
        },
        "1": {
          "loc": { "start": { "line": 5, "column": 6 }, "end": { "line": 5, "column": 45 } },
          "type": "binary-expr",
          "locations": [
            { "start": { "line": 5, "column": 6 }, "end": { "line": 5, "column": 14 } },
            { "start": { "line": 5, "column": 18 }, "end": { "line": 5, "column": 27 } },
            { "start": { "line": 5, "column": 31 }, "end": { "line": 5, "column": 45 } }
          ],
          "line": 5
        },
        "2": {
          "loc": { "start": { "line": 8, "column": 2 }, "end": { "line": 13, "column": 5 } },
          "type": "if",
          "locations": [
            { "start": { "line": 8, "column": 2 }, "end": { "line": 13, "column": 5 } },
            { "start": {}, "end": {} }
          ],
          "line": 8
        },
        "3": {
          "loc": { "start": { "line": 10, "column": 10 }, "end": { "line": 10, "column": 43 } },
          "type": "binary-expr",
          "locations": [
            { "start": { "line": 10, "column": 10 }, "end": { "line": 10, "column": 21 } },
            { "start": { "line": 10, "column": 25 }, "end": { "line": 10, "column": 43 } }
          ],
          "line": 10
        },
        "4": {
          "loc": { "start": { "line": 11, "column": 10 }, "end": { "line": 11, "column": 55 } },
          "type": "binary-expr",
          "locations": [
            { "start": { "line": 11, "column": 10 }, "end": { "line": 11, "column": 25 } },
            { "start": { "line": 11, "column": 29 }, "end": { "line": 11, "column": 55 } }
          ],
          "line": 11
        },
        "5": {
          "loc": { "start": { "line": 12, "column": 10 }, "end": { "line": 12, "column": 58 } },
          "type": "binary-expr",
          "locations": [
            { "start": { "line": 12, "column": 10 }, "end": { "line": 12, "column": 26 } },
            { "start": { "line": 12, "column": 30 }, "end": { "line": 12, "column": 58 } }
          ],
          "line": 12
        },
        "6": {
          "loc": { "start": { "line": 14, "column": 2 }, "end": { "line": 18, "column": 5 } },
          "type": "if",
          "locations": [
            { "start": { "line": 14, "column": 2 }, "end": { "line": 18, "column": 5 } },
            { "start": {}, "end": {} }
          ],
          "line": 14
        },
        "7": {
          "loc": { "start": { "line": 14, "column": 6 }, "end": { "line": 14, "column": 31 } },
          "type": "binary-expr",
          "locations": [
            { "start": { "line": 14, "column": 6 }, "end": { "line": 14, "column": 14 } },
            { "start": { "line": 14, "column": 18 }, "end": { "line": 14, "column": 31 } }
          ],
          "line": 14
        },
        "8": {
          "loc": { "start": { "line": 16, "column": 10 }, "end": { "line": 16, "column": 70 } },
          "type": "binary-expr",
          "locations": [
            { "start": { "line": 16, "column": 10 }, "end": { "line": 16, "column": 30 } },
            { "start": { "line": 16, "column": 34 }, "end": { "line": 16, "column": 70 } }
          ],
          "line": 16
        },
        "9": {
          "loc": { "start": { "line": 17, "column": 10 }, "end": { "line": 17, "column": 59 } },
          "type": "binary-expr",
          "locations": [
            { "start": { "line": 17, "column": 10 }, "end": { "line": 17, "column": 23 } },
            { "start": { "line": 17, "column": 27 }, "end": { "line": 17, "column": 59 } }
          ],
          "line": 17
        },
        "10": {
          "loc": { "start": { "line": 24, "column": 2 }, "end": { "line": 33, "column": 3 } },
          "type": "binary-expr",
          "locations": [
            { "start": { "line": 24, "column": 2 }, "end": { "line": 24, "column": 6 } },
            { "start": { "line": 25, "column": 2 }, "end": { "line": 25, "column": 9 } },
            { "start": { "line": 26, "column": 2 }, "end": { "line": 26, "column": 7 } },
            { "start": { "line": 26, "column": 11 }, "end": { "line": 33, "column": 3 } }
          ],
          "line": 24
        },
        "11": {
          "loc": { "start": { "line": 28, "column": 10 }, "end": { "line": 28, "column": 32 } },
          "type": "binary-expr",
          "locations": [
            { "start": { "line": 28, "column": 10 }, "end": { "line": 28, "column": 14 } },
            { "start": { "line": 28, "column": 18 }, "end": { "line": 28, "column": 32 } }
          ],
          "line": 28
        },
        "12": {
          "loc": { "start": { "line": 29, "column": 10 }, "end": { "line": 29, "column": 32 } },
          "type": "binary-expr",
          "locations": [
            { "start": { "line": 29, "column": 10 }, "end": { "line": 29, "column": 17 } },
            { "start": { "line": 29, "column": 21 }, "end": { "line": 29, "column": 32 } }
          ],
          "line": 29
        },
        "13": {
          "loc": { "start": { "line": 30, "column": 10 }, "end": { "line": 30, "column": 41 } },
          "type": "binary-expr",
          "locations": [
            { "start": { "line": 30, "column": 10 }, "end": { "line": 30, "column": 15 } },
            { "start": { "line": 30, "column": 19 }, "end": { "line": 30, "column": 41 } }
          ],
          "line": 30
        },
        "14": {
          "loc": { "start": { "line": 31, "column": 10 }, "end": { "line": 31, "column": 26 } },
          "type": "binary-expr",
          "locations": [
            { "start": { "line": 31, "column": 10 }, "end": { "line": 31, "column": 14 } },
            { "start": { "line": 31, "column": 18 }, "end": { "line": 31, "column": 26 } }
          ],
          "line": 31
        },
        "15": {
          "loc": { "start": { "line": 36, "column": 2 }, "end": { "line": 46, "column": 3 } },
          "type": "binary-expr",
          "locations": [
            { "start": { "line": 36, "column": 3 }, "end": { "line": 36, "column": 7 } },
            { "start": { "line": 36, "column": 11 }, "end": { "line": 36, "column": 19 } },
            { "start": { "line": 36, "column": 23 }, "end": { "line": 36, "column": 27 } },
            { "start": { "line": 36, "column": 31 }, "end": { "line": 36, "column": 38 } },
            { "start": { "line": 36, "column": 42 }, "end": { "line": 36, "column": 50 } },
            { "start": { "line": 36, "column": 54 }, "end": { "line": 36, "column": 61 } },
            { "start": { "line": 36, "column": 65 }, "end": { "line": 36, "column": 74 } },
            { "start": { "line": 36, "column": 79 }, "end": { "line": 46, "column": 3 } }
          ],
          "line": 36
        },
        "16": {
          "loc": { "start": { "line": 38, "column": 10 }, "end": { "line": 38, "column": 26 } },
          "type": "binary-expr",
          "locations": [
            { "start": { "line": 38, "column": 10 }, "end": { "line": 38, "column": 14 } },
            { "start": { "line": 38, "column": 18 }, "end": { "line": 38, "column": 26 } }
          ],
          "line": 38
        },
        "17": {
          "loc": { "start": { "line": 39, "column": 10 }, "end": { "line": 39, "column": 34 } },
          "type": "binary-expr",
          "locations": [
            { "start": { "line": 39, "column": 10 }, "end": { "line": 39, "column": 18 } },
            { "start": { "line": 39, "column": 22 }, "end": { "line": 39, "column": 34 } }
          ],
          "line": 39
        },
        "18": {
          "loc": { "start": { "line": 40, "column": 10 }, "end": { "line": 40, "column": 26 } },
          "type": "binary-expr",
          "locations": [
            { "start": { "line": 40, "column": 10 }, "end": { "line": 40, "column": 14 } },
            { "start": { "line": 40, "column": 18 }, "end": { "line": 40, "column": 26 } }
          ],
          "line": 40
        },
        "19": {
          "loc": { "start": { "line": 41, "column": 10 }, "end": { "line": 41, "column": 32 } },
          "type": "binary-expr",
          "locations": [
            { "start": { "line": 41, "column": 10 }, "end": { "line": 41, "column": 17 } },
            { "start": { "line": 41, "column": 21 }, "end": { "line": 41, "column": 32 } }
          ],
          "line": 41
        },
        "20": {
          "loc": { "start": { "line": 42, "column": 10 }, "end": { "line": 42, "column": 54 } },
          "type": "binary-expr",
          "locations": [
            { "start": { "line": 42, "column": 10 }, "end": { "line": 42, "column": 18 } },
            { "start": { "line": 42, "column": 22 }, "end": { "line": 42, "column": 54 } }
          ],
          "line": 42
        },
        "21": {
          "loc": { "start": { "line": 43, "column": 10 }, "end": { "line": 43, "column": 32 } },
          "type": "binary-expr",
          "locations": [
            { "start": { "line": 43, "column": 10 }, "end": { "line": 43, "column": 17 } },
            { "start": { "line": 43, "column": 21 }, "end": { "line": 43, "column": 32 } }
          ],
          "line": 43
        },
        "22": {
          "loc": { "start": { "line": 44, "column": 10 }, "end": { "line": 44, "column": 36 } },
          "type": "binary-expr",
          "locations": [
            { "start": { "line": 44, "column": 10 }, "end": { "line": 44, "column": 19 } },
            { "start": { "line": 44, "column": 23 }, "end": { "line": 44, "column": 36 } }
          ],
          "line": 44
        },
        "23": {
          "loc": { "start": { "line": 49, "column": 2 }, "end": { "line": 56, "column": 3 } },
          "type": "binary-expr",
          "locations": [
            { "start": { "line": 49, "column": 3 }, "end": { "line": 49, "column": 7 } },
            { "start": { "line": 49, "column": 11 }, "end": { "line": 49, "column": 15 } },
            { "start": { "line": 49, "column": 20 }, "end": { "line": 56, "column": 3 } }
          ],
          "line": 49
        },
        "24": {
          "loc": { "start": { "line": 52, "column": 10 }, "end": { "line": 54, "column": 7 } },
          "type": "binary-expr",
          "locations": [
            { "start": { "line": 52, "column": 10 }, "end": { "line": 52, "column": 14 } },
            { "start": { "line": 52, "column": 18 }, "end": { "line": 54, "column": 7 } }
          ],
          "line": 52
        },
        "25": {
          "loc": { "start": { "line": 53, "column": 35 }, "end": { "line": 53, "column": 85 } },
          "type": "cond-expr",
          "locations": [
            { "start": { "line": 53, "column": 62 }, "end": { "line": 53, "column": 78 } },
            { "start": { "line": 53, "column": 81 }, "end": { "line": 53, "column": 85 } }
          ],
          "line": 53
        },
        "26": {
          "loc": { "start": { "line": 67, "column": 6 }, "end": { "line": 67, "column": 58 } },
          "type": "binary-expr",
          "locations": [
            { "start": { "line": 67, "column": 6 }, "end": { "line": 67, "column": 19 } },
            { "start": { "line": 67, "column": 23 }, "end": { "line": 67, "column": 58 } }
          ],
          "line": 67
        },
        "27": {
          "loc": { "start": { "line": 68, "column": 6 }, "end": { "line": 68, "column": 60 } },
          "type": "binary-expr",
          "locations": [
            { "start": { "line": 68, "column": 6 }, "end": { "line": 68, "column": 13 } },
            { "start": { "line": 68, "column": 17 }, "end": { "line": 68, "column": 60 } }
          ],
          "line": 68
        },
        "28": {
          "loc": { "start": { "line": 69, "column": 17 }, "end": { "line": 69, "column": 28 } },
          "type": "binary-expr",
          "locations": [
            { "start": { "line": 69, "column": 17 }, "end": { "line": 69, "column": 22 } },
            { "start": { "line": 69, "column": 26 }, "end": { "line": 69, "column": 28 } }
          ],
          "line": 69
        },
        "29": {
          "loc": { "start": { "line": 80, "column": 15 }, "end": { "line": 80, "column": 28 } },
          "type": "binary-expr",
          "locations": [
            { "start": { "line": 80, "column": 15 }, "end": { "line": 80, "column": 22 } },
            { "start": { "line": 80, "column": 26 }, "end": { "line": 80, "column": 28 } }
          ],
          "line": 80
        },
        "30": {
          "loc": { "start": { "line": 86, "column": 2 }, "end": { "line": 89, "column": 3 } },
          "type": "if",
          "locations": [
            { "start": { "line": 86, "column": 2 }, "end": { "line": 89, "column": 3 } },
            { "start": {}, "end": {} }
          ],
          "line": 86
        }
      },
      "s": {
        "0": 22,
        "1": 6,
        "2": 2,
        "3": 4,
        "4": 4,
        "5": 3,
        "6": 4,
        "7": 2,
        "8": 4,
        "9": 22,
        "10": 6,
        "11": 22,
        "12": 6,
        "13": 22,
        "14": 6,
        "15": 22,
        "16": 6,
        "17": 6,
        "18": 22,
        "19": 5,
        "20": 1,
        "21": 1,
        "22": 5
      },
      "f": { "0": 6, "1": 6, "2": 6, "3": 6, "4": 6, "5": 5 },
      "b": {
        "0": [2, 4],
        "1": [6, 3, 3],
        "2": [3, 1],
        "3": [3, 3],
        "4": [3, 2],
        "5": [3, 2],
        "6": [2, 2],
        "7": [4, 3],
        "8": [2, 1],
        "9": [2, 2],
        "10": [6, 1, 1, 1],
        "11": [1, 1],
        "12": [1, 1],
        "13": [1, 1],
        "14": [1, 1],
        "15": [6, 5, 5, 4, 3, 2, 2, 4],
        "16": [4, 1],
        "17": [4, 1],
        "18": [4, 2],
        "19": [4, 2],
        "20": [4, 2],
        "21": [4, 1],
        "22": [4, 2],
        "23": [6, 4, 2],
        "24": [2, 2],
        "25": [1, 1],
        "26": [6, 1],
        "27": [6, 1],
        "28": [6, 5],
        "29": [6, 3],
        "30": [1, 4]
      },
      "inputSourceMap": null,
      "_coverageSchema": "1a1c01bbd47fc00a2c39e90264f33305004495a9",
      "hash": "64408787bc277c95bff27f9ef9c659685868939f"
    },
    "/Users/dominic/Sites/defra/fcp-dal-api/app/logger/logger.js": {
      "path": "/Users/dominic/Sites/defra/fcp-dal-api/app/logger/logger.js",
      "statementMap": {
        "0": { "start": { "line": 6, "column": 23 }, "end": { "line": 6, "column": 25 } },
        "1": { "start": { "line": 7, "column": 0 }, "end": { "line": 14, "column": 1 } },
        "2": { "start": { "line": 16, "column": 18 }, "end": { "line": 22, "column": 1 } },
        "3": { "start": { "line": 24, "column": 22 }, "end": { "line": 28, "column": 2 } },
        "4": { "start": { "line": 30, "column": 0 }, "end": { "line": 36, "column": 2 } },
        "5": { "start": { "line": 31, "column": 2 }, "end": { "line": 35, "column": 4 } },
        "6": { "start": { "line": 32, "column": 4 }, "end": { "line": 34, "column": 5 } },
        "7": { "start": { "line": 33, "column": 6 }, "end": { "line": 33, "column": 23 } }
      },
      "fnMap": {
        "0": {
          "name": "(anonymous_0)",
          "decl": { "start": { "line": 30, "column": 19 }, "end": { "line": 30, "column": 20 } },
          "loc": { "start": { "line": 30, "column": 25 }, "end": { "line": 36, "column": 1 } },
          "line": 30
        },
        "1": {
          "name": "(anonymous_1)",
          "decl": { "start": { "line": 31, "column": 28 }, "end": { "line": 31, "column": 29 } },
          "loc": { "start": { "line": 31, "column": 43 }, "end": { "line": 35, "column": 3 } },
          "line": 31
        }
      },
      "branchMap": {
        "0": {
          "loc": { "start": { "line": 10, "column": 6 }, "end": { "line": 12, "column": 34 } },
          "type": "cond-expr",
          "locations": [
            { "start": { "line": 11, "column": 10 }, "end": { "line": 11, "column": 60 } },
            { "start": { "line": 12, "column": 10 }, "end": { "line": 12, "column": 34 } }
          ],
          "line": 10
        },
        "1": {
          "loc": { "start": { "line": 32, "column": 4 }, "end": { "line": 34, "column": 5 } },
          "type": "if",
          "locations": [
            { "start": { "line": 32, "column": 4 }, "end": { "line": 34, "column": 5 } },
            { "start": {}, "end": {} }
          ],
          "line": 32
        }
      },
      "s": { "0": 24, "1": 24, "2": 24, "3": 24, "4": 24, "5": 4, "6": 4, "7": 1 },
      "f": { "0": 4, "1": 4 },
      "b": { "0": [1, 23], "1": [1, 3] },
      "inputSourceMap": null,
      "_coverageSchema": "1a1c01bbd47fc00a2c39e90264f33305004495a9",
      "hash": "338d17a178f1cc7ffecf6bb6e0460b7b16d2ee22"
    },
    "/Users/dominic/Sites/defra/fcp-dal-api/app/logger/sendMetric.js": {
      "path": "/Users/dominic/Sites/defra/fcp-dal-api/app/logger/sendMetric.js",
      "statementMap": {
        "0": { "start": { "line": 7, "column": 2 }, "end": { "line": 26, "column": 35 } },
        "1": { "start": { "line": 15, "column": 8 }, "end": { "line": 24, "column": 9 } },
        "2": { "start": { "line": 16, "column": 32 }, "end": { "line": 16, "column": 53 } },
        "3": { "start": { "line": 17, "column": 10 }, "end": { "line": 19, "column": 11 } },
        "4": { "start": { "line": 18, "column": 12 }, "end": { "line": 18, "column": 51 } },
        "5": { "start": { "line": 20, "column": 10 }, "end": { "line": 20, "column": 77 } },
        "6": { "start": { "line": 21, "column": 10 }, "end": { "line": 21, "column": 37 } },
        "7": { "start": { "line": 23, "column": 10 }, "end": { "line": 23, "column": 94 } },
        "8": { "start": { "line": 26, "column": 18 }, "end": { "line": 26, "column": 35 } }
      },
      "fnMap": {
        "0": {
          "name": "(anonymous_0)",
          "decl": { "start": { "line": 8, "column": 6 }, "end": { "line": 8, "column": 7 } },
          "loc": { "start": { "line": 14, "column": 11 }, "end": { "line": 25, "column": 7 } },
          "line": 14
        },
        "1": {
          "name": "(anonymous_1)",
          "decl": { "start": { "line": 26, "column": 6 }, "end": { "line": 26, "column": 7 } },
          "loc": { "start": { "line": 26, "column": 18 }, "end": { "line": 26, "column": 35 } },
          "line": 26
        }
      },
      "branchMap": {
        "0": {
          "loc": { "start": { "line": 7, "column": 2 }, "end": { "line": 26, "column": 35 } },
          "type": "cond-expr",
          "locations": [
            { "start": { "line": 8, "column": 6 }, "end": { "line": 25, "column": 7 } },
            { "start": { "line": 26, "column": 6 }, "end": { "line": 26, "column": 35 } }
          ],
          "line": 7
        },
        "1": {
          "loc": { "start": { "line": 10, "column": 8 }, "end": { "line": 10, "column": 17 } },
          "type": "default-arg",
          "locations": [
            { "start": { "line": 10, "column": 16 }, "end": { "line": 10, "column": 17 } }
          ],
          "line": 10
        },
        "2": {
          "loc": { "start": { "line": 11, "column": 8 }, "end": { "line": 11, "column": 25 } },
          "type": "default-arg",
          "locations": [
            { "start": { "line": 11, "column": 15 }, "end": { "line": 11, "column": 25 } }
          ],
          "line": 11
        },
        "3": {
          "loc": { "start": { "line": 12, "column": 8 }, "end": { "line": 12, "column": 23 } },
          "type": "default-arg",
          "locations": [
            { "start": { "line": 12, "column": 21 }, "end": { "line": 12, "column": 23 } }
          ],
          "line": 12
        },
        "4": {
          "loc": { "start": { "line": 13, "column": 8 }, "end": { "line": 13, "column": 54 } },
          "type": "default-arg",
          "locations": [
            { "start": { "line": 13, "column": 28 }, "end": { "line": 13, "column": 54 } }
          ],
          "line": 13
        },
        "5": {
          "loc": { "start": { "line": 17, "column": 10 }, "end": { "line": 19, "column": 11 } },
          "type": "if",
          "locations": [
            { "start": { "line": 17, "column": 10 }, "end": { "line": 19, "column": 11 } },
            { "start": {}, "end": {} }
          ],
          "line": 17
        }
      },
      "s": { "0": 20, "1": 3, "2": 3, "3": 3, "4": 1, "5": 3, "6": 2, "7": 1, "8": 136 },
      "f": { "0": 3, "1": 136 },
      "b": { "0": [1, 19], "1": [2], "2": [2], "3": [2], "4": [2], "5": [1, 2] },
      "inputSourceMap": null,
      "_coverageSchema": "1a1c01bbd47fc00a2c39e90264f33305004495a9",
      "hash": "11723c34be55016c262bf352744e95bc61d936ea"
    },
    "/Users/dominic/Sites/defra/fcp-dal-api/app/auth/authenticate.js": {
      "path": "/Users/dominic/Sites/defra/fcp-dal-api/app/auth/authenticate.js",
      "statementMap": {
        "0": { "start": { "line": 13, "column": 26 }, "end": { "line": 13, "column": 51 } },
        "1": { "start": { "line": 16, "column": 23 }, "end": { "line": 19, "column": 3 } },
        "2": { "start": { "line": 21, "column": 2 }, "end": { "line": 23, "column": 3 } },
        "3": { "start": { "line": 22, "column": 4 }, "end": { "line": 22, "column": 81 } },
        "4": { "start": { "line": 25, "column": 17 }, "end": { "line": 27, "column": 4 } },
        "5": { "start": { "line": 29, "column": 14 }, "end": { "line": 29, "column": 45 } },
        "6": { "start": { "line": 30, "column": 2 }, "end": { "line": 30, "column": 27 } },
        "7": { "start": { "line": 34, "column": 2 }, "end": { "line": 84, "column": 3 } },
        "8": { "start": { "line": 35, "column": 23 }, "end": { "line": 35, "column": 54 } },
        "9": { "start": { "line": 36, "column": 4 }, "end": { "line": 38, "column": 5 } },
        "10": { "start": { "line": 37, "column": 6 }, "end": { "line": 37, "column": 15 } },
        "11": { "start": { "line": 39, "column": 4 }, "end": { "line": 44, "column": 6 } },
        "12": { "start": { "line": 45, "column": 18 }, "end": { "line": 45, "column": 42 } },
        "13": { "start": { "line": 46, "column": 25 }, "end": { "line": 46, "column": 62 } },
        "14": { "start": { "line": 47, "column": 19 }, "end": { "line": 47, "column": 38 } },
        "15": { "start": { "line": 48, "column": 25 }, "end": { "line": 48, "column": 35 } },
        "16": { "start": { "line": 49, "column": 23 }, "end": { "line": 49, "column": 60 } },
        "17": { "start": { "line": 50, "column": 26 }, "end": { "line": 50, "column": 51 } },
        "18": { "start": { "line": 51, "column": 21 }, "end": { "line": 51, "column": 50 } },
        "19": { "start": { "line": 52, "column": 4 }, "end": { "line": 54, "column": 6 } },
        "20": { "start": { "line": 56, "column": 4 }, "end": { "line": 63, "column": 6 } },
        "21": { "start": { "line": 64, "column": 4 }, "end": { "line": 64, "column": 19 } },
        "22": { "start": { "line": 66, "column": 4 }, "end": { "line": 82, "column": 5 } },
        "23": { "start": { "line": 67, "column": 6 }, "end": { "line": 73, "column": 8 } },
        "24": { "start": { "line": 75, "column": 6 }, "end": { "line": 81, "column": 8 } },
        "25": { "start": { "line": 83, "column": 4 }, "end": { "line": 83, "column": 13 } },
        "26": { "start": { "line": 88, "column": 18 }, "end": { "line": 88, "column": 60 } },
        "27": { "start": { "line": 89, "column": 2 }, "end": { "line": 96, "column": 3 } },
        "28": { "start": { "line": 90, "column": 4 }, "end": { "line": 90, "column": 10 } },
        "29": { "start": { "line": 92, "column": 22 }, "end": { "line": 92, "column": 96 } },
        "30": { "start": { "line": 92, "column": 52 }, "end": { "line": 92, "column": 95 } },
        "31": { "start": { "line": 93, "column": 4 }, "end": { "line": 95, "column": 5 } },
        "32": { "start": { "line": 94, "column": 6 }, "end": { "line": 94, "column": 90 } },
        "33": { "start": { "line": 100, "column": 36 }, "end": { "line": 100, "column": 38 } },
        "34": { "start": { "line": 101, "column": 24 }, "end": { "line": 101, "column": 30 } },
        "35": { "start": { "line": 102, "column": 2 }, "end": { "line": 122, "column": 4 } },
        "36": { "start": { "line": 104, "column": 28 }, "end": { "line": 104, "column": 74 } },
        "37": { "start": { "line": 105, "column": 6 }, "end": { "line": 107, "column": 7 } },
        "38": { "start": { "line": 106, "column": 8 }, "end": { "line": 106, "column": 60 } },
        "39": { "start": { "line": 108, "column": 6 }, "end": { "line": 108, "column": 22 } },
        "40": { "start": { "line": 112, "column": 8 }, "end": { "line": 112, "column": 100 } },
        "41": { "start": { "line": 113, "column": 49 }, "end": { "line": 113, "column": 60 } },
        "42": { "start": { "line": 114, "column": 6 }, "end": { "line": 119, "column": 7 } },
        "43": { "start": { "line": 115, "column": 8 }, "end": { "line": 118, "column": 9 } },
        "44": { "start": { "line": 116, "column": 10 }, "end": { "line": 116, "column": 75 } },
        "45": { "start": { "line": 117, "column": 10 }, "end": { "line": 117, "column": 53 } },
        "46": { "start": { "line": 120, "column": 6 }, "end": { "line": 120, "column": 24 } }
      },
      "fnMap": {
        "0": {
          "name": "getJwtPublicKey",
          "decl": { "start": { "line": 15, "column": 22 }, "end": { "line": 15, "column": 37 } },
          "loc": { "start": { "line": 15, "column": 43 }, "end": { "line": 31, "column": 1 } },
          "line": 15
        },
        "1": {
          "name": "getAuth",
          "decl": { "start": { "line": 33, "column": 22 }, "end": { "line": 33, "column": 29 } },
          "loc": { "start": { "line": 33, "column": 78 }, "end": { "line": 85, "column": 1 } },
          "line": 33
        },
        "2": {
          "name": "checkAuthGroup",
          "decl": { "start": { "line": 87, "column": 16 }, "end": { "line": 87, "column": 30 } },
          "loc": { "start": { "line": 87, "column": 63 }, "end": { "line": 97, "column": 1 } },
          "line": 87
        },
        "3": {
          "name": "(anonymous_3)",
          "decl": { "start": { "line": 92, "column": 41 }, "end": { "line": 92, "column": 42 } },
          "loc": { "start": { "line": 92, "column": 52 }, "end": { "line": 92, "column": 95 } },
          "line": 92
        },
        "4": {
          "name": "authDirectiveTransformer",
          "decl": { "start": { "line": 99, "column": 16 }, "end": { "line": 99, "column": 40 } },
          "loc": { "start": { "line": 99, "column": 49 }, "end": { "line": 123, "column": 1 } },
          "line": 99
        },
        "5": {
          "name": "(anonymous_5)",
          "decl": { "start": { "line": 103, "column": 4 }, "end": { "line": 103, "column": 5 } },
          "loc": { "start": { "line": 103, "column": 28 }, "end": { "line": 109, "column": 5 } },
          "line": 103
        },
        "6": {
          "name": "(anonymous_6)",
          "decl": { "start": { "line": 110, "column": 4 }, "end": { "line": 110, "column": 5 } },
          "loc": { "start": { "line": 110, "column": 65 }, "end": { "line": 121, "column": 5 } },
          "line": 110
        },
        "7": {
          "name": "(anonymous_7)",
          "decl": { "start": { "line": 115, "column": 30 }, "end": { "line": 115, "column": 31 } },
          "loc": { "start": { "line": 115, "column": 69 }, "end": { "line": 118, "column": 9 } },
          "line": 115
        }
      },
      "branchMap": {
        "0": {
          "loc": { "start": { "line": 21, "column": 2 }, "end": { "line": 23, "column": 3 } },
          "type": "if",
          "locations": [
            { "start": { "line": 21, "column": 2 }, "end": { "line": 23, "column": 3 } },
            { "start": {}, "end": {} }
          ],
          "line": 21
        },
        "1": {
          "loc": { "start": { "line": 33, "column": 39 }, "end": { "line": 33, "column": 76 } },
          "type": "default-arg",
          "locations": [
            { "start": { "line": 33, "column": 61 }, "end": { "line": 33, "column": 76 } }
          ],
          "line": 33
        },
        "2": {
          "loc": { "start": { "line": 36, "column": 4 }, "end": { "line": 38, "column": 5 } },
          "type": "if",
          "locations": [
            { "start": { "line": 36, "column": 4 }, "end": { "line": 38, "column": 5 } },
            { "start": {}, "end": {} }
          ],
          "line": 36
        },
        "3": {
          "loc": { "start": { "line": 66, "column": 4 }, "end": { "line": 82, "column": 5 } },
          "type": "if",
          "locations": [
            { "start": { "line": 66, "column": 4 }, "end": { "line": 82, "column": 5 } },
            { "start": { "line": 74, "column": 11 }, "end": { "line": 82, "column": 5 } }
          ],
          "line": 66
        },
        "4": {
          "loc": { "start": { "line": 89, "column": 2 }, "end": { "line": 96, "column": 3 } },
          "type": "if",
          "locations": [
            { "start": { "line": 89, "column": 2 }, "end": { "line": 96, "column": 3 } },
            { "start": { "line": 91, "column": 9 }, "end": { "line": 96, "column": 3 } }
          ],
          "line": 89
        },
        "5": {
          "loc": { "start": { "line": 93, "column": 4 }, "end": { "line": 95, "column": 5 } },
          "type": "if",
          "locations": [
            { "start": { "line": 93, "column": 4 }, "end": { "line": 95, "column": 5 } },
            { "start": {}, "end": {} }
          ],
          "line": 93
        },
        "6": {
          "loc": { "start": { "line": 105, "column": 6 }, "end": { "line": 107, "column": 7 } },
          "type": "if",
          "locations": [
            { "start": { "line": 105, "column": 6 }, "end": { "line": 107, "column": 7 } },
            { "start": {}, "end": {} }
          ],
          "line": 105
        },
        "7": {
          "loc": { "start": { "line": 112, "column": 8 }, "end": { "line": 112, "column": 100 } },
          "type": "binary-expr",
          "locations": [
            { "start": { "line": 112, "column": 8 }, "end": { "line": 112, "column": 61 } },
            { "start": { "line": 112, "column": 65 }, "end": { "line": 112, "column": 100 } }
          ],
          "line": 112
        },
        "8": {
          "loc": { "start": { "line": 113, "column": 14 }, "end": { "line": 113, "column": 44 } },
          "type": "default-arg",
          "locations": [
            { "start": { "line": 113, "column": 24 }, "end": { "line": 113, "column": 44 } }
          ],
          "line": 113
        },
        "9": {
          "loc": { "start": { "line": 114, "column": 6 }, "end": { "line": 119, "column": 7 } },
          "type": "if",
          "locations": [
            { "start": { "line": 114, "column": 6 }, "end": { "line": 119, "column": 7 } },
            { "start": {}, "end": {} }
          ],
          "line": 114
        },
        "10": {
          "loc": { "start": { "line": 116, "column": 25 }, "end": { "line": 116, "column": 50 } },
          "type": "binary-expr",
          "locations": [
            { "start": { "line": 116, "column": 25 }, "end": { "line": 116, "column": 44 } },
            { "start": { "line": 116, "column": 48 }, "end": { "line": 116, "column": 50 } }
          ],
          "line": 116
        }
      },
      "s": {
        "0": 12,
        "1": 2,
        "2": 2,
        "3": 1,
        "4": 2,
        "5": 2,
        "6": 2,
        "7": 34,
        "8": 34,
        "9": 34,
        "10": 30,
        "11": 4,
        "12": 4,
        "13": 4,
        "14": 4,
        "15": 3,
        "16": 3,
        "17": 2,
        "18": 2,
        "19": 1,
        "20": 1,
        "21": 1,
        "22": 3,
        "23": 1,
        "24": 2,
        "25": 3,
        "26": 5,
        "27": 5,
        "28": 1,
        "29": 4,
        "30": 6,
        "31": 4,
        "32": 4,
        "33": 3,
        "34": 3,
        "35": 3,
        "36": 144,
        "37": 144,
        "38": 0,
        "39": 144,
        "40": 435,
        "41": 435,
        "42": 435,
        "43": 55,
        "44": 2,
        "45": 0,
        "46": 435
      },
      "f": { "0": 2, "1": 34, "2": 5, "3": 6, "4": 3, "5": 144, "6": 435, "7": 2 },
      "b": {
        "0": [1, 1],
        "1": [30],
        "2": [30, 4],
        "3": [1, 2],
        "4": [1, 4],
        "5": [4, 0],
        "6": [0, 144],
        "7": [435, 380],
        "8": [339],
        "9": [55, 380],
        "10": [2, 2]
      },
      "inputSourceMap": null,
      "_coverageSchema": "1a1c01bbd47fc00a2c39e90264f33305004495a9",
      "hash": "825fd689704bcde08d8dcc0ef8944ad5aab26e26"
    },
    "/Users/dominic/Sites/defra/fcp-dal-api/app/utils/headers.js": {
      "path": "/Users/dominic/Sites/defra/fcp-dal-api/app/utils/headers.js",
      "statementMap": {
        "0": { "start": { "line": 1, "column": 30 }, "end": { "line": 3, "column": 1 } }
      },
      "fnMap": {},
      "branchMap": {},
      "s": { "0": 14 },
      "f": {},
      "b": {},
      "inputSourceMap": null,
      "_coverageSchema": "1a1c01bbd47fc00a2c39e90264f33305004495a9",
      "hash": "5829050c24d2fc0fed31f260a697e0a3e17d2e21"
    },
    "/Users/dominic/Sites/defra/fcp-dal-api/app/data-sources/rural-payments/RuralPayments.js": {
      "path": "/Users/dominic/Sites/defra/fcp-dal-api/app/data-sources/rural-payments/RuralPayments.js",
      "statementMap": {
        "0": { "start": { "line": 12, "column": 27 }, "end": { "line": 12, "column": 57 } },
        "1": { "start": { "line": 13, "column": 27 }, "end": { "line": 13, "column": 57 } },
        "2": { "start": { "line": 14, "column": 27 }, "end": { "line": 14, "column": 68 } },
        "3": { "start": { "line": 15, "column": 27 }, "end": { "line": 15, "column": 68 } },
        "4": { "start": { "line": 18, "column": 21 }, "end": { "line": 18, "column": 68 } },
        "5": { "start": { "line": 19, "column": 18 }, "end": { "line": 19, "column": 37 } },
        "6": { "start": { "line": 20, "column": 21 }, "end": { "line": 24, "column": 3 } },
        "7": { "start": { "line": 26, "column": 2 }, "end": { "line": 35, "column": 3 } },
        "8": { "start": { "line": 27, "column": 27 }, "end": { "line": 27, "column": 78 } },
        "9": { "start": { "line": 28, "column": 26 }, "end": { "line": 28, "column": 76 } },
        "10": { "start": { "line": 29, "column": 24 }, "end": { "line": 29, "column": 86 } },
        "11": { "start": { "line": 30, "column": 23 }, "end": { "line": 30, "column": 84 } },
        "12": { "start": { "line": 31, "column": 4 }, "end": { "line": 34, "column": 6 } },
        "13": { "start": { "line": 37, "column": 2 }, "end": { "line": 37, "column": 19 } },
        "14": { "start": { "line": 41, "column": 22 }, "end": { "line": 41, "column": 59 } },
        "15": { "start": { "line": 42, "column": 2 }, "end": { "line": 44, "column": 3 } },
        "16": { "start": { "line": 43, "column": 4 }, "end": { "line": 43, "column": 28 } },
        "17": { "start": { "line": 45, "column": 2 }, "end": { "line": 45, "column": 61 } },
        "18": { "start": { "line": 49, "column": 2 }, "end": { "line": 58, "column": 3 } },
        "19": { "start": { "line": 50, "column": 4 }, "end": { "line": 52, "column": 6 } },
        "20": { "start": { "line": 54, "column": 4 }, "end": { "line": 57, "column": 6 } },
        "21": { "start": { "line": 60, "column": 2 }, "end": { "line": 63, "column": 4 } },
        "22": { "start": { "line": 68, "column": 12 }, "end": { "line": 68, "column": 16 } },
        "23": { "start": { "line": 70, "column": 4 }, "end": { "line": 70, "column": 17 } },
        "24": { "start": { "line": 71, "column": 4 }, "end": { "line": 71, "column": 26 } },
        "25": { "start": { "line": 73, "column": 4 }, "end": { "line": 73, "column": 48 } },
        "26": { "start": { "line": 74, "column": 4 }, "end": { "line": 78, "column": 5 } },
        "27": { "start": { "line": 75, "column": 6 }, "end": { "line": 77, "column": 7 } },
        "28": { "start": { "line": 80, "column": 4 }, "end": { "line": 80, "column": 92 } },
        "29": { "start": { "line": 81, "column": 23 }, "end": { "line": 81, "column": 96 } },
        "30": { "start": { "line": 83, "column": 4 }, "end": { "line": 85, "column": 5 } },
        "31": { "start": { "line": 84, "column": 6 }, "end": { "line": 84, "column": 50 } },
        "32": { "start": { "line": 89, "column": 4 }, "end": { "line": 89, "column": 22 } },
        "33": { "start": { "line": 91, "column": 4 }, "end": { "line": 96, "column": 6 } },
        "34": { "start": { "line": 100, "column": 4 }, "end": { "line": 102, "column": 5 } },
        "35": { "start": { "line": 101, "column": 6 }, "end": { "line": 101, "column": 12 } },
        "36": { "start": { "line": 104, "column": 23 }, "end": { "line": 111, "column": 5 } },
        "37": { "start": { "line": 113, "column": 4 }, "end": { "line": 115, "column": 6 } },
        "38": { "start": { "line": 119, "column": 20 }, "end": { "line": 119, "column": 40 } },
        "39": { "start": { "line": 120, "column": 30 }, "end": { "line": 120, "column": 32 } },
        "40": { "start": { "line": 121, "column": 4 }, "end": { "line": 133, "column": 5 } },
        "41": { "start": { "line": 122, "column": 6 }, "end": { "line": 122, "column": 45 } },
        "42": { "start": { "line": 123, "column": 11 }, "end": { "line": 133, "column": 5 } },
        "43": { "start": { "line": 124, "column": 6 }, "end": { "line": 124, "column": 76 } },
        "44": { "start": { "line": 125, "column": 6 }, "end": { "line": 125, "column": 94 } },
        "45": { "start": { "line": 127, "column": 6 }, "end": { "line": 132, "column": 8 } },
        "46": { "start": { "line": 135, "column": 4 }, "end": { "line": 138, "column": 5 } },
        "47": { "start": { "line": 140, "column": 4 }, "end": { "line": 143, "column": 6 } },
        "48": { "start": { "line": 148, "column": 25 }, "end": { "line": 148, "column": 35 } },
        "49": { "start": { "line": 149, "column": 19 }, "end": { "line": 149, "column": 29 } },
        "50": { "start": { "line": 150, "column": 26 }, "end": { "line": 150, "column": 51 } },
        "51": { "start": { "line": 152, "column": 21 }, "end": { "line": 156, "column": 5 } },
        "52": { "start": { "line": 158, "column": 4 }, "end": { "line": 160, "column": 6 } },
        "53": { "start": { "line": 162, "column": 4 }, "end": { "line": 173, "column": 6 } },
        "54": { "start": { "line": 174, "column": 4 }, "end": { "line": 183, "column": 6 } },
        "55": { "start": { "line": 185, "column": 4 }, "end": { "line": 185, "column": 17 } },
        "56": { "start": { "line": 190, "column": 19 }, "end": { "line": 190, "column": 42 } },
        "57": { "start": { "line": 191, "column": 21 }, "end": { "line": 191, "column": 51 } },
        "58": { "start": { "line": 192, "column": 22 }, "end": { "line": 192, "column": 32 } },
        "59": { "start": { "line": 193, "column": 4 }, "end": { "line": 196, "column": 5 } },
        "60": { "start": { "line": 200, "column": 24 }, "end": { "line": 200, "column": 60 } },
        "61": { "start": { "line": 201, "column": 26 }, "end": { "line": 201, "column": 64 } },
        "62": { "start": { "line": 202, "column": 4 }, "end": { "line": 212, "column": 5 } },
        "63": { "start": { "line": 203, "column": 6 }, "end": { "line": 203, "column": 47 } },
        "64": { "start": { "line": 204, "column": 11 }, "end": { "line": 212, "column": 5 } },
        "65": { "start": { "line": 209, "column": 6 }, "end": { "line": 209, "column": 28 } },
        "66": { "start": { "line": 211, "column": 6 }, "end": { "line": 211, "column": 28 } }
      },
      "fnMap": {
        "0": {
          "name": "generateRequestTls",
          "decl": { "start": { "line": 17, "column": 16 }, "end": { "line": 17, "column": 34 } },
          "loc": { "start": { "line": 17, "column": 48 }, "end": { "line": 38, "column": 1 } },
          "line": 17
        },
        "1": {
          "name": "extractCrnFromDefraIdToken",
          "decl": { "start": { "line": 40, "column": 16 }, "end": { "line": 40, "column": 42 } },
          "loc": { "start": { "line": 40, "column": 50 }, "end": { "line": 46, "column": 1 } },
          "line": 40
        },
        "2": {
          "name": "customFetch",
          "decl": { "start": { "line": 48, "column": 22 }, "end": { "line": 48, "column": 33 } },
          "loc": { "start": { "line": 48, "column": 60 }, "end": { "line": 64, "column": 1 } },
          "line": 48
        },
        "3": {
          "name": "(anonymous_3)",
          "decl": { "start": { "line": 69, "column": 2 }, "end": { "line": 69, "column": 3 } },
          "loc": { "start": { "line": 69, "column": 48 }, "end": { "line": 86, "column": 3 } },
          "line": 69
        },
        "4": {
          "name": "(anonymous_4)",
          "decl": { "start": { "line": 83, "column": 31 }, "end": { "line": 83, "column": 32 } },
          "loc": { "start": { "line": 83, "column": 49 }, "end": { "line": 85, "column": 5 } },
          "line": 83
        },
        "5": {
          "name": "(anonymous_5)",
          "decl": { "start": { "line": 88, "column": 2 }, "end": { "line": 88, "column": 3 } },
          "loc": { "start": { "line": 88, "column": 41 }, "end": { "line": 97, "column": 3 } },
          "line": 88
        },
        "6": {
          "name": "(anonymous_6)",
          "decl": { "start": { "line": 99, "column": 2 }, "end": { "line": 99, "column": 3 } },
          "loc": { "start": { "line": 99, "column": 40 }, "end": { "line": 116, "column": 3 } },
          "line": 99
        },
        "7": {
          "name": "(anonymous_7)",
          "decl": { "start": { "line": 118, "column": 2 }, "end": { "line": 118, "column": 3 } },
          "loc": { "start": { "line": 118, "column": 39 }, "end": { "line": 144, "column": 3 } },
          "line": 118
        },
        "8": {
          "name": "(anonymous_8)",
          "decl": { "start": { "line": 147, "column": 2 }, "end": { "line": 147, "column": 3 } },
          "loc": { "start": { "line": 147, "column": 32 }, "end": { "line": 186, "column": 3 } },
          "line": 147
        },
        "9": {
          "name": "(anonymous_9)",
          "decl": { "start": { "line": 189, "column": 2 }, "end": { "line": 189, "column": 3 } },
          "loc": { "start": { "line": 189, "column": 46 }, "end": { "line": 197, "column": 3 } },
          "line": 189
        },
        "10": {
          "name": "(anonymous_10)",
          "decl": { "start": { "line": 199, "column": 2 }, "end": { "line": 199, "column": 3 } },
          "loc": { "start": { "line": 199, "column": 22 }, "end": { "line": 213, "column": 3 } },
          "line": 199
        }
      },
      "branchMap": {
        "0": {
          "loc": { "start": { "line": 26, "column": 2 }, "end": { "line": 35, "column": 3 } },
          "type": "if",
          "locations": [
            { "start": { "line": 26, "column": 2 }, "end": { "line": 35, "column": 3 } },
            { "start": {}, "end": {} }
          ],
          "line": 26
        },
        "1": {
          "loc": { "start": { "line": 42, "column": 2 }, "end": { "line": 44, "column": 3 } },
          "type": "if",
          "locations": [
            { "start": { "line": 42, "column": 2 }, "end": { "line": 44, "column": 3 } },
            { "start": {}, "end": {} }
          ],
          "line": 42
        },
        "2": {
          "loc": { "start": { "line": 49, "column": 2 }, "end": { "line": 58, "column": 3 } },
          "type": "if",
          "locations": [
            { "start": { "line": 49, "column": 2 }, "end": { "line": 58, "column": 3 } },
            { "start": { "line": 53, "column": 9 }, "end": { "line": 58, "column": 3 } }
          ],
          "line": 49
        },
        "3": {
          "loc": { "start": { "line": 73, "column": 23 }, "end": { "line": 73, "column": 48 } },
          "type": "binary-expr",
          "locations": [
            { "start": { "line": 73, "column": 23 }, "end": { "line": 73, "column": 34 } },
            { "start": { "line": 73, "column": 38 }, "end": { "line": 73, "column": 48 } }
          ],
          "line": 73
        },
        "4": {
          "loc": { "start": { "line": 74, "column": 4 }, "end": { "line": 78, "column": 5 } },
          "type": "if",
          "locations": [
            { "start": { "line": 74, "column": 4 }, "end": { "line": 78, "column": 5 } },
            { "start": {}, "end": {} }
          ],
          "line": 74
        },
        "5": {
          "loc": { "start": { "line": 80, "column": 19 }, "end": { "line": 80, "column": 92 } },
          "type": "cond-expr",
          "locations": [
            { "start": { "line": 80, "column": 53 }, "end": { "line": 80, "column": 71 } },
            { "start": { "line": 80, "column": 74 }, "end": { "line": 80, "column": 92 } }
          ],
          "line": 80
        },
        "6": {
          "loc": { "start": { "line": 81, "column": 23 }, "end": { "line": 81, "column": 96 } },
          "type": "cond-expr",
          "locations": [
            { "start": { "line": 81, "column": 57 }, "end": { "line": 81, "column": 75 } },
            { "start": { "line": 81, "column": 78 }, "end": { "line": 81, "column": 96 } }
          ],
          "line": 81
        },
        "7": {
          "loc": { "start": { "line": 100, "column": 4 }, "end": { "line": 102, "column": 5 } },
          "type": "if",
          "locations": [
            { "start": { "line": 100, "column": 4 }, "end": { "line": 102, "column": 5 } },
            { "start": {}, "end": {} }
          ],
          "line": 100
        },
        "8": {
          "loc": { "start": { "line": 121, "column": 4 }, "end": { "line": 133, "column": 5 } },
          "type": "if",
          "locations": [
            { "start": { "line": 121, "column": 4 }, "end": { "line": 133, "column": 5 } },
            { "start": { "line": 123, "column": 11 }, "end": { "line": 133, "column": 5 } }
          ],
          "line": 121
        },
        "9": {
          "loc": { "start": { "line": 121, "column": 8 }, "end": { "line": 121, "column": 56 } },
          "type": "binary-expr",
          "locations": [
            { "start": { "line": 121, "column": 8 }, "end": { "line": 121, "column": 39 } },
            { "start": { "line": 121, "column": 43 }, "end": { "line": 121, "column": 56 } }
          ],
          "line": 121
        },
        "10": {
          "loc": { "start": { "line": 123, "column": 11 }, "end": { "line": 133, "column": 5 } },
          "type": "if",
          "locations": [
            { "start": { "line": 123, "column": 11 }, "end": { "line": 133, "column": 5 } },
            { "start": { "line": 126, "column": 11 }, "end": { "line": 133, "column": 5 } }
          ],
          "line": 123
        },
        "11": {
          "loc": { "start": { "line": 123, "column": 15 }, "end": { "line": 123, "column": 86 } },
          "type": "binary-expr",
          "locations": [
            { "start": { "line": 123, "column": 15 }, "end": { "line": 123, "column": 46 } },
            { "start": { "line": 123, "column": 50 }, "end": { "line": 123, "column": 86 } }
          ],
          "line": 123
        },
        "12": {
          "loc": { "start": { "line": 190, "column": 19 }, "end": { "line": 190, "column": 42 } },
          "type": "binary-expr",
          "locations": [
            { "start": { "line": 190, "column": 19 }, "end": { "line": 190, "column": 33 } },
            { "start": { "line": 190, "column": 37 }, "end": { "line": 190, "column": 42 } }
          ],
          "line": 190
        },
        "13": {
          "loc": { "start": { "line": 202, "column": 4 }, "end": { "line": 212, "column": 5 } },
          "type": "if",
          "locations": [
            { "start": { "line": 202, "column": 4 }, "end": { "line": 212, "column": 5 } },
            { "start": { "line": 204, "column": 11 }, "end": { "line": 212, "column": 5 } }
          ],
          "line": 202
        },
        "14": {
          "loc": { "start": { "line": 204, "column": 11 }, "end": { "line": 212, "column": 5 } },
          "type": "if",
          "locations": [
            { "start": { "line": 204, "column": 11 }, "end": { "line": 212, "column": 5 } },
            { "start": { "line": 210, "column": 11 }, "end": { "line": 212, "column": 5 } }
          ],
          "line": 204
        },
        "15": {
          "loc": { "start": { "line": 205, "column": 6 }, "end": { "line": 207, "column": 83 } },
          "type": "binary-expr",
          "locations": [
            { "start": { "line": 205, "column": 6 }, "end": { "line": 205, "column": 27 } },
            { "start": { "line": 206, "column": 6 }, "end": { "line": 206, "column": 17 } },
            { "start": { "line": 207, "column": 7 }, "end": { "line": 207, "column": 49 } },
            { "start": { "line": 207, "column": 53 }, "end": { "line": 207, "column": 82 } }
          ],
          "line": 205
        }
      },
      "s": {
        "0": 17,
        "1": 17,
        "2": 17,
        "3": 17,
        "4": 34,
        "5": 34,
        "6": 34,
        "7": 34,
        "8": 32,
        "9": 32,
        "10": 32,
        "11": 32,
        "12": 32,
        "13": 34,
        "14": 34,
        "15": 34,
        "16": 33,
        "17": 1,
        "18": 129,
        "19": 1,
        "20": 128,
        "21": 129,
        "22": 80,
        "23": 80,
        "24": 80,
        "25": 80,
        "26": 80,
        "27": 1,
        "28": 79,
        "29": 79,
        "30": 79,
        "31": 127,
        "32": 2,
        "33": 2,
        "34": 128,
        "35": 127,
        "36": 1,
        "37": 1,
        "38": 159,
        "39": 159,
        "40": 159,
        "41": 126,
        "42": 33,
        "43": 32,
        "44": 32,
        "45": 1,
        "46": 158,
        "47": 158,
        "48": 128,
        "49": 128,
        "50": 128,
        "51": 128,
        "52": 128,
        "53": 128,
        "54": 128,
        "55": 128,
        "56": 157,
        "57": 157,
        "58": 157,
        "59": 157,
        "60": 130,
        "61": 130,
        "62": 130,
        "63": 13,
        "64": 117,
        "65": 108,
        "66": 9
      },
      "f": {
        "0": 34,
        "1": 34,
        "2": 129,
        "3": 80,
        "4": 127,
        "5": 2,
        "6": 128,
        "7": 159,
        "8": 128,
        "9": 157,
        "10": 130
      },
      "b": {
        "0": [32, 2],
        "1": [33, 1],
        "2": [1, 128],
        "3": [80, 3],
        "4": [1, 79],
        "5": [12, 67],
        "6": [12, 67],
        "7": [127, 1],
        "8": [126, 33],
        "9": [159, 126],
        "10": [32, 1],
        "11": [33, 33],
        "12": [157, 0],
        "13": [13, 117],
        "14": [108, 9],
        "15": [117, 117, 109, 1]
      },
      "inputSourceMap": null,
      "_coverageSchema": "1a1c01bbd47fc00a2c39e90264f33305004495a9",
      "hash": "ca8efe5b9b52d1eb65861730c6f897e7a5459e8c"
    },
    "/Users/dominic/Sites/defra/fcp-dal-api/app/data-sources/rural-payments/RuralPaymentsBusiness.js": {
      "path": "/Users/dominic/Sites/defra/fcp-dal-api/app/data-sources/rural-payments/RuralPaymentsBusiness.js",
      "statementMap": {
        "0": { "start": { "line": 10, "column": 21 }, "end": { "line": 13, "column": 6 } },
        "1": { "start": { "line": 14, "column": 4 }, "end": { "line": 14, "column": 25 } },
        "2": { "start": { "line": 18, "column": 33 }, "end": { "line": 18, "column": 81 } },
        "3": { "start": { "line": 20, "column": 4 }, "end": { "line": 26, "column": 5 } },
        "4": { "start": { "line": 21, "column": 6 }, "end": { "line": 24, "column": 7 } },
        "5": { "start": { "line": 25, "column": 6 }, "end": { "line": 25, "column": 65 } },
        "6": { "start": { "line": 28, "column": 4 }, "end": { "line": 28, "column": 37 } },
        "7": { "start": { "line": 32, "column": 17 }, "end": { "line": 37, "column": 6 } },
        "8": { "start": { "line": 39, "column": 33 }, "end": { "line": 42, "column": 6 } },
        "9": { "start": { "line": 44, "column": 4 }, "end": { "line": 50, "column": 5 } },
        "10": { "start": { "line": 45, "column": 6 }, "end": { "line": 48, "column": 7 } },
        "11": { "start": { "line": 49, "column": 6 }, "end": { "line": 49, "column": 65 } },
        "12": { "start": { "line": 52, "column": 4 }, "end": { "line": 52, "column": 40 } },
        "13": { "start": { "line": 56, "column": 4 }, "end": { "line": 58, "column": 5 } },
        "14": { "start": { "line": 57, "column": 6 }, "end": { "line": 57, "column": 51 } },
        "15": { "start": { "line": 59, "column": 4 }, "end": { "line": 59, "column": 55 } },
        "16": { "start": { "line": 63, "column": 18 }, "end": { "line": 63, "column": 56 } },
        "17": { "start": { "line": 64, "column": 4 }, "end": { "line": 64, "column": 42 } },
        "18": { "start": { "line": 68, "column": 21 }, "end": { "line": 68, "column": 83 } },
        "19": { "start": { "line": 69, "column": 4 }, "end": { "line": 69, "column": 25 } },
        "20": { "start": { "line": 73, "column": 26 }, "end": { "line": 73, "column": 64 } },
        "21": { "start": { "line": 75, "column": 4 }, "end": { "line": 75, "column": 91 } },
        "22": { "start": { "line": 79, "column": 26 }, "end": { "line": 79, "column": 64 } },
        "23": { "start": { "line": 81, "column": 4 }, "end": { "line": 81, "column": 98 } },
        "24": { "start": { "line": 85, "column": 26 }, "end": { "line": 85, "column": 64 } },
        "25": { "start": { "line": 87, "column": 4 }, "end": { "line": 89, "column": 5 } },
        "26": { "start": { "line": 93, "column": 26 }, "end": { "line": 93, "column": 64 } },
        "27": { "start": { "line": 95, "column": 4 }, "end": { "line": 95, "column": 98 } },
        "28": { "start": { "line": 99, "column": 21 }, "end": { "line": 115, "column": 6 } },
        "29": { "start": { "line": 116, "column": 4 }, "end": { "line": 116, "column": 24 } },
        "30": { "start": { "line": 120, "column": 21 }, "end": { "line": 123, "column": 6 } },
        "31": { "start": { "line": 125, "column": 4 }, "end": { "line": 125, "column": 19 } },
        "32": { "start": { "line": 129, "column": 21 }, "end": { "line": 129, "column": 90 } },
        "33": { "start": { "line": 130, "column": 4 }, "end": { "line": 130, "column": 24 } },
        "34": { "start": { "line": 134, "column": 21 }, "end": { "line": 134, "column": 83 } },
        "35": { "start": { "line": 135, "column": 4 }, "end": { "line": 135, "column": 24 } },
        "36": { "start": { "line": 139, "column": 21 }, "end": { "line": 142, "column": 6 } },
        "37": { "start": { "line": 144, "column": 4 }, "end": { "line": 144, "column": 19 } },
        "38": { "start": { "line": 149, "column": 16 }, "end": { "line": 149, "column": 64 } },
        "39": { "start": { "line": 150, "column": 18 }, "end": { "line": 150, "column": 66 } },
        "40": { "start": { "line": 151, "column": 17 }, "end": { "line": 151, "column": 66 } },
        "41": { "start": { "line": 152, "column": 4 }, "end": { "line": 152, "column": 36 } },
        "42": { "start": { "line": 156, "column": 18 }, "end": { "line": 156, "column": 67 } },
        "43": { "start": { "line": 157, "column": 24 }, "end": { "line": 157, "column": 61 } },
        "44": { "start": { "line": 158, "column": 4 }, "end": { "line": 168, "column": 5 } },
        "45": { "start": { "line": 160, "column": 27 }, "end": { "line": 163, "column": 8 } },
        "46": { "start": { "line": 161, "column": 29 }, "end": { "line": 161, "column": 43 } },
        "47": { "start": { "line": 162, "column": 8 }, "end": { "line": 162, "column": 31 } },
        "48": { "start": { "line": 164, "column": 6 }, "end": { "line": 167, "column": 7 } },
        "49": { "start": { "line": 165, "column": 24 }, "end": { "line": 165, "column": 47 } },
        "50": { "start": { "line": 166, "column": 8 }, "end": { "line": 166, "column": 20 } },
        "51": { "start": { "line": 169, "column": 4 }, "end": { "line": 169, "column": 76 } },
        "52": { "start": { "line": 173, "column": 4 }, "end": { "line": 191, "column": 5 } },
        "53": { "start": { "line": 174, "column": 23 }, "end": { "line": 180, "column": 8 } },
        "54": { "start": { "line": 182, "column": 6 }, "end": { "line": 182, "column": 21 } },
        "55": { "start": { "line": 184, "column": 6 }, "end": { "line": 189, "column": 7 } },
        "56": { "start": { "line": 185, "column": 29 }, "end": { "line": 185, "column": 75 } },
        "57": { "start": { "line": 186, "column": 8 }, "end": { "line": 188, "column": 9 } },
        "58": { "start": { "line": 187, "column": 10 }, "end": { "line": 187, "column": 55 } },
        "59": { "start": { "line": 190, "column": 6 }, "end": { "line": 190, "column": 17 } },
        "60": { "start": { "line": 195, "column": 4 }, "end": { "line": 213, "column": 5 } },
        "61": { "start": { "line": 196, "column": 23 }, "end": { "line": 202, "column": 8 } },
        "62": { "start": { "line": 204, "column": 6 }, "end": { "line": 204, "column": 21 } },
        "63": { "start": { "line": 206, "column": 6 }, "end": { "line": 211, "column": 7 } },
        "64": { "start": { "line": 207, "column": 29 }, "end": { "line": 207, "column": 75 } },
        "65": { "start": { "line": 208, "column": 8 }, "end": { "line": 210, "column": 9 } },
        "66": { "start": { "line": 209, "column": 10 }, "end": { "line": 209, "column": 57 } },
        "67": { "start": { "line": 212, "column": 6 }, "end": { "line": 212, "column": 17 } }
      },
      "fnMap": {
        "0": {
          "name": "(anonymous_0)",
          "decl": { "start": { "line": 9, "column": 2 }, "end": { "line": 9, "column": 3 } },
          "loc": { "start": { "line": 9, "column": 59 }, "end": { "line": 15, "column": 3 } },
          "line": 9
        },
        "1": {
          "name": "(anonymous_1)",
          "decl": { "start": { "line": 17, "column": 2 }, "end": { "line": 17, "column": 3 } },
          "loc": { "start": { "line": 17, "column": 44 }, "end": { "line": 29, "column": 3 } },
          "line": 17
        },
        "2": {
          "name": "(anonymous_2)",
          "decl": { "start": { "line": 31, "column": 2 }, "end": { "line": 31, "column": 3 } },
          "loc": { "start": { "line": 31, "column": 37 }, "end": { "line": 53, "column": 3 } },
          "line": 31
        },
        "3": {
          "name": "(anonymous_3)",
          "decl": { "start": { "line": 55, "column": 2 }, "end": { "line": 55, "column": 3 } },
          "loc": { "start": { "line": 55, "column": 36 }, "end": { "line": 60, "column": 3 } },
          "line": 55
        },
        "4": {
          "name": "(anonymous_4)",
          "decl": { "start": { "line": 62, "column": 2 }, "end": { "line": 62, "column": 3 } },
          "loc": { "start": { "line": 62, "column": 34 }, "end": { "line": 65, "column": 3 } },
          "line": 62
        },
        "5": {
          "name": "(anonymous_5)",
          "decl": { "start": { "line": 67, "column": 2 }, "end": { "line": 67, "column": 3 } },
          "loc": { "start": { "line": 67, "column": 65 }, "end": { "line": 70, "column": 3 } },
          "line": 67
        },
        "6": {
          "name": "(anonymous_6)",
          "decl": { "start": { "line": 72, "column": 2 }, "end": { "line": 72, "column": 3 } },
          "loc": { "start": { "line": 72, "column": 58 }, "end": { "line": 76, "column": 3 } },
          "line": 72
        },
        "7": {
          "name": "(anonymous_7)",
          "decl": { "start": { "line": 78, "column": 2 }, "end": { "line": 78, "column": 3 } },
          "loc": { "start": { "line": 78, "column": 71 }, "end": { "line": 82, "column": 3 } },
          "line": 78
        },
        "8": {
          "name": "(anonymous_8)",
          "decl": { "start": { "line": 84, "column": 2 }, "end": { "line": 84, "column": 3 } },
          "loc": { "start": { "line": 84, "column": 75 }, "end": { "line": 90, "column": 3 } },
          "line": 84
        },
        "9": {
          "name": "(anonymous_9)",
          "decl": { "start": { "line": 92, "column": 2 }, "end": { "line": 92, "column": 3 } },
          "loc": { "start": { "line": 92, "column": 64 }, "end": { "line": 96, "column": 3 } },
          "line": 92
        },
        "10": {
          "name": "(anonymous_10)",
          "decl": { "start": { "line": 98, "column": 2 }, "end": { "line": 98, "column": 3 } },
          "loc": { "start": { "line": 98, "column": 42 }, "end": { "line": 117, "column": 3 } },
          "line": 98
        },
        "11": {
          "name": "(anonymous_11)",
          "decl": { "start": { "line": 119, "column": 2 }, "end": { "line": 119, "column": 3 } },
          "loc": { "start": { "line": 119, "column": 62 }, "end": { "line": 126, "column": 3 } },
          "line": 119
        },
        "12": {
          "name": "(anonymous_12)",
          "decl": { "start": { "line": 128, "column": 2 }, "end": { "line": 128, "column": 3 } },
          "loc": { "start": { "line": 128, "column": 32 }, "end": { "line": 131, "column": 3 } },
          "line": 128
        },
        "13": {
          "name": "(anonymous_13)",
          "decl": { "start": { "line": 133, "column": 2 }, "end": { "line": 133, "column": 3 } },
          "loc": { "start": { "line": 133, "column": 34 }, "end": { "line": 136, "column": 3 } },
          "line": 133
        },
        "14": {
          "name": "(anonymous_14)",
          "decl": { "start": { "line": 138, "column": 2 }, "end": { "line": 138, "column": 3 } },
          "loc": { "start": { "line": 138, "column": 82 }, "end": { "line": 145, "column": 3 } },
          "line": 138
        },
        "15": {
          "name": "(anonymous_15)",
          "decl": { "start": { "line": 147, "column": 2 }, "end": { "line": 147, "column": 3 } },
          "loc": { "start": { "line": 147, "column": 26 }, "end": { "line": 153, "column": 3 } },
          "line": 147
        },
        "16": {
          "name": "(anonymous_16)",
          "decl": { "start": { "line": 155, "column": 2 }, "end": { "line": 155, "column": 3 } },
          "loc": { "start": { "line": 155, "column": 36 }, "end": { "line": 170, "column": 3 } },
          "line": 155
        },
        "17": {
          "name": "(anonymous_17)",
          "decl": { "start": { "line": 160, "column": 54 }, "end": { "line": 160, "column": 55 } },
          "loc": { "start": { "line": 160, "column": 63 }, "end": { "line": 163, "column": 7 } },
          "line": 160
        },
        "18": {
          "name": "(anonymous_18)",
          "decl": { "start": { "line": 172, "column": 2 }, "end": { "line": 172, "column": 3 } },
          "loc": { "start": { "line": 172, "column": 47 }, "end": { "line": 192, "column": 3 } },
          "line": 172
        },
        "19": {
          "name": "(anonymous_19)",
          "decl": { "start": { "line": 194, "column": 2 }, "end": { "line": 194, "column": 3 } },
          "loc": { "start": { "line": 194, "column": 49 }, "end": { "line": 214, "column": 3 } },
          "line": 194
        }
      },
      "branchMap": {
        "0": {
          "loc": { "start": { "line": 20, "column": 4 }, "end": { "line": 26, "column": 5 } },
          "type": "if",
          "locations": [
            { "start": { "line": 20, "column": 4 }, "end": { "line": 26, "column": 5 } },
            { "start": {}, "end": {} }
          ],
          "line": 20
        },
        "1": {
          "loc": { "start": { "line": 44, "column": 4 }, "end": { "line": 50, "column": 5 } },
          "type": "if",
          "locations": [
            { "start": { "line": 44, "column": 4 }, "end": { "line": 50, "column": 5 } },
            { "start": {}, "end": {} }
          ],
          "line": 44
        },
        "2": {
          "loc": { "start": { "line": 56, "column": 4 }, "end": { "line": 58, "column": 5 } },
          "type": "if",
          "locations": [
            { "start": { "line": 56, "column": 4 }, "end": { "line": 58, "column": 5 } },
            { "start": {}, "end": {} }
          ],
          "line": 56
        },
        "3": {
          "loc": { "start": { "line": 158, "column": 4 }, "end": { "line": 168, "column": 5 } },
          "type": "if",
          "locations": [
            { "start": { "line": 158, "column": 4 }, "end": { "line": 168, "column": 5 } },
            { "start": {}, "end": {} }
          ],
          "line": 158
        },
        "4": {
          "loc": { "start": { "line": 158, "column": 8 }, "end": { "line": 158, "column": 70 } },
          "type": "binary-expr",
          "locations": [
            { "start": { "line": 158, "column": 8 }, "end": { "line": 158, "column": 30 } },
            { "start": { "line": 158, "column": 34 }, "end": { "line": 158, "column": 70 } }
          ],
          "line": 158
        },
        "5": {
          "loc": { "start": { "line": 164, "column": 6 }, "end": { "line": 167, "column": 7 } },
          "type": "if",
          "locations": [
            { "start": { "line": 164, "column": 6 }, "end": { "line": 167, "column": 7 } },
            { "start": {}, "end": {} }
          ],
          "line": 164
        },
        "6": {
          "loc": { "start": { "line": 184, "column": 6 }, "end": { "line": 189, "column": 7 } },
          "type": "if",
          "locations": [
            { "start": { "line": 184, "column": 6 }, "end": { "line": 189, "column": 7 } },
            { "start": {}, "end": {} }
          ],
          "line": 184
        },
        "7": {
          "loc": { "start": { "line": 186, "column": 8 }, "end": { "line": 188, "column": 9 } },
          "type": "if",
          "locations": [
            { "start": { "line": 186, "column": 8 }, "end": { "line": 188, "column": 9 } },
            { "start": {}, "end": {} }
          ],
          "line": 186
        },
        "8": {
          "loc": { "start": { "line": 206, "column": 6 }, "end": { "line": 211, "column": 7 } },
          "type": "if",
          "locations": [
            { "start": { "line": 206, "column": 6 }, "end": { "line": 211, "column": 7 } },
            { "start": {}, "end": {} }
          ],
          "line": 206
        },
        "9": {
          "loc": { "start": { "line": 208, "column": 8 }, "end": { "line": 210, "column": 9 } },
          "type": "if",
          "locations": [
            { "start": { "line": 208, "column": 8 }, "end": { "line": 210, "column": 9 } },
            { "start": {}, "end": {} }
          ],
          "line": 208
        }
      },
      "s": {
        "0": 2,
        "1": 2,
        "2": 34,
        "3": 34,
        "4": 1,
        "5": 1,
        "6": 33,
        "7": 29,
        "8": 29,
        "9": 29,
        "10": 1,
        "11": 1,
        "12": 28,
        "13": 35,
        "14": 6,
        "15": 29,
        "16": 1,
        "17": 1,
        "18": 11,
        "19": 11,
        "20": 16,
        "21": 16,
        "22": 7,
        "23": 7,
        "24": 4,
        "25": 4,
        "26": 10,
        "27": 10,
        "28": 3,
        "29": 3,
        "30": 9,
        "31": 9,
        "32": 1,
        "33": 1,
        "34": 3,
        "35": 3,
        "36": 5,
        "37": 5,
        "38": 38,
        "39": 38,
        "40": 38,
        "41": 38,
        "42": 6,
        "43": 6,
        "44": 6,
        "45": 6,
        "46": 6,
        "47": 6,
        "48": 6,
        "49": 6,
        "50": 6,
        "51": 0,
        "52": 4,
        "53": 4,
        "54": 2,
        "55": 2,
        "56": 1,
        "57": 1,
        "58": 1,
        "59": 1,
        "60": 4,
        "61": 4,
        "62": 2,
        "63": 2,
        "64": 1,
        "65": 1,
        "66": 1,
        "67": 1
      },
      "f": {
        "0": 2,
        "1": 34,
        "2": 29,
        "3": 35,
        "4": 1,
        "5": 11,
        "6": 16,
        "7": 7,
        "8": 4,
        "9": 10,
        "10": 3,
        "11": 9,
        "12": 1,
        "13": 3,
        "14": 5,
        "15": 38,
        "16": 6,
        "17": 6,
        "18": 4,
        "19": 4
      },
      "b": {
        "0": [1, 33],
        "1": [1, 28],
        "2": [6, 29],
        "3": [6, 0],
        "4": [6, 6],
        "5": [6, 0],
        "6": [1, 1],
        "7": [1, 0],
        "8": [1, 1],
        "9": [1, 0]
      },
      "inputSourceMap": null,
      "_coverageSchema": "1a1c01bbd47fc00a2c39e90264f33305004495a9",
      "hash": "a4c77ef15511c5c05f50854d728f3d390d5e854f"
    },
    "/Users/dominic/Sites/defra/fcp-dal-api/app/data-sources/rural-payments/RuralPaymentsCustomer.js": {
      "path": "/Users/dominic/Sites/defra/fcp-dal-api/app/data-sources/rural-payments/RuralPaymentsCustomer.js",
      "statementMap": {
        "0": { "start": { "line": 10, "column": 4 }, "end": { "line": 13, "column": 5 } },
        "1": { "start": { "line": 11, "column": 23 }, "end": { "line": 11, "column": 53 } },
        "2": { "start": { "line": 12, "column": 6 }, "end": { "line": 12, "column": 25 } },
        "3": { "start": { "line": 14, "column": 4 }, "end": { "line": 14, "column": 49 } },
        "4": { "start": { "line": 18, "column": 17 }, "end": { "line": 23, "column": 6 } },
        "5": { "start": { "line": 25, "column": 29 }, "end": { "line": 28, "column": 6 } },
        "6": { "start": { "line": 30, "column": 4 }, "end": { "line": 37, "column": 5 } },
        "7": { "start": { "line": 31, "column": 6 }, "end": { "line": 35, "column": 8 } },
        "8": { "start": { "line": 36, "column": 6 }, "end": { "line": 36, "column": 61 } },
        "9": { "start": { "line": 38, "column": 4 }, "end": { "line": 38, "column": 36 } },
        "10": { "start": { "line": 42, "column": 21 }, "end": { "line": 42, "column": 53 } },
        "11": { "start": { "line": 43, "column": 4 }, "end": { "line": 43, "column": 45 } },
        "12": { "start": { "line": 48, "column": 4 }, "end": { "line": 48, "column": 81 } },
        "13": { "start": { "line": 52, "column": 4 }, "end": { "line": 54, "column": 5 } },
        "14": { "start": { "line": 53, "column": 6 }, "end": { "line": 53, "column": 61 } },
        "15": { "start": { "line": 55, "column": 21 }, "end": { "line": 55, "column": 65 } },
        "16": { "start": { "line": 56, "column": 4 }, "end": { "line": 63, "column": 5 } },
        "17": { "start": { "line": 57, "column": 6 }, "end": { "line": 61, "column": 8 } },
        "18": { "start": { "line": 62, "column": 6 }, "end": { "line": 62, "column": 61 } },
        "19": { "start": { "line": 65, "column": 4 }, "end": { "line": 65, "column": 25 } },
        "20": { "start": { "line": 69, "column": 36 }, "end": { "line": 73, "column": 5 } },
        "21": { "start": { "line": 75, "column": 4 }, "end": { "line": 75, "column": 40 } },
        "22": { "start": { "line": 79, "column": 33 }, "end": { "line": 109, "column": 5 } },
        "23": { "start": { "line": 81, "column": 23 }, "end": { "line": 83, "column": 8 } },
        "24": { "start": { "line": 85, "column": 39 }, "end": { "line": 85, "column": 68 } },
        "25": { "start": { "line": 88, "column": 6 }, "end": { "line": 90, "column": 7 } },
        "26": { "start": { "line": 89, "column": 8 }, "end": { "line": 89, "column": 39 } },
        "27": { "start": { "line": 93, "column": 31 }, "end": { "line": 97, "column": 34 } },
        "28": { "start": { "line": 95, "column": 30 }, "end": { "line": 95, "column": 73 } },
        "29": { "start": { "line": 100, "column": 36 }, "end": { "line": 100, "column": 86 } },
        "30": { "start": { "line": 103, "column": 6 }, "end": { "line": 105, "column": 7 } },
        "31": { "start": { "line": 104, "column": 8 }, "end": { "line": 104, "column": 36 } },
        "32": { "start": { "line": 108, "column": 6 }, "end": { "line": 108, "column": 66 } },
        "33": { "start": { "line": 111, "column": 26 }, "end": { "line": 111, "column": 54 } },
        "34": { "start": { "line": 113, "column": 4 }, "end": { "line": 113, "column": 24 } },
        "35": { "start": { "line": 117, "column": 21 }, "end": { "line": 117, "column": 76 } },
        "36": { "start": { "line": 118, "column": 4 }, "end": { "line": 120, "column": 5 } },
        "37": { "start": { "line": 119, "column": 6 }, "end": { "line": 119, "column": 17 } },
        "38": { "start": { "line": 121, "column": 4 }, "end": { "line": 121, "column": 19 } },
        "39": { "start": { "line": 125, "column": 4 }, "end": { "line": 128, "column": 6 } }
      },
      "fnMap": {
        "0": {
          "name": "(anonymous_0)",
          "decl": { "start": { "line": 9, "column": 2 }, "end": { "line": 9, "column": 3 } },
          "loc": { "start": { "line": 9, "column": 30 }, "end": { "line": 15, "column": 3 } },
          "line": 9
        },
        "1": {
          "name": "(anonymous_1)",
          "decl": { "start": { "line": 17, "column": 2 }, "end": { "line": 17, "column": 3 } },
          "loc": { "start": { "line": 17, "column": 31 }, "end": { "line": 39, "column": 3 } },
          "line": 17
        },
        "2": {
          "name": "(anonymous_2)",
          "decl": { "start": { "line": 41, "column": 2 }, "end": { "line": 41, "column": 3 } },
          "loc": { "start": { "line": 41, "column": 30 }, "end": { "line": 44, "column": 3 } },
          "line": 41
        },
        "3": {
          "name": "(anonymous_3)",
          "decl": { "start": { "line": 46, "column": 2 }, "end": { "line": 46, "column": 3 } },
          "loc": { "start": { "line": 46, "column": 28 }, "end": { "line": 49, "column": 3 } },
          "line": 46
        },
        "4": {
          "name": "(anonymous_4)",
          "decl": { "start": { "line": 51, "column": 2 }, "end": { "line": 51, "column": 3 } },
          "loc": { "start": { "line": 51, "column": 38 }, "end": { "line": 66, "column": 3 } },
          "line": 51
        },
        "5": {
          "name": "(anonymous_5)",
          "decl": { "start": { "line": 68, "column": 2 }, "end": { "line": 68, "column": 3 } },
          "loc": { "start": { "line": 68, "column": 48 }, "end": { "line": 76, "column": 3 } },
          "line": 68
        },
        "6": {
          "name": "(anonymous_6)",
          "decl": { "start": { "line": 78, "column": 2 }, "end": { "line": 78, "column": 3 } },
          "loc": { "start": { "line": 78, "column": 88 }, "end": { "line": 114, "column": 3 } },
          "line": 78
        },
        "7": {
          "name": "(anonymous_7)",
          "decl": { "start": { "line": 79, "column": 33 }, "end": { "line": 79, "column": 34 } },
          "loc": { "start": { "line": 79, "column": 84 }, "end": { "line": 109, "column": 5 } },
          "line": 79
        },
        "8": {
          "name": "(anonymous_8)",
          "decl": { "start": { "line": 95, "column": 12 }, "end": { "line": 95, "column": 13 } },
          "loc": { "start": { "line": 95, "column": 30 }, "end": { "line": 95, "column": 73 } },
          "line": 95
        },
        "9": {
          "name": "(anonymous_9)",
          "decl": { "start": { "line": 116, "column": 2 }, "end": { "line": 116, "column": 3 } },
          "loc": { "start": { "line": 116, "column": 41 }, "end": { "line": 122, "column": 3 } },
          "line": 116
        },
        "10": {
          "name": "(anonymous_10)",
          "decl": { "start": { "line": 124, "column": 2 }, "end": { "line": 124, "column": 3 } },
          "loc": { "start": { "line": 124, "column": 47 }, "end": { "line": 129, "column": 3 } },
          "line": 124
        }
      },
      "branchMap": {
        "0": {
          "loc": { "start": { "line": 10, "column": 4 }, "end": { "line": 13, "column": 5 } },
          "type": "if",
          "locations": [
            { "start": { "line": 10, "column": 4 }, "end": { "line": 13, "column": 5 } },
            { "start": {}, "end": {} }
          ],
          "line": 10
        },
        "1": {
          "loc": { "start": { "line": 30, "column": 4 }, "end": { "line": 37, "column": 5 } },
          "type": "if",
          "locations": [
            { "start": { "line": 30, "column": 4 }, "end": { "line": 37, "column": 5 } },
            { "start": {}, "end": {} }
          ],
          "line": 30
        },
        "2": {
          "loc": { "start": { "line": 52, "column": 4 }, "end": { "line": 54, "column": 5 } },
          "type": "if",
          "locations": [
            { "start": { "line": 52, "column": 4 }, "end": { "line": 54, "column": 5 } },
            { "start": {}, "end": {} }
          ],
          "line": 52
        },
        "3": {
          "loc": { "start": { "line": 56, "column": 4 }, "end": { "line": 63, "column": 5 } },
          "type": "if",
          "locations": [
            { "start": { "line": 56, "column": 4 }, "end": { "line": 63, "column": 5 } },
            { "start": {}, "end": {} }
          ],
          "line": 56
        },
        "4": {
          "loc": { "start": { "line": 79, "column": 40 }, "end": { "line": 79, "column": 48 } },
          "type": "default-arg",
          "locations": [
            { "start": { "line": 79, "column": 47 }, "end": { "line": 79, "column": 48 } }
          ],
          "line": 79
        },
        "5": {
          "loc": { "start": { "line": 79, "column": 50 }, "end": { "line": 79, "column": 79 } },
          "type": "default-arg",
          "locations": [
            { "start": { "line": 79, "column": 77 }, "end": { "line": 79, "column": 79 } }
          ],
          "line": 79
        },
        "6": {
          "loc": { "start": { "line": 85, "column": 39 }, "end": { "line": 85, "column": 68 } },
          "type": "binary-expr",
          "locations": [
            { "start": { "line": 85, "column": 39 }, "end": { "line": 85, "column": 62 } },
            { "start": { "line": 85, "column": 66 }, "end": { "line": 85, "column": 68 } }
          ],
          "line": 85
        },
        "7": {
          "loc": { "start": { "line": 88, "column": 6 }, "end": { "line": 90, "column": 7 } },
          "type": "if",
          "locations": [
            { "start": { "line": 88, "column": 6 }, "end": { "line": 90, "column": 7 } },
            { "start": {}, "end": {} }
          ],
          "line": 88
        },
        "8": {
          "loc": { "start": { "line": 93, "column": 31 }, "end": { "line": 97, "column": 34 } },
          "type": "cond-expr",
          "locations": [
            { "start": { "line": 94, "column": 10 }, "end": { "line": 96, "column": 11 } },
            { "start": { "line": 97, "column": 10 }, "end": { "line": 97, "column": 34 } }
          ],
          "line": 93
        },
        "9": {
          "loc": { "start": { "line": 103, "column": 6 }, "end": { "line": 105, "column": 7 } },
          "type": "if",
          "locations": [
            { "start": { "line": 103, "column": 6 }, "end": { "line": 105, "column": 7 } },
            { "start": {}, "end": {} }
          ],
          "line": 103
        },
        "10": {
          "loc": { "start": { "line": 103, "column": 10 }, "end": { "line": 103, "column": 79 } },
          "type": "binary-expr",
          "locations": [
            { "start": { "line": 103, "column": 10 }, "end": { "line": 103, "column": 18 } },
            { "start": { "line": 103, "column": 22 }, "end": { "line": 103, "column": 79 } }
          ],
          "line": 103
        },
        "11": {
          "loc": { "start": { "line": 118, "column": 4 }, "end": { "line": 120, "column": 5 } },
          "type": "if",
          "locations": [
            { "start": { "line": 118, "column": 4 }, "end": { "line": 120, "column": 5 } },
            { "start": {}, "end": {} }
          ],
          "line": 118
        }
      },
      "s": {
        "0": 11,
        "1": 2,
        "2": 2,
        "3": 9,
        "4": 10,
        "5": 10,
        "6": 10,
        "7": 1,
        "8": 1,
        "9": 9,
        "10": 1,
        "11": 1,
        "12": 2,
        "13": 15,
        "14": 3,
        "15": 15,
        "16": 15,
        "17": 0,
        "18": 0,
        "19": 15,
        "20": 4,
        "21": 4,
        "22": 7,
        "23": 12,
        "24": 12,
        "25": 12,
        "26": 5,
        "27": 7,
        "28": 9,
        "29": 7,
        "30": 7,
        "31": 2,
        "32": 5,
        "33": 7,
        "34": 7,
        "35": 5,
        "36": 4,
        "37": 1,
        "38": 3,
        "39": 6
      },
      "f": {
        "0": 11,
        "1": 10,
        "2": 1,
        "3": 2,
        "4": 15,
        "5": 4,
        "6": 7,
        "7": 12,
        "8": 9,
        "9": 5,
        "10": 6
      },
      "b": {
        "0": [2, 9],
        "1": [1, 9],
        "2": [3, 12],
        "3": [0, 15],
        "4": [7],
        "5": [7],
        "6": [12, 0],
        "7": [5, 7],
        "8": [5, 2],
        "9": [2, 5],
        "10": [7, 5],
        "11": [1, 3]
      },
      "inputSourceMap": null,
      "_coverageSchema": "1a1c01bbd47fc00a2c39e90264f33305004495a9",
      "hash": "c9fee8800e75aa38e0513c99b7f540e9da5bd514"
    },
    "/Users/dominic/Sites/defra/fcp-dal-api/app/data-sources/static/permissions.js": {
      "path": "/Users/dominic/Sites/defra/fcp-dal-api/app/data-sources/static/permissions.js",
      "statementMap": {
        "0": { "start": { "line": 3, "column": 25 }, "end": { "line": 3, "column": 83 } },
        "1": { "start": { "line": 6, "column": 11 }, "end": { "line": 6, "column": 15 } },
        "2": { "start": { "line": 9, "column": 4 }, "end": { "line": 9, "column": 31 } },
        "3": { "start": { "line": 13, "column": 4 }, "end": { "line": 13, "column": 27 } }
      },
      "fnMap": {
        "0": {
          "name": "(anonymous_0)",
          "decl": { "start": { "line": 8, "column": 2 }, "end": { "line": 8, "column": 3 } },
          "loc": { "start": { "line": 8, "column": 27 }, "end": { "line": 10, "column": 3 } },
          "line": 8
        },
        "1": {
          "name": "(anonymous_1)",
          "decl": { "start": { "line": 12, "column": 2 }, "end": { "line": 12, "column": 3 } },
          "loc": { "start": { "line": 12, "column": 24 }, "end": { "line": 14, "column": 3 } },
          "line": 12
        }
      },
      "branchMap": {
        "0": {
          "loc": { "start": { "line": 8, "column": 14 }, "end": { "line": 8, "column": 25 } },
          "type": "default-arg",
          "locations": [
            { "start": { "line": 8, "column": 23 }, "end": { "line": 8, "column": 25 } }
          ],
          "line": 8
        }
      },
      "s": { "0": 12, "1": 37, "2": 37, "3": 13 },
      "f": { "0": 37, "1": 13 },
      "b": { "0": [8] },
      "inputSourceMap": null,
      "_coverageSchema": "1a1c01bbd47fc00a2c39e90264f33305004495a9",
      "hash": "62c4bf0de4c87474828afbaa99c22ea894f6af27"
    },
    "/Users/dominic/Sites/defra/fcp-dal-api/app/graphql/context.js": {
      "path": "/Users/dominic/Sites/defra/fcp-dal-api/app/graphql/context.js",
      "statementMap": {
        "0": { "start": { "line": 9, "column": 44 }, "end": { "line": 23, "column": 1 } },
        "1": { "start": { "line": 10, "column": 22 }, "end": { "line": 10, "column": 59 } },
        "2": { "start": { "line": 11, "column": 2 }, "end": { "line": 21, "column": 3 } },
        "3": { "start": { "line": 13, "column": 25 }, "end": { "line": 16, "column": 6 } },
        "4": { "start": { "line": 14, "column": 27 }, "end": { "line": 14, "column": 41 } },
        "5": { "start": { "line": 15, "column": 6 }, "end": { "line": 15, "column": 29 } },
        "6": { "start": { "line": 17, "column": 4 }, "end": { "line": 20, "column": 5 } },
        "7": { "start": { "line": 18, "column": 22 }, "end": { "line": 18, "column": 45 } },
        "8": { "start": { "line": 19, "column": 6 }, "end": { "line": 19, "column": 18 } },
        "9": { "start": { "line": 22, "column": 2 }, "end": { "line": 22, "column": 74 } },
        "10": { "start": { "line": 26, "column": 15 }, "end": { "line": 26, "column": 37 } },
        "11": { "start": { "line": 28, "column": 24 }, "end": { "line": 31, "column": 4 } },
        "12": { "start": { "line": 33, "column": 28 }, "end": { "line": 39, "column": 3 } },
        "13": { "start": { "line": 41, "column": 2 }, "end": { "line": 49, "column": 3 } }
      },
      "fnMap": {
        "0": {
          "name": "(anonymous_0)",
          "decl": { "start": { "line": 9, "column": 44 }, "end": { "line": 9, "column": 45 } },
          "loc": { "start": { "line": 9, "column": 60 }, "end": { "line": 23, "column": 1 } },
          "line": 9
        },
        "1": {
          "name": "(anonymous_1)",
          "decl": { "start": { "line": 13, "column": 52 }, "end": { "line": 13, "column": 53 } },
          "loc": { "start": { "line": 13, "column": 61 }, "end": { "line": 16, "column": 5 } },
          "line": 13
        },
        "2": {
          "name": "context",
          "decl": { "start": { "line": 25, "column": 22 }, "end": { "line": 25, "column": 29 } },
          "loc": { "start": { "line": 25, "column": 43 }, "end": { "line": 50, "column": 1 } },
          "line": 25
        }
      },
      "branchMap": {
        "0": {
          "loc": { "start": { "line": 11, "column": 2 }, "end": { "line": 21, "column": 3 } },
          "type": "if",
          "locations": [
            { "start": { "line": 11, "column": 2 }, "end": { "line": 21, "column": 3 } },
            { "start": {}, "end": {} }
          ],
          "line": 11
        },
        "1": {
          "loc": { "start": { "line": 11, "column": 6 }, "end": { "line": 11, "column": 68 } },
          "type": "binary-expr",
          "locations": [
            { "start": { "line": 11, "column": 6 }, "end": { "line": 11, "column": 28 } },
            { "start": { "line": 11, "column": 32 }, "end": { "line": 11, "column": 68 } }
          ],
          "line": 11
        },
        "2": {
          "loc": { "start": { "line": 17, "column": 4 }, "end": { "line": 20, "column": 5 } },
          "type": "if",
          "locations": [
            { "start": { "line": 17, "column": 4 }, "end": { "line": 20, "column": 5 } },
            { "start": {}, "end": {} }
          ],
          "line": 17
        },
        "3": {
          "loc": { "start": { "line": 37, "column": 19 }, "end": { "line": 37, "column": 64 } },
          "type": "binary-expr",
          "locations": [
            { "start": { "line": 37, "column": 19 }, "end": { "line": 37, "column": 50 } },
            { "start": { "line": 37, "column": 54 }, "end": { "line": 37, "column": 64 } }
          ],
          "line": 37
        }
      },
      "s": {
        "0": 10,
        "1": 4,
        "2": 4,
        "3": 2,
        "4": 4,
        "5": 4,
        "6": 2,
        "7": 1,
        "8": 1,
        "9": 3,
        "10": 30,
        "11": 30,
        "12": 30,
        "13": 30
      },
      "f": { "0": 4, "1": 4, "2": 30 },
      "b": { "0": [2, 2], "1": [4, 3], "2": [1, 1], "3": [30, 0] },
      "inputSourceMap": null,
      "_coverageSchema": "1a1c01bbd47fc00a2c39e90264f33305004495a9",
      "hash": "ca4f43d88c460b50d1c92eed691c5007c7ee8b3e"
    },
    "/Users/dominic/Sites/defra/fcp-dal-api/app/graphql/directives/excludeFromListTransformer.js": {
      "path": "/Users/dominic/Sites/defra/fcp-dal-api/app/graphql/directives/excludeFromListTransformer.js",
      "statementMap": {
        "0": { "start": { "line": 5, "column": 33 }, "end": { "line": 25, "column": 4 } },
        "1": { "start": { "line": 7, "column": 19 }, "end": { "line": 7, "column": 42 } },
        "2": { "start": { "line": 8, "column": 29 }, "end": { "line": 8, "column": 31 } },
        "3": { "start": { "line": 10, "column": 6 }, "end": { "line": 15, "column": 8 } },
        "4": { "start": { "line": 11, "column": 8 }, "end": { "line": 14, "column": 9 } },
        "5": { "start": { "line": 12, "column": 10 }, "end": { "line": 12, "column": 34 } },
        "6": { "start": { "line": 13, "column": 10 }, "end": { "line": 13, "column": 33 } },
        "7": { "start": { "line": 17, "column": 6 }, "end": { "line": 21, "column": 7 } },
        "8": { "start": { "line": 18, "column": 8 }, "end": { "line": 18, "column": 49 } },
        "9": { "start": { "line": 19, "column": 8 }, "end": { "line": 19, "column": 143 } },
        "10": { "start": { "line": 20, "column": 8 }, "end": { "line": 20, "column": 42 } },
        "11": { "start": { "line": 23, "column": 6 }, "end": { "line": 23, "column": 25 } },
        "12": { "start": { "line": 27, "column": 2 }, "end": { "line": 39, "column": 4 } },
        "13": { "start": { "line": 29, "column": 6 }, "end": { "line": 36, "column": 7 } },
        "14": { "start": { "line": 30, "column": 21 }, "end": { "line": 30, "column": 51 } },
        "15": { "start": { "line": 31, "column": 28 }, "end": { "line": 31, "column": 81 } },
        "16": { "start": { "line": 33, "column": 8 }, "end": { "line": 35, "column": 9 } },
        "17": { "start": { "line": 34, "column": 10 }, "end": { "line": 34, "column": 57 } },
        "18": { "start": { "line": 37, "column": 6 }, "end": { "line": 37, "column": 24 } }
      },
      "fnMap": {
        "0": {
          "name": "excludeFromListTransformer",
          "decl": { "start": { "line": 4, "column": 16 }, "end": { "line": 4, "column": 42 } },
          "loc": { "start": { "line": 4, "column": 51 }, "end": { "line": 40, "column": 1 } },
          "line": 4
        },
        "1": {
          "name": "(anonymous_1)",
          "decl": { "start": { "line": 6, "column": 4 }, "end": { "line": 6, "column": 5 } },
          "loc": { "start": { "line": 6, "column": 43 }, "end": { "line": 24, "column": 5 } },
          "line": 6
        },
        "2": {
          "name": "(anonymous_2)",
          "decl": { "start": { "line": 10, "column": 39 }, "end": { "line": 10, "column": 40 } },
          "loc": { "start": { "line": 10, "column": 48 }, "end": { "line": 15, "column": 7 } },
          "line": 10
        },
        "3": {
          "name": "(anonymous_3)",
          "decl": { "start": { "line": 28, "column": 4 }, "end": { "line": 28, "column": 5 } },
          "loc": { "start": { "line": 28, "column": 36 }, "end": { "line": 38, "column": 5 } },
          "line": 28
        }
      },
      "branchMap": {
        "0": {
          "loc": { "start": { "line": 11, "column": 8 }, "end": { "line": 14, "column": 9 } },
          "type": "if",
          "locations": [
            { "start": { "line": 11, "column": 8 }, "end": { "line": 14, "column": 9 } },
            { "start": {}, "end": {} }
          ],
          "line": 11
        },
        "1": {
          "loc": { "start": { "line": 17, "column": 6 }, "end": { "line": 21, "column": 7 } },
          "type": "if",
          "locations": [
            { "start": { "line": 17, "column": 6 }, "end": { "line": 21, "column": 7 } },
            { "start": {}, "end": {} }
          ],
          "line": 17
        },
        "2": {
          "loc": { "start": { "line": 29, "column": 6 }, "end": { "line": 36, "column": 7 } },
          "type": "if",
          "locations": [
            { "start": { "line": 29, "column": 6 }, "end": { "line": 36, "column": 7 } },
            { "start": {}, "end": {} }
          ],
          "line": 29
        },
        "3": {
          "loc": { "start": { "line": 33, "column": 8 }, "end": { "line": 35, "column": 9 } },
          "type": "if",
          "locations": [
            { "start": { "line": 33, "column": 8 }, "end": { "line": 35, "column": 9 } },
            { "start": {}, "end": {} }
          ],
          "line": 33
        }
      },
      "s": {
        "0": 38,
        "1": 1126,
        "2": 1126,
        "3": 1126,
        "4": 7530,
        "5": 177,
        "6": 177,
        "7": 1126,
        "8": 107,
        "9": 107,
        "10": 107,
        "11": 1019,
        "12": 38,
        "13": 11695,
        "14": 701,
        "15": 701,
        "16": 701,
        "17": 107,
        "18": 11695
      },
      "f": { "0": 38, "1": 1126, "2": 7530, "3": 11695 },
      "b": { "0": [177, 7353], "1": [107, 1019], "2": [701, 10994], "3": [107, 594] },
      "inputSourceMap": null,
      "_coverageSchema": "1a1c01bbd47fc00a2c39e90264f33305004495a9",
      "hash": "4e4fda46ae3a1c19da60b295b95c98d5e91ac0bf"
    },
    "/Users/dominic/Sites/defra/fcp-dal-api/app/graphql/directives/onDirectiveTransformer.js": {
      "path": "/Users/dominic/Sites/defra/fcp-dal-api/app/graphql/directives/onDirectiveTransformer.js",
      "statementMap": {
        "0": { "start": { "line": 4, "column": 2 }, "end": { "line": 10, "column": 4 } },
        "1": { "start": { "line": 6, "column": 6 }, "end": { "line": 6, "column": 78 } },
        "2": { "start": { "line": 8, "column": 46 }, "end": { "line": 8, "column": 50 } },
        "3": { "start": { "line": 9, "column": 59 }, "end": { "line": 9, "column": 75 } }
      },
      "fnMap": {
        "0": {
          "name": "onDirectiveTransformer",
          "decl": { "start": { "line": 3, "column": 16 }, "end": { "line": 3, "column": 38 } },
          "loc": { "start": { "line": 3, "column": 47 }, "end": { "line": 11, "column": 1 } },
          "line": 3
        },
        "1": {
          "name": "(anonymous_1)",
          "decl": { "start": { "line": 5, "column": 4 }, "end": { "line": 5, "column": 5 } },
          "loc": { "start": { "line": 5, "column": 36 }, "end": { "line": 7, "column": 5 } },
          "line": 5
        },
        "2": {
          "name": "(anonymous_2)",
          "decl": { "start": { "line": 8, "column": 36 }, "end": { "line": 8, "column": 37 } },
          "loc": { "start": { "line": 8, "column": 46 }, "end": { "line": 8, "column": 50 } },
          "line": 8
        },
        "3": {
          "name": "(anonymous_3)",
          "decl": { "start": { "line": 9, "column": 37 }, "end": { "line": 9, "column": 38 } },
          "loc": { "start": { "line": 9, "column": 59 }, "end": { "line": 9, "column": 75 } },
          "line": 9
        }
      },
      "branchMap": {
        "0": {
          "loc": { "start": { "line": 6, "column": 13 }, "end": { "line": 6, "column": 78 } },
          "type": "cond-expr",
          "locations": [
            { "start": { "line": 6, "column": 60 }, "end": { "line": 6, "column": 71 } },
            { "start": { "line": 6, "column": 74 }, "end": { "line": 6, "column": 78 } }
          ],
          "line": 6
        }
      },
      "s": { "0": 2, "1": 432, "2": 50, "3": 238 },
      "f": { "0": 2, "1": 432, "2": 50, "3": 238 },
      "b": { "0": [390, 42] },
      "inputSourceMap": null,
      "_coverageSchema": "1a1c01bbd47fc00a2c39e90264f33305004495a9",
      "hash": "ffd9ab996a62713142681ec893b3a54e18135494"
    },
    "/Users/dominic/Sites/defra/fcp-dal-api/app/utils/date.js": {
      "path": "/Users/dominic/Sites/defra/fcp-dal-api/app/utils/date.js",
      "statementMap": {
        "0": { "start": { "line": 4, "column": 21 }, "end": { "line": 4, "column": 41 } },
        "1": { "start": { "line": 5, "column": 2 }, "end": { "line": 9, "column": 3 } },
        "2": { "start": { "line": 6, "column": 4 }, "end": { "line": 8, "column": 5 } },
        "3": { "start": { "line": 10, "column": 2 }, "end": { "line": 10, "column": 19 } },
        "4": { "start": { "line": 14, "column": 21 }, "end": { "line": 14, "column": 45 } },
        "5": { "start": { "line": 15, "column": 14 }, "end": { "line": 15, "column": 24 } },
        "6": { "start": { "line": 16, "column": 2 }, "end": { "line": 18, "column": 3 } },
        "7": { "start": { "line": 17, "column": 4 }, "end": { "line": 17, "column": 78 } },
        "8": { "start": { "line": 19, "column": 2 }, "end": { "line": 19, "column": 19 } }
      },
      "fnMap": {
        "0": {
          "name": "validateDate",
          "decl": { "start": { "line": 3, "column": 16 }, "end": { "line": 3, "column": 28 } },
          "loc": { "start": { "line": 3, "column": 41 }, "end": { "line": 11, "column": 1 } },
          "line": 3
        },
        "1": {
          "name": "validatePastDate",
          "decl": { "start": { "line": 13, "column": 16 }, "end": { "line": 13, "column": 32 } },
          "loc": { "start": { "line": 13, "column": 45 }, "end": { "line": 20, "column": 1 } },
          "line": 13
        }
      },
      "branchMap": {
        "0": {
          "loc": { "start": { "line": 5, "column": 2 }, "end": { "line": 9, "column": 3 } },
          "type": "if",
          "locations": [
            { "start": { "line": 5, "column": 2 }, "end": { "line": 9, "column": 3 } },
            { "start": {}, "end": {} }
          ],
          "line": 5
        },
        "1": {
          "loc": { "start": { "line": 16, "column": 2 }, "end": { "line": 18, "column": 3 } },
          "type": "if",
          "locations": [
            { "start": { "line": 16, "column": 2 }, "end": { "line": 18, "column": 3 } },
            { "start": {}, "end": {} }
          ],
          "line": 16
        }
      },
      "s": { "0": 63, "1": 63, "2": 2, "3": 61, "4": 2, "5": 2, "6": 2, "7": 1, "8": 1 },
      "f": { "0": 63, "1": 2 },
      "b": { "0": [2, 61], "1": [1, 1] },
      "inputSourceMap": null,
      "_coverageSchema": "1a1c01bbd47fc00a2c39e90264f33305004495a9",
      "hash": "bb6a978c65643973dbfe9f2a68cb830e17a675d1"
    },
    "/Users/dominic/Sites/defra/fcp-dal-api/app/utils/numbers.js": {
      "path": "/Users/dominic/Sites/defra/fcp-dal-api/app/utils/numbers.js",
      "statementMap": {
        "0": { "start": { "line": 1, "column": 31 }, "end": { "line": 1, "column": 37 } },
        "1": { "start": { "line": 2, "column": 45 }, "end": { "line": 3, "column": 73 } },
        "2": { "start": { "line": 3, "column": 2 }, "end": { "line": 3, "column": 73 } }
      },
      "fnMap": {
        "0": {
          "name": "(anonymous_0)",
          "decl": { "start": { "line": 2, "column": 45 }, "end": { "line": 2, "column": 46 } },
          "loc": { "start": { "line": 3, "column": 2 }, "end": { "line": 3, "column": 73 } },
          "line": 3
        }
      },
      "branchMap": {
        "0": {
          "loc": { "start": { "line": 3, "column": 2 }, "end": { "line": 3, "column": 73 } },
          "type": "binary-expr",
          "locations": [
            { "start": { "line": 3, "column": 2 }, "end": { "line": 3, "column": 68 } },
            { "start": { "line": 3, "column": 72 }, "end": { "line": 3, "column": 73 } }
          ],
          "line": 3
        }
      },
      "s": { "0": 20, "1": 20, "2": 48 },
      "f": { "0": 48 },
      "b": { "0": [48, 4] },
      "inputSourceMap": null,
      "_coverageSchema": "1a1c01bbd47fc00a2c39e90264f33305004495a9",
      "hash": "539aa0e8a0dee04268892076c73639f493120fc7"
    },
    "/Users/dominic/Sites/defra/fcp-dal-api/app/transformers/rural-payments/lms.js": {
      "path": "/Users/dominic/Sites/defra/fcp-dal-api/app/transformers/rural-payments/lms.js",
      "statementMap": {
        "0": { "start": { "line": 5, "column": 16 }, "end": { "line": 5, "column": 41 } },
        "1": { "start": { "line": 6, "column": 2 }, "end": { "line": 17, "column": 6 } },
        "2": { "start": { "line": 7, "column": 22 }, "end": { "line": 7, "column": 52 } },
        "3": { "start": { "line": 9, "column": 50 }, "end": { "line": 9, "column": 60 } },
        "4": { "start": { "line": 10, "column": 6 }, "end": { "line": 16, "column": 7 } },
        "5": { "start": { "line": 21, "column": 17 }, "end": { "line": 21, "column": 86 } },
        "6": { "start": { "line": 21, "column": 37 }, "end": { "line": 21, "column": 85 } },
        "7": { "start": { "line": 23, "column": 2 }, "end": { "line": 26, "column": 3 } },
        "8": { "start": { "line": 30, "column": 2 }, "end": { "line": 32, "column": 3 } },
        "9": { "start": { "line": 31, "column": 4 }, "end": { "line": 31, "column": 12 } },
        "10": { "start": { "line": 33, "column": 20 }, "end": { "line": 33, "column": 68 } },
        "11": { "start": { "line": 33, "column": 47 }, "end": { "line": 33, "column": 67 } },
        "12": { "start": { "line": 34, "column": 2 }, "end": { "line": 36, "column": 3 } },
        "13": { "start": { "line": 35, "column": 4 }, "end": { "line": 35, "column": 12 } },
        "14": { "start": { "line": 37, "column": 2 }, "end": { "line": 37, "column": 54 } },
        "15": { "start": { "line": 41, "column": 2 }, "end": { "line": 47, "column": 4 } },
        "16": { "start": { "line": 42, "column": 4 }, "end": { "line": 46, "column": 5 } },
        "17": { "start": { "line": 51, "column": 2 }, "end": { "line": 51, "column": 27 } },
        "18": { "start": { "line": 55, "column": 28 }, "end": { "line": 55, "column": 91 } },
        "19": { "start": { "line": 55, "column": 71 }, "end": { "line": 55, "column": 87 } },
        "20": { "start": { "line": 56, "column": 2 }, "end": { "line": 56, "column": 57 } }
      },
      "fnMap": {
        "0": {
          "name": "transformLandCovers",
          "decl": { "start": { "line": 4, "column": 16 }, "end": { "line": 4, "column": 35 } },
          "loc": { "start": { "line": 4, "column": 47 }, "end": { "line": 18, "column": 1 } },
          "line": 4
        },
        "1": {
          "name": "(anonymous_1)",
          "decl": { "start": { "line": 7, "column": 12 }, "end": { "line": 7, "column": 13 } },
          "loc": { "start": { "line": 7, "column": 22 }, "end": { "line": 7, "column": 52 } },
          "line": 7
        },
        "2": {
          "name": "(anonymous_2)",
          "decl": { "start": { "line": 8, "column": 9 }, "end": { "line": 8, "column": 10 } },
          "loc": { "start": { "line": 8, "column": 33 }, "end": { "line": 17, "column": 5 } },
          "line": 8
        },
        "3": {
          "name": "transformLandParcelsEffectiveDates",
          "decl": { "start": { "line": 20, "column": 16 }, "end": { "line": 20, "column": 50 } },
          "loc": { "start": { "line": 20, "column": 79 }, "end": { "line": 27, "column": 1 } },
          "line": 20
        },
        "4": {
          "name": "(anonymous_4)",
          "decl": { "start": { "line": 21, "column": 30 }, "end": { "line": 21, "column": 31 } },
          "loc": { "start": { "line": 21, "column": 37 }, "end": { "line": 21, "column": 85 } },
          "line": 21
        },
        "5": {
          "name": "transformLandCoversToArea",
          "decl": { "start": { "line": 29, "column": 16 }, "end": { "line": 29, "column": 41 } },
          "loc": { "start": { "line": 29, "column": 60 }, "end": { "line": 38, "column": 1 } },
          "line": 29
        },
        "6": {
          "name": "(anonymous_6)",
          "decl": { "start": { "line": 33, "column": 36 }, "end": { "line": 33, "column": 37 } },
          "loc": { "start": { "line": 33, "column": 47 }, "end": { "line": 33, "column": 67 } },
          "line": 33
        },
        "7": {
          "name": "transformLandParcels",
          "decl": { "start": { "line": 40, "column": 16 }, "end": { "line": 40, "column": 36 } },
          "loc": { "start": { "line": 40, "column": 50 }, "end": { "line": 48, "column": 1 } },
          "line": 40
        },
        "8": {
          "name": "(anonymous_8)",
          "decl": { "start": { "line": 41, "column": 25 }, "end": { "line": 41, "column": 26 } },
          "loc": { "start": { "line": 41, "column": 37 }, "end": { "line": 47, "column": 3 } },
          "line": 41
        },
        "9": {
          "name": "transformTotalParcels",
          "decl": { "start": { "line": 50, "column": 16 }, "end": { "line": 50, "column": 37 } },
          "loc": { "start": { "line": 50, "column": 51 }, "end": { "line": 52, "column": 1 } },
          "line": 50
        },
        "10": {
          "name": "transformTotalArea",
          "decl": { "start": { "line": 54, "column": 16 }, "end": { "line": 54, "column": 34 } },
          "loc": { "start": { "line": 54, "column": 47 }, "end": { "line": 57, "column": 1 } },
          "line": 54
        },
        "11": {
          "name": "(anonymous_11)",
          "decl": { "start": { "line": 55, "column": 46 }, "end": { "line": 55, "column": 47 } },
          "loc": { "start": { "line": 55, "column": 71 }, "end": { "line": 55, "column": 87 } },
          "line": 55
        }
      },
      "branchMap": {
        "0": {
          "loc": { "start": { "line": 5, "column": 16 }, "end": { "line": 5, "column": 41 } },
          "type": "binary-expr",
          "locations": [
            { "start": { "line": 5, "column": 16 }, "end": { "line": 5, "column": 35 } },
            { "start": { "line": 5, "column": 39 }, "end": { "line": 5, "column": 41 } }
          ],
          "line": 5
        },
        "1": {
          "loc": { "start": { "line": 21, "column": 37 }, "end": { "line": 21, "column": 85 } },
          "type": "binary-expr",
          "locations": [
            { "start": { "line": 21, "column": 37 }, "end": { "line": 21, "column": 60 } },
            { "start": { "line": 21, "column": 64 }, "end": { "line": 21, "column": 85 } }
          ],
          "line": 21
        },
        "2": {
          "loc": { "start": { "line": 30, "column": 2 }, "end": { "line": 32, "column": 3 } },
          "type": "if",
          "locations": [
            { "start": { "line": 30, "column": 2 }, "end": { "line": 32, "column": 3 } },
            { "start": {}, "end": {} }
          ],
          "line": 30
        },
        "3": {
          "loc": { "start": { "line": 30, "column": 6 }, "end": { "line": 30, "column": 47 } },
          "type": "binary-expr",
          "locations": [
            { "start": { "line": 30, "column": 6 }, "end": { "line": 30, "column": 17 } },
            { "start": { "line": 30, "column": 21 }, "end": { "line": 30, "column": 47 } }
          ],
          "line": 30
        },
        "4": {
          "loc": { "start": { "line": 34, "column": 2 }, "end": { "line": 36, "column": 3 } },
          "type": "if",
          "locations": [
            { "start": { "line": 34, "column": 2 }, "end": { "line": 36, "column": 3 } },
            { "start": {}, "end": {} }
          ],
          "line": 34
        }
      },
      "s": {
        "0": 5,
        "1": 5,
        "2": 5,
        "3": 5,
        "4": 5,
        "5": 7,
        "6": 7,
        "7": 7,
        "8": 14,
        "9": 0,
        "10": 14,
        "11": 26,
        "12": 14,
        "13": 1,
        "14": 13,
        "15": 13,
        "16": 13,
        "17": 4,
        "18": 4,
        "19": 4,
        "20": 4
      },
      "f": {
        "0": 5,
        "1": 5,
        "2": 5,
        "3": 7,
        "4": 7,
        "5": 14,
        "6": 26,
        "7": 13,
        "8": 13,
        "9": 4,
        "10": 4,
        "11": 4
      },
      "b": { "0": [5, 0], "1": [7, 7], "2": [0, 14], "3": [14, 14], "4": [1, 13] },
      "inputSourceMap": null,
      "_coverageSchema": "1a1c01bbd47fc00a2c39e90264f33305004495a9",
      "hash": "f08511168e705b0778efcc071e7e4fec24d706d6"
    },
    "/Users/dominic/Sites/defra/fcp-dal-api/app/graphql/resolvers/business/business-land.js": {
      "path": "/Users/dominic/Sites/defra/fcp-dal-api/app/graphql/resolvers/business/business-land.js",
      "statementMap": {
        "0": { "start": { "line": 12, "column": 28 }, "end": { "line": 66, "column": 1 } },
        "1": { "start": { "line": 14, "column": 4 }, "end": { "line": 14, "column": 35 } },
        "2": { "start": { "line": 18, "column": 4 }, "end": { "line": 18, "column": 22 } },
        "3": { "start": { "line": 20, "column": 20 }, "end": { "line": 20, "column": 93 } },
        "4": { "start": { "line": 21, "column": 19 }, "end": { "line": 21, "column": 89 } },
        "5": { "start": { "line": 21, "column": 40 }, "end": { "line": 21, "column": 88 } },
        "6": { "start": { "line": 22, "column": 4 }, "end": { "line": 24, "column": 5 } },
        "7": { "start": { "line": 23, "column": 6 }, "end": { "line": 23, "column": 93 } },
        "8": { "start": { "line": 26, "column": 4 }, "end": { "line": 30, "column": 5 } },
        "9": { "start": { "line": 34, "column": 4 }, "end": { "line": 34, "column": 22 } },
        "10": { "start": { "line": 36, "column": 4 }, "end": { "line": 41, "column": 5 } },
        "11": { "start": { "line": 49, "column": 4 }, "end": { "line": 49, "column": 22 } },
        "12": { "start": { "line": 51, "column": 19 }, "end": { "line": 55, "column": 5 } },
        "13": { "start": { "line": 57, "column": 4 }, "end": { "line": 64, "column": 5 } },
        "14": { "start": { "line": 68, "column": 32 }, "end": { "line": 79, "column": 1 } },
        "15": { "start": { "line": 73, "column": 4 }, "end": { "line": 76, "column": 5 } },
        "16": { "start": { "line": 78, "column": 2 }, "end": { "line": 78, "column": 88 } },
        "17": { "start": { "line": 81, "column": 34 }, "end": { "line": 93, "column": 1 } },
        "18": { "start": { "line": 83, "column": 28 }, "end": { "line": 83, "column": 78 } },
        "19": { "start": { "line": 85, "column": 4 }, "end": { "line": 85, "column": 22 } },
        "20": { "start": { "line": 89, "column": 30 }, "end": { "line": 89, "column": 80 } },
        "21": { "start": { "line": 91, "column": 4 }, "end": { "line": 91, "column": 24 } },
        "22": { "start": { "line": 95, "column": 35 }, "end": { "line": 143, "column": 1 } },
        "23": { "start": { "line": 97, "column": 4 }, "end": { "line": 102, "column": 5 } },
        "24": { "start": { "line": 106, "column": 4 }, "end": { "line": 111, "column": 5 } },
        "25": { "start": { "line": 115, "column": 4 }, "end": { "line": 121, "column": 5 } },
        "26": { "start": { "line": 125, "column": 4 }, "end": { "line": 131, "column": 5 } },
        "27": { "start": { "line": 135, "column": 4 }, "end": { "line": 141, "column": 5 } }
      },
      "fnMap": {
        "0": {
          "name": "(anonymous_0)",
          "decl": { "start": { "line": 13, "column": 2 }, "end": { "line": 13, "column": 3 } },
          "loc": { "start": { "line": 13, "column": 40 }, "end": { "line": 15, "column": 3 } },
          "line": 13
        },
        "1": {
          "name": "(anonymous_1)",
          "decl": { "start": { "line": 17, "column": 2 }, "end": { "line": 17, "column": 3 } },
          "loc": { "start": { "line": 17, "column": 94 }, "end": { "line": 31, "column": 3 } },
          "line": 17
        },
        "2": {
          "name": "(anonymous_2)",
          "decl": { "start": { "line": 21, "column": 33 }, "end": { "line": 21, "column": 34 } },
          "loc": { "start": { "line": 21, "column": 40 }, "end": { "line": 21, "column": 88 } },
          "line": 21
        },
        "3": {
          "name": "(anonymous_3)",
          "decl": { "start": { "line": 33, "column": 2 }, "end": { "line": 33, "column": 3 } },
          "loc": { "start": { "line": 33, "column": 76 }, "end": { "line": 42, "column": 3 } },
          "line": 33
        },
        "4": {
          "name": "(anonymous_4)",
          "decl": { "start": { "line": 44, "column": 2 }, "end": { "line": 44, "column": 3 } },
          "loc": { "start": { "line": 48, "column": 4 }, "end": { "line": 65, "column": 3 } },
          "line": 48
        },
        "5": {
          "name": "(anonymous_5)",
          "decl": { "start": { "line": 68, "column": 32 }, "end": { "line": 68, "column": 33 } },
          "loc": { "start": { "line": 71, "column": 5 }, "end": { "line": 79, "column": 1 } },
          "line": 71
        },
        "6": {
          "name": "(anonymous_6)",
          "decl": { "start": { "line": 82, "column": 2 }, "end": { "line": 82, "column": 3 } },
          "loc": { "start": { "line": 82, "column": 53 }, "end": { "line": 86, "column": 3 } },
          "line": 82
        },
        "7": {
          "name": "(anonymous_7)",
          "decl": { "start": { "line": 88, "column": 2 }, "end": { "line": 88, "column": 3 } },
          "loc": { "start": { "line": 88, "column": 55 }, "end": { "line": 92, "column": 3 } },
          "line": 88
        },
        "8": {
          "name": "(anonymous_8)",
          "decl": { "start": { "line": 96, "column": 2 }, "end": { "line": 96, "column": 3 } },
          "loc": { "start": { "line": 96, "column": 81 }, "end": { "line": 103, "column": 3 } },
          "line": 96
        },
        "9": {
          "name": "(anonymous_9)",
          "decl": { "start": { "line": 105, "column": 2 }, "end": { "line": 105, "column": 3 } },
          "loc": { "start": { "line": 105, "column": 78 }, "end": { "line": 112, "column": 3 } },
          "line": 105
        },
        "10": {
          "name": "(anonymous_10)",
          "decl": { "start": { "line": 114, "column": 2 }, "end": { "line": 114, "column": 3 } },
          "loc": { "start": { "line": 114, "column": 83 }, "end": { "line": 122, "column": 3 } },
          "line": 114
        },
        "11": {
          "name": "(anonymous_11)",
          "decl": { "start": { "line": 124, "column": 2 }, "end": { "line": 124, "column": 3 } },
          "loc": { "start": { "line": 124, "column": 91 }, "end": { "line": 132, "column": 3 } },
          "line": 124
        },
        "12": {
          "name": "(anonymous_12)",
          "decl": { "start": { "line": 134, "column": 2 }, "end": { "line": 134, "column": 3 } },
          "loc": { "start": { "line": 134, "column": 87 }, "end": { "line": 142, "column": 3 } },
          "line": 134
        }
      },
      "branchMap": {
        "0": {
          "loc": { "start": { "line": 17, "column": 37 }, "end": { "line": 17, "column": 54 } },
          "type": "default-arg",
          "locations": [
            { "start": { "line": 17, "column": 44 }, "end": { "line": 17, "column": 54 } }
          ],
          "line": 17
        },
        "1": {
          "loc": { "start": { "line": 21, "column": 40 }, "end": { "line": 21, "column": 88 } },
          "type": "binary-expr",
          "locations": [
            { "start": { "line": 21, "column": 40 }, "end": { "line": 21, "column": 61 } },
            { "start": { "line": 21, "column": 65 }, "end": { "line": 21, "column": 88 } }
          ],
          "line": 21
        },
        "2": {
          "loc": { "start": { "line": 22, "column": 4 }, "end": { "line": 24, "column": 5 } },
          "type": "if",
          "locations": [
            { "start": { "line": 22, "column": 4 }, "end": { "line": 24, "column": 5 } },
            { "start": {}, "end": {} }
          ],
          "line": 22
        },
        "3": {
          "loc": { "start": { "line": 33, "column": 38 }, "end": { "line": 33, "column": 55 } },
          "type": "default-arg",
          "locations": [
            { "start": { "line": 33, "column": 45 }, "end": { "line": 33, "column": 55 } }
          ],
          "line": 33
        },
        "4": {
          "loc": { "start": { "line": 46, "column": 6 }, "end": { "line": 46, "column": 23 } },
          "type": "default-arg",
          "locations": [
            { "start": { "line": 46, "column": 13 }, "end": { "line": 46, "column": 23 } }
          ],
          "line": 46
        },
        "5": {
          "loc": { "start": { "line": 96, "column": 39 }, "end": { "line": 96, "column": 56 } },
          "type": "default-arg",
          "locations": [
            { "start": { "line": 96, "column": 46 }, "end": { "line": 96, "column": 56 } }
          ],
          "line": 96
        },
        "6": {
          "loc": { "start": { "line": 105, "column": 36 }, "end": { "line": 105, "column": 53 } },
          "type": "default-arg",
          "locations": [
            { "start": { "line": 105, "column": 43 }, "end": { "line": 105, "column": 53 } }
          ],
          "line": 105
        },
        "7": {
          "loc": { "start": { "line": 114, "column": 41 }, "end": { "line": 114, "column": 58 } },
          "type": "default-arg",
          "locations": [
            { "start": { "line": 114, "column": 48 }, "end": { "line": 114, "column": 58 } }
          ],
          "line": 114
        },
        "8": {
          "loc": { "start": { "line": 124, "column": 49 }, "end": { "line": 124, "column": 66 } },
          "type": "default-arg",
          "locations": [
            { "start": { "line": 124, "column": 56 }, "end": { "line": 124, "column": 66 } }
          ],
          "line": 124
        },
        "9": {
          "loc": { "start": { "line": 134, "column": 45 }, "end": { "line": 134, "column": 62 } },
          "type": "default-arg",
          "locations": [
            { "start": { "line": 134, "column": 52 }, "end": { "line": 134, "column": 62 } }
          ],
          "line": 134
        }
      },
      "s": {
        "0": 11,
        "1": 4,
        "2": 8,
        "3": 8,
        "4": 8,
        "5": 8,
        "6": 8,
        "7": 0,
        "8": 8,
        "9": 12,
        "10": 12,
        "11": 4,
        "12": 4,
        "13": 4,
        "14": 11,
        "15": 6,
        "16": 6,
        "17": 11,
        "18": 3,
        "19": 3,
        "20": 3,
        "21": 3,
        "22": 11,
        "23": 4,
        "24": 4,
        "25": 4,
        "26": 4,
        "27": 4
      },
      "f": {
        "0": 4,
        "1": 8,
        "2": 8,
        "3": 12,
        "4": 4,
        "5": 6,
        "6": 3,
        "7": 3,
        "8": 4,
        "9": 4,
        "10": 4,
        "11": 4,
        "12": 4
      },
      "b": {
        "0": [1],
        "1": [8, 8],
        "2": [0, 8],
        "3": [1],
        "4": [1],
        "5": [2],
        "6": [2],
        "7": [2],
        "8": [2],
        "9": [2]
      },
      "inputSourceMap": null,
      "_coverageSchema": "1a1c01bbd47fc00a2c39e90264f33305004495a9",
      "hash": "b2a851ce34bb9d7bb639986403717ee2f0839038"
    },
    "/Users/dominic/Sites/defra/fcp-dal-api/app/utils/mapping.js": {
      "path": "/Users/dominic/Sites/defra/fcp-dal-api/app/utils/mapping.js",
      "statementMap": {
        "0": { "start": { "line": 1, "column": 32 }, "end": { "line": 18, "column": 1 } },
        "1": { "start": { "line": 2, "column": 2 }, "end": { "line": 17, "column": 3 } },
        "2": { "start": { "line": 3, "column": 19 }, "end": { "line": 3, "column": 32 } },
        "3": { "start": { "line": 4, "column": 4 }, "end": { "line": 4, "column": 52 } },
        "4": { "start": { "line": 5, "column": 9 }, "end": { "line": 17, "column": 3 } },
        "5": { "start": { "line": 6, "column": 24 }, "end": { "line": 12, "column": 10 } },
        "6": { "start": { "line": 7, "column": 21 }, "end": { "line": 7, "column": 48 } },
        "7": { "start": { "line": 8, "column": 6 }, "end": { "line": 10, "column": 7 } },
        "8": { "start": { "line": 9, "column": 8 }, "end": { "line": 9, "column": 25 } },
        "9": { "start": { "line": 11, "column": 6 }, "end": { "line": 11, "column": 16 } },
        "10": { "start": { "line": 14, "column": 4 }, "end": { "line": 14, "column": 22 } },
        "11": { "start": { "line": 16, "column": 4 }, "end": { "line": 16, "column": 20 } }
      },
      "fnMap": {
        "0": {
          "name": "(anonymous_0)",
          "decl": { "start": { "line": 1, "column": 32 }, "end": { "line": 1, "column": 33 } },
          "loc": { "start": { "line": 1, "column": 51 }, "end": { "line": 18, "column": 1 } },
          "line": 1
        },
        "1": {
          "name": "(anonymous_1)",
          "decl": { "start": { "line": 6, "column": 55 }, "end": { "line": 6, "column": 56 } },
          "loc": { "start": { "line": 6, "column": 76 }, "end": { "line": 12, "column": 5 } },
          "line": 6
        }
      },
      "branchMap": {
        "0": {
          "loc": { "start": { "line": 2, "column": 2 }, "end": { "line": 17, "column": 3 } },
          "type": "if",
          "locations": [
            { "start": { "line": 2, "column": 2 }, "end": { "line": 17, "column": 3 } },
            { "start": { "line": 5, "column": 9 }, "end": { "line": 17, "column": 3 } }
          ],
          "line": 2
        },
        "1": {
          "loc": { "start": { "line": 4, "column": 11 }, "end": { "line": 4, "column": 52 } },
          "type": "cond-expr",
          "locations": [
            { "start": { "line": 4, "column": 34 }, "end": { "line": 4, "column": 43 } },
            { "start": { "line": 4, "column": 46 }, "end": { "line": 4, "column": 52 } }
          ],
          "line": 4
        },
        "2": {
          "loc": { "start": { "line": 5, "column": 9 }, "end": { "line": 17, "column": 3 } },
          "type": "if",
          "locations": [
            { "start": { "line": 5, "column": 9 }, "end": { "line": 17, "column": 3 } },
            { "start": { "line": 15, "column": 9 }, "end": { "line": 17, "column": 3 } }
          ],
          "line": 5
        },
        "3": {
          "loc": { "start": { "line": 8, "column": 6 }, "end": { "line": 10, "column": 7 } },
          "type": "if",
          "locations": [
            { "start": { "line": 8, "column": 6 }, "end": { "line": 10, "column": 7 } },
            { "start": {}, "end": {} }
          ],
          "line": 8
        }
      },
      "s": {
        "0": 22,
        "1": 1213,
        "2": 1121,
        "3": 1121,
        "4": 92,
        "5": 91,
        "6": 1151,
        "7": 1151,
        "8": 297,
        "9": 1151,
        "10": 91,
        "11": 1
      },
      "f": { "0": 1213, "1": 1151 },
      "b": { "0": [1121, 92], "1": [854, 267], "2": [91, 1], "3": [297, 854] },
      "inputSourceMap": null,
      "_coverageSchema": "1a1c01bbd47fc00a2c39e90264f33305004495a9",
      "hash": "838fcb60c8c764bc7c9f735a1957099a3f72abd7"
    },
    "/Users/dominic/Sites/defra/fcp-dal-api/app/transformers/common.js": {
      "path": "/Users/dominic/Sites/defra/fcp-dal-api/app/transformers/common.js",
      "statementMap": {
        "0": { "start": { "line": 1, "column": 39 }, "end": { "line": 22, "column": 1 } },
        "1": { "start": { "line": 2, "column": 2 }, "end": { "line": 21, "column": 3 } },
        "2": { "start": { "line": 24, "column": 39 }, "end": { "line": 45, "column": 1 } },
        "3": { "start": { "line": 25, "column": 2 }, "end": { "line": 44, "column": 3 } },
        "4": { "start": { "line": 47, "column": 26 }, "end": { "line": 47, "column": 44 } },
        "5": { "start": { "line": 47, "column": 37 }, "end": { "line": 47, "column": 44 } },
        "6": { "start": { "line": 49, "column": 37 }, "end": { "line": 53, "column": 2 } },
        "7": { "start": { "line": 49, "column": 50 }, "end": { "line": 53, "column": 1 } },
        "8": { "start": { "line": 56, "column": 2 }, "end": { "line": 58, "column": 3 } },
        "9": { "start": { "line": 57, "column": 4 }, "end": { "line": 57, "column": 15 } },
        "10": { "start": { "line": 60, "column": 15 }, "end": { "line": 60, "column": 74 } },
        "11": { "start": { "line": 61, "column": 2 }, "end": { "line": 61, "column": 65 } },
        "12": { "start": { "line": 64, "column": 38 }, "end": { "line": 73, "column": 1 } },
        "13": { "start": { "line": 66, "column": 16 }, "end": { "line": 66, "column": 79 } },
        "14": { "start": { "line": 68, "column": 2 }, "end": { "line": 70, "column": 3 } },
        "15": { "start": { "line": 69, "column": 4 }, "end": { "line": 69, "column": 74 } },
        "16": { "start": { "line": 72, "column": 2 }, "end": { "line": 72, "column": 13 } }
      },
      "fnMap": {
        "0": {
          "name": "(anonymous_0)",
          "decl": { "start": { "line": 1, "column": 39 }, "end": { "line": 1, "column": 40 } },
          "loc": { "start": { "line": 1, "column": 52 }, "end": { "line": 22, "column": 1 } },
          "line": 1
        },
        "1": {
          "name": "(anonymous_1)",
          "decl": { "start": { "line": 24, "column": 39 }, "end": { "line": 24, "column": 40 } },
          "loc": { "start": { "line": 24, "column": 52 }, "end": { "line": 45, "column": 1 } },
          "line": 24
        },
        "2": {
          "name": "(anonymous_2)",
          "decl": { "start": { "line": 47, "column": 26 }, "end": { "line": 47, "column": 27 } },
          "loc": { "start": { "line": 47, "column": 37 }, "end": { "line": 47, "column": 44 } },
          "line": 47
        },
        "3": {
          "name": "(anonymous_3)",
          "decl": { "start": { "line": 49, "column": 37 }, "end": { "line": 49, "column": 38 } },
          "loc": { "start": { "line": 49, "column": 50 }, "end": { "line": 53, "column": 1 } },
          "line": 49
        },
        "4": {
          "name": "transformToISODate",
          "decl": { "start": { "line": 55, "column": 16 }, "end": { "line": 55, "column": 34 } },
          "loc": { "start": { "line": 55, "column": 46 }, "end": { "line": 62, "column": 1 } },
          "line": 55
        },
        "5": {
          "name": "(anonymous_5)",
          "decl": { "start": { "line": 64, "column": 38 }, "end": { "line": 64, "column": 39 } },
          "loc": { "start": { "line": 64, "column": 52 }, "end": { "line": 73, "column": 1 } },
          "line": 64
        }
      },
      "branchMap": {
        "0": {
          "loc": { "start": { "line": 56, "column": 2 }, "end": { "line": 58, "column": 3 } },
          "type": "if",
          "locations": [
            { "start": { "line": 56, "column": 2 }, "end": { "line": 58, "column": 3 } },
            { "start": {}, "end": {} }
          ],
          "line": 56
        },
        "1": {
          "loc": { "start": { "line": 56, "column": 6 }, "end": { "line": 56, "column": 83 } },
          "type": "binary-expr",
          "locations": [
            { "start": { "line": 56, "column": 6 }, "end": { "line": 56, "column": 16 } },
            { "start": { "line": 56, "column": 20 }, "end": { "line": 56, "column": 50 } },
            { "start": { "line": 56, "column": 54 }, "end": { "line": 56, "column": 83 } }
          ],
          "line": 56
        },
        "2": {
          "loc": { "start": { "line": 60, "column": 24 }, "end": { "line": 60, "column": 73 } },
          "type": "cond-expr",
          "locations": [
            { "start": { "line": 60, "column": 51 }, "end": { "line": 60, "column": 60 } },
            { "start": { "line": 60, "column": 63 }, "end": { "line": 60, "column": 73 } }
          ],
          "line": 60
        },
        "3": {
          "loc": { "start": { "line": 61, "column": 9 }, "end": { "line": 61, "column": 65 } },
          "type": "cond-expr",
          "locations": [
            { "start": { "line": 61, "column": 40 }, "end": { "line": 61, "column": 44 } },
            { "start": { "line": 61, "column": 47 }, "end": { "line": 61, "column": 65 } }
          ],
          "line": 61
        },
        "4": {
          "loc": { "start": { "line": 68, "column": 2 }, "end": { "line": 70, "column": 3 } },
          "type": "if",
          "locations": [
            { "start": { "line": 68, "column": 2 }, "end": { "line": 70, "column": 3 } },
            { "start": {}, "end": {} }
          ],
          "line": 68
        },
        "5": {
          "loc": { "start": { "line": 69, "column": 35 }, "end": { "line": 69, "column": 57 } },
          "type": "binary-expr",
          "locations": [
            { "start": { "line": 69, "column": 35 }, "end": { "line": 69, "column": 43 } },
            { "start": { "line": 69, "column": 47 }, "end": { "line": 69, "column": 57 } }
          ],
          "line": 69
        }
      },
      "s": {
        "0": 23,
        "1": 37,
        "2": 23,
        "3": 30,
        "4": 23,
        "5": 307,
        "6": 23,
        "7": 31,
        "8": 13,
        "9": 8,
        "10": 5,
        "11": 5,
        "12": 23,
        "13": 14,
        "14": 14,
        "15": 11,
        "16": 3
      },
      "f": { "0": 37, "1": 30, "2": 307, "3": 31, "4": 13, "5": 14 },
      "b": { "0": [8, 5], "1": [13, 8, 7], "2": [3, 2], "3": [2, 3], "4": [11, 3], "5": [11, 1] },
      "inputSourceMap": null,
      "_coverageSchema": "1a1c01bbd47fc00a2c39e90264f33305004495a9",
      "hash": "fd19d2df7100f08d688bf4c2df26e674dbd37f0b"
    },
    "/Users/dominic/Sites/defra/fcp-dal-api/app/transformers/rural-payments/business.js": {
      "path": "/Users/dominic/Sites/defra/fcp-dal-api/app/transformers/rural-payments/business.js",
      "statementMap": {
        "0": { "start": { "line": 12, "column": 46 }, "end": { "line": 14, "column": 1 } },
        "1": { "start": { "line": 13, "column": 2 }, "end": { "line": 13, "column": 48 } },
        "2": { "start": { "line": 16, "column": 45 }, "end": { "line": 30, "column": 2 } },
        "3": { "start": { "line": 23, "column": 7 }, "end": { "line": 30, "column": 1 } },
        "4": { "start": { "line": 36, "column": 35 }, "end": { "line": 36, "column": 37 } },
        "5": { "start": { "line": 38, "column": 2 }, "end": { "line": 48, "column": 3 } },
        "6": { "start": { "line": 39, "column": 4 }, "end": { "line": 47, "column": 5 } },
        "7": { "start": { "line": 40, "column": 6 }, "end": { "line": 46, "column": 7 } },
        "8": { "start": { "line": 40, "column": 60 }, "end": { "line": 40, "column": 94 } },
        "9": { "start": { "line": 41, "column": 8 }, "end": { "line": 45, "column": 10 } },
        "10": { "start": { "line": 50, "column": 2 }, "end": { "line": 50, "column": 33 } },
        "11": { "start": { "line": 53, "column": 47 }, "end": { "line": 112, "column": 2 } },
        "12": { "start": { "line": 53, "column": 58 }, "end": { "line": 112, "column": 1 } },
        "13": { "start": { "line": 107, "column": 65 }, "end": { "line": 107, "column": 83 } },
        "14": { "start": { "line": 114, "column": 32 }, "end": { "line": 132, "column": 1 } },
        "15": { "start": { "line": 115, "column": 18 }, "end": { "line": 115, "column": 27 } },
        "16": { "start": { "line": 117, "column": 4 }, "end": { "line": 117, "column": 91 } },
        "17": { "start": { "line": 119, "column": 4 }, "end": { "line": 123, "column": 17 } },
        "18": { "start": { "line": 124, "column": 44 }, "end": { "line": 124, "column": 82 } },
        "19": { "start": { "line": 125, "column": 19 }, "end": { "line": 125, "column": 38 } },
        "20": { "start": { "line": 126, "column": 22 }, "end": { "line": 126, "column": 42 } },
        "21": { "start": { "line": 127, "column": 20 }, "end": { "line": 127, "column": 38 } },
        "22": { "start": { "line": 128, "column": 33 }, "end": { "line": 128, "column": 66 } },
        "23": { "start": { "line": 129, "column": 36 }, "end": { "line": 129, "column": 70 } },
        "24": { "start": { "line": 130, "column": 34 }, "end": { "line": 130, "column": 66 } },
        "25": { "start": { "line": 131, "column": 35 }, "end": { "line": 131, "column": 43 } },
        "26": { "start": { "line": 134, "column": 58 }, "end": { "line": 136, "column": 1 } },
        "27": { "start": { "line": 135, "column": 2 }, "end": { "line": 135, "column": 56 } },
        "28": { "start": { "line": 138, "column": 36 }, "end": { "line": 157, "column": 1 } },
        "29": { "start": { "line": 140, "column": 4 }, "end": { "line": 140, "column": 82 } },
        "30": { "start": { "line": 142, "column": 4 }, "end": { "line": 142, "column": 86 } },
        "31": { "start": { "line": 144, "column": 4 }, "end": { "line": 148, "column": 17 } },
        "32": { "start": { "line": 150, "column": 4 }, "end": { "line": 150, "column": 89 } },
        "33": { "start": { "line": 152, "column": 4 }, "end": { "line": 156, "column": 17 } },
        "34": { "start": { "line": 159, "column": 67 }, "end": { "line": 161, "column": 1 } },
        "35": { "start": { "line": 160, "column": 2 }, "end": { "line": 160, "column": 60 } },
        "36": { "start": { "line": 163, "column": 30 }, "end": { "line": 169, "column": 1 } },
        "37": { "start": { "line": 166, "column": 27 }, "end": { "line": 166, "column": 46 } },
        "38": { "start": { "line": 167, "column": 26 }, "end": { "line": 167, "column": 44 } },
        "39": { "start": { "line": 168, "column": 26 }, "end": { "line": 168, "column": 44 } },
        "40": { "start": { "line": 171, "column": 58 }, "end": { "line": 173, "column": 1 } },
        "41": { "start": { "line": 172, "column": 2 }, "end": { "line": 172, "column": 54 } },
        "42": { "start": { "line": 176, "column": 2 }, "end": { "line": 178, "column": 3 } },
        "43": { "start": { "line": 177, "column": 4 }, "end": { "line": 177, "column": 15 } },
        "44": { "start": { "line": 180, "column": 2 }, "end": { "line": 201, "column": 7 } },
        "45": { "start": { "line": 182, "column": 43 }, "end": { "line": 182, "column": 78 } },
        "46": { "start": { "line": 183, "column": 43 }, "end": { "line": 183, "column": 78 } },
        "47": { "start": { "line": 185, "column": 6 }, "end": { "line": 190, "column": 7 } },
        "48": { "start": { "line": 192, "column": 84 }, "end": { "line": 201, "column": 5 } },
        "49": { "start": { "line": 205, "column": 2 }, "end": { "line": 205, "column": 43 } },
        "50": { "start": { "line": 209, "column": 2 }, "end": { "line": 218, "column": 3 } },
        "51": { "start": { "line": 222, "column": 2 }, "end": { "line": 242, "column": 3 } },
        "52": { "start": { "line": 245, "column": 37 }, "end": { "line": 245, "column": 93 } },
        "53": { "start": { "line": 245, "column": 55 }, "end": { "line": 245, "column": 93 } },
        "54": { "start": { "line": 247, "column": 29 }, "end": { "line": 267, "column": 2 } },
        "55": { "start": { "line": 247, "column": 47 }, "end": { "line": 267, "column": 1 } },
        "56": { "start": { "line": 268, "column": 29 }, "end": { "line": 273, "column": 2 } },
        "57": { "start": { "line": 268, "column": 99 }, "end": { "line": 273, "column": 1 } }
      },
      "fnMap": {
        "0": {
          "name": "(anonymous_0)",
          "decl": { "start": { "line": 12, "column": 46 }, "end": { "line": 12, "column": 47 } },
          "loc": { "start": { "line": 12, "column": 56 }, "end": { "line": 14, "column": 1 } },
          "line": 12
        },
        "1": {
          "name": "(anonymous_1)",
          "decl": { "start": { "line": 16, "column": 45 }, "end": { "line": 16, "column": 46 } },
          "loc": { "start": { "line": 23, "column": 7 }, "end": { "line": 30, "column": 1 } },
          "line": 23
        },
        "2": {
          "name": "transformBusinessCustomerPrivilegesToPermissionGroups",
          "decl": { "start": { "line": 32, "column": 16 }, "end": { "line": 32, "column": 69 } },
          "loc": { "start": { "line": 35, "column": 2 }, "end": { "line": 51, "column": 1 } },
          "line": 35
        },
        "3": {
          "name": "(anonymous_3)",
          "decl": { "start": { "line": 40, "column": 41 }, "end": { "line": 40, "column": 42 } },
          "loc": { "start": { "line": 40, "column": 60 }, "end": { "line": 40, "column": 94 } },
          "line": 40
        },
        "4": {
          "name": "(anonymous_4)",
          "decl": { "start": { "line": 53, "column": 47 }, "end": { "line": 53, "column": 48 } },
          "loc": { "start": { "line": 53, "column": 58 }, "end": { "line": 112, "column": 1 } },
          "line": 53
        },
        "5": {
          "name": "(anonymous_5)",
          "decl": { "start": { "line": 107, "column": 46 }, "end": { "line": 107, "column": 47 } },
          "loc": { "start": { "line": 107, "column": 65 }, "end": { "line": 107, "column": 83 } },
          "line": 107
        },
        "6": {
          "name": "(anonymous_6)",
          "decl": { "start": { "line": 115, "column": 8 }, "end": { "line": 115, "column": 9 } },
          "loc": { "start": { "line": 115, "column": 18 }, "end": { "line": 115, "column": 27 } },
          "line": 115
        },
        "7": {
          "name": "(anonymous_7)",
          "decl": { "start": { "line": 116, "column": 11 }, "end": { "line": 116, "column": 12 } },
          "loc": { "start": { "line": 117, "column": 4 }, "end": { "line": 117, "column": 91 } },
          "line": 117
        },
        "8": {
          "name": "(anonymous_8)",
          "decl": { "start": { "line": 118, "column": 25 }, "end": { "line": 118, "column": 26 } },
          "loc": { "start": { "line": 119, "column": 4 }, "end": { "line": 123, "column": 17 } },
          "line": 119
        },
        "9": {
          "name": "(anonymous_9)",
          "decl": { "start": { "line": 124, "column": 34 }, "end": { "line": 124, "column": 35 } },
          "loc": { "start": { "line": 124, "column": 44 }, "end": { "line": 124, "column": 82 } },
          "line": 124
        },
        "10": {
          "name": "(anonymous_10)",
          "decl": { "start": { "line": 125, "column": 9 }, "end": { "line": 125, "column": 10 } },
          "loc": { "start": { "line": 125, "column": 19 }, "end": { "line": 125, "column": 38 } },
          "line": 125
        },
        "11": {
          "name": "(anonymous_11)",
          "decl": { "start": { "line": 126, "column": 12 }, "end": { "line": 126, "column": 13 } },
          "loc": { "start": { "line": 126, "column": 22 }, "end": { "line": 126, "column": 42 } },
          "line": 126
        },
        "12": {
          "name": "(anonymous_12)",
          "decl": { "start": { "line": 127, "column": 10 }, "end": { "line": 127, "column": 11 } },
          "loc": { "start": { "line": 127, "column": 20 }, "end": { "line": 127, "column": 38 } },
          "line": 127
        },
        "13": {
          "name": "(anonymous_13)",
          "decl": { "start": { "line": 128, "column": 23 }, "end": { "line": 128, "column": 24 } },
          "loc": { "start": { "line": 128, "column": 33 }, "end": { "line": 128, "column": 66 } },
          "line": 128
        },
        "14": {
          "name": "(anonymous_14)",
          "decl": { "start": { "line": 129, "column": 26 }, "end": { "line": 129, "column": 27 } },
          "loc": { "start": { "line": 129, "column": 36 }, "end": { "line": 129, "column": 70 } },
          "line": 129
        },
        "15": {
          "name": "(anonymous_15)",
          "decl": { "start": { "line": 130, "column": 24 }, "end": { "line": 130, "column": 25 } },
          "loc": { "start": { "line": 130, "column": 34 }, "end": { "line": 130, "column": 66 } },
          "line": 130
        },
        "16": {
          "name": "(anonymous_16)",
          "decl": { "start": { "line": 131, "column": 25 }, "end": { "line": 131, "column": 26 } },
          "loc": { "start": { "line": 131, "column": 35 }, "end": { "line": 131, "column": 43 } },
          "line": 131
        },
        "17": {
          "name": "(anonymous_17)",
          "decl": { "start": { "line": 134, "column": 58 }, "end": { "line": 134, "column": 59 } },
          "loc": { "start": { "line": 134, "column": 68 }, "end": { "line": 136, "column": 1 } },
          "line": 134
        },
        "18": {
          "name": "(anonymous_18)",
          "decl": { "start": { "line": 139, "column": 36 }, "end": { "line": 139, "column": 37 } },
          "loc": { "start": { "line": 140, "column": 4 }, "end": { "line": 140, "column": 82 } },
          "line": 140
        },
        "19": {
          "name": "(anonymous_19)",
          "decl": { "start": { "line": 141, "column": 39 }, "end": { "line": 141, "column": 40 } },
          "loc": { "start": { "line": 142, "column": 4 }, "end": { "line": 142, "column": 86 } },
          "line": 142
        },
        "20": {
          "name": "(anonymous_20)",
          "decl": { "start": { "line": 143, "column": 16 }, "end": { "line": 143, "column": 17 } },
          "loc": { "start": { "line": 144, "column": 4 }, "end": { "line": 148, "column": 17 } },
          "line": 144
        },
        "21": {
          "name": "(anonymous_21)",
          "decl": { "start": { "line": 149, "column": 22 }, "end": { "line": 149, "column": 23 } },
          "loc": { "start": { "line": 150, "column": 4 }, "end": { "line": 150, "column": 89 } },
          "line": 150
        },
        "22": {
          "name": "(anonymous_22)",
          "decl": { "start": { "line": 151, "column": 15 }, "end": { "line": 151, "column": 16 } },
          "loc": { "start": { "line": 152, "column": 4 }, "end": { "line": 156, "column": 17 } },
          "line": 152
        },
        "23": {
          "name": "(anonymous_23)",
          "decl": { "start": { "line": 159, "column": 67 }, "end": { "line": 159, "column": 68 } },
          "loc": { "start": { "line": 159, "column": 77 }, "end": { "line": 161, "column": 1 } },
          "line": 159
        },
        "24": {
          "name": "(anonymous_24)",
          "decl": { "start": { "line": 166, "column": 17 }, "end": { "line": 166, "column": 18 } },
          "loc": { "start": { "line": 166, "column": 27 }, "end": { "line": 166, "column": 46 } },
          "line": 166
        },
        "25": {
          "name": "(anonymous_25)",
          "decl": { "start": { "line": 167, "column": 16 }, "end": { "line": 167, "column": 17 } },
          "loc": { "start": { "line": 167, "column": 26 }, "end": { "line": 167, "column": 44 } },
          "line": 167
        },
        "26": {
          "name": "(anonymous_26)",
          "decl": { "start": { "line": 168, "column": 16 }, "end": { "line": 168, "column": 17 } },
          "loc": { "start": { "line": 168, "column": 26 }, "end": { "line": 168, "column": 44 } },
          "line": 168
        },
        "27": {
          "name": "(anonymous_27)",
          "decl": { "start": { "line": 171, "column": 58 }, "end": { "line": 171, "column": 59 } },
          "loc": { "start": { "line": 171, "column": 68 }, "end": { "line": 173, "column": 1 } },
          "line": 171
        },
        "28": {
          "name": "transformCountyParishHoldings",
          "decl": { "start": { "line": 175, "column": 16 }, "end": { "line": 175, "column": 45 } },
          "loc": { "start": { "line": 175, "column": 52 }, "end": { "line": 202, "column": 1 } },
          "line": 175
        },
        "29": {
          "name": "(anonymous_29)",
          "decl": { "start": { "line": 181, "column": 14 }, "end": { "line": 181, "column": 15 } },
          "loc": { "start": { "line": 181, "column": 24 }, "end": { "line": 191, "column": 5 } },
          "line": 181
        },
        "30": {
          "name": "(anonymous_30)",
          "decl": { "start": { "line": 192, "column": 9 }, "end": { "line": 192, "column": 10 } },
          "loc": { "start": { "line": 192, "column": 84 }, "end": { "line": 201, "column": 5 } },
          "line": 192
        },
        "31": {
          "name": "transformAgreements",
          "decl": { "start": { "line": 204, "column": 16 }, "end": { "line": 204, "column": 35 } },
          "loc": { "start": { "line": 204, "column": 48 }, "end": { "line": 206, "column": 1 } },
          "line": 204
        },
        "32": {
          "name": "transformAgreement",
          "decl": { "start": { "line": 208, "column": 9 }, "end": { "line": 208, "column": 27 } },
          "loc": { "start": { "line": 208, "column": 39 }, "end": { "line": 219, "column": 1 } },
          "line": 208
        },
        "33": {
          "name": "transformPaymentSchedule",
          "decl": { "start": { "line": 221, "column": 9 }, "end": { "line": 221, "column": 33 } },
          "loc": { "start": { "line": 221, "column": 51 }, "end": { "line": 243, "column": 1 } },
          "line": 221
        },
        "34": {
          "name": "(anonymous_34)",
          "decl": { "start": { "line": 245, "column": 37 }, "end": { "line": 245, "column": 38 } },
          "loc": { "start": { "line": 245, "column": 55 }, "end": { "line": 245, "column": 93 } },
          "line": 245
        },
        "35": {
          "name": "(anonymous_35)",
          "decl": { "start": { "line": 247, "column": 29 }, "end": { "line": 247, "column": 30 } },
          "loc": { "start": { "line": 247, "column": 47 }, "end": { "line": 267, "column": 1 } },
          "line": 247
        },
        "36": {
          "name": "(anonymous_36)",
          "decl": { "start": { "line": 268, "column": 29 }, "end": { "line": 268, "column": 30 } },
          "loc": { "start": { "line": 268, "column": 99 }, "end": { "line": 273, "column": 1 } },
          "line": 268
        }
      },
      "branchMap": {
        "0": {
          "loc": { "start": { "line": 40, "column": 6 }, "end": { "line": 46, "column": 7 } },
          "type": "if",
          "locations": [
            { "start": { "line": 40, "column": 6 }, "end": { "line": 46, "column": 7 } },
            { "start": {}, "end": {} }
          ],
          "line": 40
        },
        "1": {
          "loc": { "start": { "line": 62, "column": 6 }, "end": { "line": 62, "column": 98 } },
          "type": "binary-expr",
          "locations": [
            { "start": { "line": 62, "column": 7 }, "end": { "line": 62, "column": 34 } },
            { "start": { "line": 62, "column": 38 }, "end": { "line": 62, "column": 89 } },
            { "start": { "line": 62, "column": 94 }, "end": { "line": 62, "column": 98 } }
          ],
          "line": 62
        },
        "2": {
          "loc": { "start": { "line": 93, "column": 20 }, "end": { "line": 93, "column": 48 } },
          "type": "binary-expr",
          "locations": [
            { "start": { "line": 93, "column": 20 }, "end": { "line": 93, "column": 42 } },
            { "start": { "line": 93, "column": 46 }, "end": { "line": 93, "column": 48 } }
          ],
          "line": 93
        },
        "3": {
          "loc": { "start": { "line": 97, "column": 24 }, "end": { "line": 97, "column": 91 } },
          "type": "cond-expr",
          "locations": [
            { "start": { "line": 97, "column": 51 }, "end": { "line": 97, "column": 84 } },
            { "start": { "line": 97, "column": 87 }, "end": { "line": 97, "column": 91 } }
          ],
          "line": 97
        },
        "4": {
          "loc": { "start": { "line": 98, "column": 17 }, "end": { "line": 98, "column": 74 } },
          "type": "cond-expr",
          "locations": [
            { "start": { "line": 98, "column": 39 }, "end": { "line": 98, "column": 67 } },
            { "start": { "line": 98, "column": 70 }, "end": { "line": 98, "column": 74 } }
          ],
          "line": 98
        },
        "5": {
          "loc": { "start": { "line": 107, "column": 6 }, "end": { "line": 107, "column": 91 } },
          "type": "binary-expr",
          "locations": [
            { "start": { "line": 107, "column": 6 }, "end": { "line": 107, "column": 85 } },
            { "start": { "line": 107, "column": 89 }, "end": { "line": 107, "column": 91 } }
          ],
          "line": 107
        },
        "6": {
          "loc": { "start": { "line": 117, "column": 4 }, "end": { "line": 117, "column": 91 } },
          "type": "cond-expr",
          "locations": [
            { "start": { "line": 117, "column": 14 }, "end": { "line": 117, "column": 79 } },
            { "start": { "line": 117, "column": 82 }, "end": { "line": 117, "column": 91 } }
          ],
          "line": 117
        },
        "7": {
          "loc": { "start": { "line": 117, "column": 38 }, "end": { "line": 117, "column": 78 } },
          "type": "binary-expr",
          "locations": [
            { "start": { "line": 117, "column": 38 }, "end": { "line": 117, "column": 55 } },
            { "start": { "line": 117, "column": 59 }, "end": { "line": 117, "column": 78 } }
          ],
          "line": 117
        },
        "8": {
          "loc": { "start": { "line": 119, "column": 4 }, "end": { "line": 123, "column": 17 } },
          "type": "cond-expr",
          "locations": [
            { "start": { "line": 120, "column": 8 }, "end": { "line": 122, "column": 9 } },
            { "start": { "line": 123, "column": 8 }, "end": { "line": 123, "column": 17 } }
          ],
          "line": 119
        },
        "9": {
          "loc": { "start": { "line": 121, "column": 10 }, "end": { "line": 121, "column": 78 } },
          "type": "binary-expr",
          "locations": [
            { "start": { "line": 121, "column": 10 }, "end": { "line": 121, "column": 41 } },
            { "start": { "line": 121, "column": 45 }, "end": { "line": 121, "column": 78 } }
          ],
          "line": 121
        },
        "10": {
          "loc": { "start": { "line": 140, "column": 4 }, "end": { "line": 140, "column": 82 } },
          "type": "cond-expr",
          "locations": [
            { "start": { "line": 140, "column": 31 }, "end": { "line": 140, "column": 70 } },
            { "start": { "line": 140, "column": 73 }, "end": { "line": 140, "column": 82 } }
          ],
          "line": 140
        },
        "11": {
          "loc": { "start": { "line": 142, "column": 4 }, "end": { "line": 142, "column": 86 } },
          "type": "cond-expr",
          "locations": [
            { "start": { "line": 142, "column": 31 }, "end": { "line": 142, "column": 74 } },
            { "start": { "line": 142, "column": 77 }, "end": { "line": 142, "column": 86 } }
          ],
          "line": 142
        },
        "12": {
          "loc": { "start": { "line": 144, "column": 4 }, "end": { "line": 148, "column": 17 } },
          "type": "cond-expr",
          "locations": [
            { "start": { "line": 145, "column": 8 }, "end": { "line": 147, "column": 9 } },
            { "start": { "line": 148, "column": 8 }, "end": { "line": 148, "column": 17 } }
          ],
          "line": 144
        },
        "13": {
          "loc": { "start": { "line": 150, "column": 4 }, "end": { "line": 150, "column": 89 } },
          "type": "cond-expr",
          "locations": [
            { "start": { "line": 150, "column": 30 }, "end": { "line": 150, "column": 77 } },
            { "start": { "line": 150, "column": 80 }, "end": { "line": 150, "column": 89 } }
          ],
          "line": 150
        },
        "14": {
          "loc": { "start": { "line": 152, "column": 4 }, "end": { "line": 156, "column": 17 } },
          "type": "cond-expr",
          "locations": [
            { "start": { "line": 153, "column": 8 }, "end": { "line": 155, "column": 9 } },
            { "start": { "line": 156, "column": 8 }, "end": { "line": 156, "column": 17 } }
          ],
          "line": 152
        },
        "15": {
          "loc": { "start": { "line": 176, "column": 2 }, "end": { "line": 178, "column": 3 } },
          "type": "if",
          "locations": [
            { "start": { "line": 176, "column": 2 }, "end": { "line": 178, "column": 3 } },
            { "start": {}, "end": {} }
          ],
          "line": 176
        },
        "16": {
          "loc": { "start": { "line": 186, "column": 8 }, "end": { "line": 189, "column": 55 } },
          "type": "binary-expr",
          "locations": [
            { "start": { "line": 186, "column": 8 }, "end": { "line": 186, "column": 25 } },
            { "start": { "line": 187, "column": 8 }, "end": { "line": 187, "column": 25 } },
            { "start": { "line": 188, "column": 8 }, "end": { "line": 188, "column": 27 } },
            { "start": { "line": 189, "column": 8 }, "end": { "line": 189, "column": 55 } }
          ],
          "line": 186
        },
        "17": {
          "loc": { "start": { "line": 195, "column": 15 }, "end": { "line": 195, "column": 46 } },
          "type": "binary-expr",
          "locations": [
            { "start": { "line": 195, "column": 15 }, "end": { "line": 195, "column": 38 } },
            { "start": { "line": 195, "column": 42 }, "end": { "line": 195, "column": 46 } }
          ],
          "line": 195
        },
        "18": {
          "loc": { "start": { "line": 198, "column": 17 }, "end": { "line": 198, "column": 50 } },
          "type": "binary-expr",
          "locations": [
            { "start": { "line": 198, "column": 17 }, "end": { "line": 198, "column": 42 } },
            { "start": { "line": 198, "column": 46 }, "end": { "line": 198, "column": 50 } }
          ],
          "line": 198
        },
        "19": {
          "loc": { "start": { "line": 265, "column": 23 }, "end": { "line": 265, "column": 68 } },
          "type": "binary-expr",
          "locations": [
            { "start": { "line": 265, "column": 23 }, "end": { "line": 265, "column": 62 } },
            { "start": { "line": 265, "column": 66 }, "end": { "line": 265, "column": 68 } }
          ],
          "line": 265
        },
        "20": {
          "loc": { "start": { "line": 266, "column": 22 }, "end": { "line": 266, "column": 59 } },
          "type": "binary-expr",
          "locations": [
            { "start": { "line": 266, "column": 22 }, "end": { "line": 266, "column": 53 } },
            { "start": { "line": 266, "column": 57 }, "end": { "line": 266, "column": 59 } }
          ],
          "line": 266
        }
      },
      "s": {
        "0": 17,
        "1": 5,
        "2": 17,
        "3": 21,
        "4": 17,
        "5": 17,
        "6": 119,
        "7": 459,
        "8": 679,
        "9": 92,
        "10": 17,
        "11": 17,
        "12": 23,
        "13": 1,
        "14": 17,
        "15": 19,
        "16": 19,
        "17": 19,
        "18": 19,
        "19": 19,
        "20": 19,
        "21": 19,
        "22": 19,
        "23": 19,
        "24": 19,
        "25": 19,
        "26": 17,
        "27": 13,
        "28": 17,
        "29": 17,
        "30": 17,
        "31": 17,
        "32": 17,
        "33": 17,
        "34": 17,
        "35": 11,
        "36": 17,
        "37": 6,
        "38": 6,
        "39": 6,
        "40": 17,
        "41": 6,
        "42": 13,
        "43": 6,
        "44": 7,
        "45": 4,
        "46": 4,
        "47": 4,
        "48": 10,
        "49": 2,
        "50": 2,
        "51": 2,
        "52": 17,
        "53": 4,
        "54": 17,
        "55": 6,
        "56": 17,
        "57": 4
      },
      "f": {
        "0": 5,
        "1": 21,
        "2": 17,
        "3": 679,
        "4": 23,
        "5": 1,
        "6": 19,
        "7": 19,
        "8": 19,
        "9": 19,
        "10": 19,
        "11": 19,
        "12": 19,
        "13": 19,
        "14": 19,
        "15": 19,
        "16": 19,
        "17": 13,
        "18": 17,
        "19": 17,
        "20": 17,
        "21": 17,
        "22": 17,
        "23": 11,
        "24": 6,
        "25": 6,
        "26": 6,
        "27": 6,
        "28": 13,
        "29": 4,
        "30": 10,
        "31": 2,
        "32": 2,
        "33": 2,
        "34": 4,
        "35": 6,
        "36": 4
      },
      "b": {
        "0": [92, 367],
        "1": [23, 6, 17],
        "2": [23, 22],
        "3": [5, 18],
        "4": [1, 22],
        "5": [23, 22],
        "6": [13, 6],
        "7": [13, 11],
        "8": [12, 7],
        "9": [12, 10],
        "10": [8, 9],
        "11": [8, 9],
        "12": [7, 10],
        "13": [9, 8],
        "14": [9, 8],
        "15": [6, 7],
        "16": [4, 3, 2, 1],
        "17": [10, 1],
        "18": [10, 1],
        "19": [6, 2],
        "20": [6, 2]
      },
      "inputSourceMap": null,
      "_coverageSchema": "1a1c01bbd47fc00a2c39e90264f33305004495a9",
      "hash": "d5f0f97ef02f2a8e174b6cda3072843bc4d786b2"
    },
    "/Users/dominic/Sites/defra/fcp-dal-api/app/graphql/resolvers/business/business.js": {
      "path": "/Users/dominic/Sites/defra/fcp-dal-api/app/graphql/resolvers/business/business.js",
      "statementMap": {
        "0": { "start": { "line": 13, "column": 24 }, "end": { "line": 65, "column": 1 } },
        "1": { "start": { "line": 15, "column": 4 }, "end": { "line": 15, "column": 29 } },
        "2": { "start": { "line": 20, "column": 6 }, "end": { "line": 20, "column": 79 } },
        "3": { "start": { "line": 22, "column": 4 }, "end": { "line": 22, "column": 62 } },
        "4": { "start": { "line": 27, "column": 6 }, "end": { "line": 29, "column": 7 } },
        "5": { "start": { "line": 30, "column": 4 }, "end": { "line": 30, "column": 52 } },
        "6": { "start": { "line": 35, "column": 6 }, "end": { "line": 37, "column": 7 } },
        "7": { "start": { "line": 39, "column": 21 }, "end": { "line": 39, "column": 89 } },
        "8": { "start": { "line": 39, "column": 63 }, "end": { "line": 39, "column": 88 } },
        "9": { "start": { "line": 41, "column": 4 }, "end": { "line": 49, "column": 5 } },
        "10": { "start": { "line": 42, "column": 6 }, "end": { "line": 47, "column": 8 } },
        "11": { "start": { "line": 48, "column": 6 }, "end": { "line": 48, "column": 46 } },
        "12": { "start": { "line": 51, "column": 4 }, "end": { "line": 51, "column": 50 } },
        "13": { "start": { "line": 55, "column": 23 }, "end": { "line": 55, "column": 86 } },
        "14": { "start": { "line": 57, "column": 4 }, "end": { "line": 57, "column": 42 } },
        "15": { "start": { "line": 61, "column": 25 }, "end": { "line": 61, "column": 90 } },
        "16": { "start": { "line": 63, "column": 4 }, "end": { "line": 63, "column": 46 } },
        "17": { "start": { "line": 67, "column": 32 }, "end": { "line": 74, "column": 1 } },
        "18": { "start": { "line": 69, "column": 4 }, "end": { "line": 72, "column": 5 } }
      },
      "fnMap": {
        "0": {
          "name": "(anonymous_0)",
          "decl": { "start": { "line": 14, "column": 2 }, "end": { "line": 14, "column": 3 } },
          "loc": { "start": { "line": 14, "column": 27 }, "end": { "line": 16, "column": 3 } },
          "line": 14
        },
        "1": {
          "name": "(anonymous_1)",
          "decl": { "start": { "line": 18, "column": 2 }, "end": { "line": 18, "column": 3 } },
          "loc": { "start": { "line": 18, "column": 59 }, "end": { "line": 23, "column": 3 } },
          "line": 18
        },
        "2": {
          "name": "(anonymous_2)",
          "decl": { "start": { "line": 25, "column": 2 }, "end": { "line": 25, "column": 3 } },
          "loc": { "start": { "line": 25, "column": 58 }, "end": { "line": 31, "column": 3 } },
          "line": 25
        },
        "3": {
          "name": "(anonymous_3)",
          "decl": { "start": { "line": 33, "column": 2 }, "end": { "line": 33, "column": 3 } },
          "loc": { "start": { "line": 33, "column": 68 }, "end": { "line": 52, "column": 3 } },
          "line": 33
        },
        "4": {
          "name": "(anonymous_4)",
          "decl": { "start": { "line": 39, "column": 36 }, "end": { "line": 39, "column": 37 } },
          "loc": { "start": { "line": 39, "column": 63 }, "end": { "line": 39, "column": 88 } },
          "line": 39
        },
        "5": {
          "name": "(anonymous_5)",
          "decl": { "start": { "line": 54, "column": 2 }, "end": { "line": 54, "column": 3 } },
          "loc": { "start": { "line": 54, "column": 48 }, "end": { "line": 58, "column": 3 } },
          "line": 54
        },
        "6": {
          "name": "(anonymous_6)",
          "decl": { "start": { "line": 60, "column": 2 }, "end": { "line": 60, "column": 3 } },
          "loc": { "start": { "line": 60, "column": 50 }, "end": { "line": 64, "column": 3 } },
          "line": 60
        },
        "7": {
          "name": "(anonymous_7)",
          "decl": { "start": { "line": 68, "column": 2 }, "end": { "line": 68, "column": 3 } },
          "loc": { "start": { "line": 68, "column": 62 }, "end": { "line": 73, "column": 3 } },
          "line": 68
        }
      },
      "branchMap": {
        "0": {
          "loc": { "start": { "line": 41, "column": 4 }, "end": { "line": 49, "column": 5 } },
          "type": "if",
          "locations": [
            { "start": { "line": 41, "column": 4 }, "end": { "line": 49, "column": 5 } },
            { "start": {}, "end": {} }
          ],
          "line": 41
        }
      },
      "s": {
        "0": 11,
        "1": 4,
        "2": 3,
        "3": 3,
        "4": 3,
        "5": 3,
        "6": 4,
        "7": 4,
        "8": 8,
        "9": 4,
        "10": 1,
        "11": 1,
        "12": 3,
        "13": 1,
        "14": 1,
        "15": 3,
        "16": 3,
        "17": 11,
        "18": 7
      },
      "f": { "0": 4, "1": 3, "2": 3, "3": 4, "4": 8, "5": 1, "6": 3, "7": 7 },
      "b": { "0": [1, 3] },
      "inputSourceMap": null,
      "_coverageSchema": "1a1c01bbd47fc00a2c39e90264f33305004495a9",
      "hash": "7309c00bae7120077bea5d0f7bec0c92aec46f20"
    },
    "/Users/dominic/Sites/defra/fcp-dal-api/app/graphql/resolvers/business/common.js": {
      "path": "/Users/dominic/Sites/defra/fcp-dal-api/app/graphql/resolvers/business/common.js",
      "statementMap": {
        "0": { "start": { "line": 6, "column": 45 }, "end": { "line": 20, "column": 1 } },
        "1": { "start": { "line": 7, "column": 25 }, "end": { "line": 7, "column": 98 } },
        "2": { "start": { "line": 9, "column": 4 }, "end": { "line": 9, "column": 79 } },
        "3": { "start": { "line": 10, "column": 24 }, "end": { "line": 10, "column": 73 } },
        "4": { "start": { "line": 11, "column": 21 }, "end": { "line": 11, "column": 63 } },
        "5": { "start": { "line": 12, "column": 2 }, "end": { "line": 12, "column": 95 } },
        "6": { "start": { "line": 14, "column": 2 }, "end": { "line": 19, "column": 3 } },
        "7": { "start": { "line": 22, "column": 55 }, "end": { "line": 39, "column": 1 } },
        "8": { "start": { "line": 23, "column": 25 }, "end": { "line": 23, "column": 98 } },
        "9": { "start": { "line": 25, "column": 4 }, "end": { "line": 25, "column": 79 } },
        "10": { "start": { "line": 26, "column": 34 }, "end": { "line": 26, "column": 92 } },
        "11": { "start": { "line": 27, "column": 31 }, "end": { "line": 27, "column": 83 } },
        "12": { "start": { "line": 28, "column": 2 }, "end": { "line": 31, "column": 3 } },
        "13": { "start": { "line": 33, "column": 2 }, "end": { "line": 38, "column": 3 } },
        "14": { "start": { "line": 41, "column": 32 }, "end": { "line": 45, "column": 1 } },
        "15": { "start": { "line": 42, "column": 2 }, "end": { "line": 44, "column": 3 } },
        "16": { "start": { "line": 43, "column": 4 }, "end": { "line": 43, "column": 54 } },
        "17": { "start": { "line": 47, "column": 36 }, "end": { "line": 62, "column": 1 } },
        "18": { "start": { "line": 48, "column": 2 }, "end": { "line": 48, "column": 32 } },
        "19": { "start": { "line": 50, "column": 41 }, "end": { "line": 50, "column": 46 } },
        "20": { "start": { "line": 52, "column": 25 }, "end": { "line": 52, "column": 92 } },
        "21": { "start": { "line": 54, "column": 2 }, "end": { "line": 54, "column": 94 } },
        "22": { "start": { "line": 56, "column": 2 }, "end": { "line": 61, "column": 3 } },
        "23": { "start": { "line": 64, "column": 38 }, "end": { "line": 79, "column": 1 } },
        "24": { "start": { "line": 65, "column": 2 }, "end": { "line": 65, "column": 32 } },
        "25": { "start": { "line": 67, "column": 43 }, "end": { "line": 67, "column": 48 } },
        "26": { "start": { "line": 69, "column": 25 }, "end": { "line": 69, "column": 92 } },
        "27": { "start": { "line": 71, "column": 2 }, "end": { "line": 71, "column": 98 } },
        "28": { "start": { "line": 73, "column": 2 }, "end": { "line": 78, "column": 3 } }
      },
      "fnMap": {
        "0": {
          "name": "(anonymous_0)",
          "decl": { "start": { "line": 6, "column": 45 }, "end": { "line": 6, "column": 46 } },
          "loc": { "start": { "line": 6, "column": 87 }, "end": { "line": 20, "column": 1 } },
          "line": 6
        },
        "1": {
          "name": "(anonymous_1)",
          "decl": { "start": { "line": 22, "column": 55 }, "end": { "line": 22, "column": 56 } },
          "loc": { "start": { "line": 22, "column": 97 }, "end": { "line": 39, "column": 1 } },
          "line": 22
        },
        "2": {
          "name": "(anonymous_2)",
          "decl": { "start": { "line": 41, "column": 32 }, "end": { "line": 41, "column": 33 } },
          "loc": { "start": { "line": 41, "column": 43 }, "end": { "line": 45, "column": 1 } },
          "line": 41
        },
        "3": {
          "name": "(anonymous_3)",
          "decl": { "start": { "line": 47, "column": 36 }, "end": { "line": 47, "column": 37 } },
          "loc": { "start": { "line": 47, "column": 78 }, "end": { "line": 62, "column": 1 } },
          "line": 47
        },
        "4": {
          "name": "(anonymous_4)",
          "decl": { "start": { "line": 64, "column": 38 }, "end": { "line": 64, "column": 39 } },
          "loc": { "start": { "line": 64, "column": 80 }, "end": { "line": 79, "column": 1 } },
          "line": 64
        }
      },
      "branchMap": {
        "0": {
          "loc": { "start": { "line": 42, "column": 2 }, "end": { "line": 44, "column": 3 } },
          "type": "if",
          "locations": [
            { "start": { "line": 42, "column": 2 }, "end": { "line": 44, "column": 3 } },
            { "start": {}, "end": {} }
          ],
          "line": 42
        },
        "1": {
          "loc": { "start": { "line": 42, "column": 6 }, "end": { "line": 42, "column": 34 } },
          "type": "binary-expr",
          "locations": [
            { "start": { "line": 42, "column": 6 }, "end": { "line": 42, "column": 19 } },
            { "start": { "line": 42, "column": 23 }, "end": { "line": 42, "column": 34 } }
          ],
          "line": 42
        }
      },
      "s": {
        "0": 11,
        "1": 9,
        "2": 8,
        "3": 8,
        "4": 8,
        "5": 8,
        "6": 8,
        "7": 11,
        "8": 7,
        "9": 6,
        "10": 6,
        "11": 6,
        "12": 6,
        "13": 6,
        "14": 11,
        "15": 10,
        "16": 2,
        "17": 11,
        "18": 5,
        "19": 4,
        "20": 4,
        "21": 3,
        "22": 3,
        "23": 11,
        "24": 5,
        "25": 4,
        "26": 4,
        "27": 3,
        "28": 3
      },
      "f": { "0": 9, "1": 7, "2": 10, "3": 5, "4": 5 },
      "b": { "0": [2, 8], "1": [10, 2] },
      "inputSourceMap": null,
      "_coverageSchema": "1a1c01bbd47fc00a2c39e90264f33305004495a9",
      "hash": "b15a3cc08770a4eec85ebbac69a949be20b1f605"
    },
    "/Users/dominic/Sites/defra/fcp-dal-api/app/graphql/resolvers/business/query.js": {
      "path": "/Users/dominic/Sites/defra/fcp-dal-api/app/graphql/resolvers/business/query.js",
      "statementMap": {
        "0": { "start": { "line": 3, "column": 21 }, "end": { "line": 15, "column": 1 } },
        "1": { "start": { "line": 5, "column": 18 }, "end": { "line": 5, "column": 85 } },
        "2": { "start": { "line": 6, "column": 21 }, "end": { "line": 6, "column": 87 } },
        "3": { "start": { "line": 8, "column": 21 }, "end": { "line": 8, "column": 62 } },
        "4": { "start": { "line": 9, "column": 4 }, "end": { "line": 13, "column": 5 } }
      },
      "fnMap": {
        "0": {
          "name": "(anonymous_0)",
          "decl": { "start": { "line": 4, "column": 2 }, "end": { "line": 4, "column": 3 } },
          "loc": { "start": { "line": 4, "column": 47 }, "end": { "line": 14, "column": 3 } },
          "line": 4
        }
      },
      "branchMap": {},
      "s": { "0": 12, "1": 20, "2": 20, "3": 19, "4": 19 },
      "f": { "0": 20 },
      "b": {},
      "inputSourceMap": null,
      "_coverageSchema": "1a1c01bbd47fc00a2c39e90264f33305004495a9",
      "hash": "0f9149839a9431b4202b4ae6b33493173321b9db"
    },
    "/Users/dominic/Sites/defra/fcp-dal-api/app/graphql/resolvers/business/mutation.js": {
      "path": "/Users/dominic/Sites/defra/fcp-dal-api/app/graphql/resolvers/business/mutation.js",
      "statementMap": {
        "0": { "start": { "line": 13, "column": 24 }, "end": { "line": 36, "column": 1 } },
        "1": { "start": { "line": 15, "column": 40 }, "end": { "line": 15, "column": 45 } },
        "2": { "start": { "line": 16, "column": 21 }, "end": { "line": 16, "column": 82 } },
        "3": { "start": { "line": 17, "column": 23 }, "end": { "line": 17, "column": 82 } },
        "4": { "start": { "line": 18, "column": 21 }, "end": { "line": 21, "column": 5 } },
        "5": { "start": { "line": 22, "column": 21 }, "end": { "line": 22, "column": 62 } },
        "6": { "start": { "line": 23, "column": 4 }, "end": { "line": 23, "column": 38 } },
        "7": { "start": { "line": 38, "column": 38 }, "end": { "line": 42, "column": 1 } },
        "8": { "start": { "line": 40, "column": 4 }, "end": { "line": 40, "column": 47 } }
      },
      "fnMap": {
        "0": {
          "name": "(anonymous_0)",
          "decl": { "start": { "line": 14, "column": 18 }, "end": { "line": 14, "column": 19 } },
          "loc": { "start": { "line": 14, "column": 59 }, "end": { "line": 24, "column": 3 } },
          "line": 14
        },
        "1": {
          "name": "(anonymous_1)",
          "decl": { "start": { "line": 39, "column": 2 }, "end": { "line": 39, "column": 3 } },
          "loc": { "start": { "line": 39, "column": 46 }, "end": { "line": 41, "column": 3 } },
          "line": 39
        }
      },
      "branchMap": {},
      "s": { "0": 11, "1": 3, "2": 3, "3": 3, "4": 3, "5": 3, "6": 3, "7": 11, "8": 15 },
      "f": { "0": 3, "1": 15 },
      "b": {},
      "inputSourceMap": null,
      "_coverageSchema": "1a1c01bbd47fc00a2c39e90264f33305004495a9",
      "hash": "b96f47382efbf10d72ddec356ce893d418d583b1"
    },
    "/Users/dominic/Sites/defra/fcp-dal-api/app/transformers/authenticate/question-answers.js": {
      "path": "/Users/dominic/Sites/defra/fcp-dal-api/app/transformers/authenticate/question-answers.js",
      "statementMap": {
        "0": { "start": { "line": 2, "column": 2 }, "end": { "line": 8, "column": 3 } }
      },
      "fnMap": {
        "0": {
          "name": "transformAuthenticateQuestionsAnswers",
          "decl": { "start": { "line": 1, "column": 16 }, "end": { "line": 1, "column": 53 } },
          "loc": { "start": { "line": 1, "column": 71 }, "end": { "line": 9, "column": 1 } },
          "line": 1
        }
      },
      "branchMap": {},
      "s": { "0": 6 },
      "f": { "0": 6 },
      "b": {},
      "inputSourceMap": null,
      "_coverageSchema": "1a1c01bbd47fc00a2c39e90264f33305004495a9",
      "hash": "81aba0b91f7b349b0da6648b1b3c1c3f6c9150d0"
    },
    "/Users/dominic/Sites/defra/fcp-dal-api/app/transformers/rural-payments/customer.js": {
      "path": "/Users/dominic/Sites/defra/fcp-dal-api/app/transformers/rural-payments/customer.js",
      "statementMap": {
        "0": { "start": { "line": 6, "column": 19 }, "end": { "line": 6, "column": 87 } },
        "1": { "start": { "line": 6, "column": 61 }, "end": { "line": 6, "column": 86 } },
        "2": { "start": { "line": 8, "column": 2 }, "end": { "line": 8, "column": 22 } },
        "3": { "start": { "line": 16, "column": 19 }, "end": { "line": 16, "column": 87 } },
        "4": { "start": { "line": 16, "column": 61 }, "end": { "line": 16, "column": 86 } },
        "5": { "start": { "line": 18, "column": 29 }, "end": { "line": 18, "column": 94 } },
        "6": { "start": { "line": 18, "column": 70 }, "end": { "line": 18, "column": 93 } },
        "7": { "start": { "line": 20, "column": 2 }, "end": { "line": 26, "column": 3 } },
        "8": { "start": { "line": 21, "column": 4 }, "end": { "line": 25, "column": 7 } },
        "9": { "start": { "line": 21, "column": 58 }, "end": { "line": 25, "column": 5 } },
        "10": { "start": { "line": 28, "column": 2 }, "end": { "line": 39, "column": 4 } },
        "11": { "start": { "line": 29, "column": 31 }, "end": { "line": 37, "column": 5 } },
        "12": { "start": { "line": 31, "column": 8 }, "end": { "line": 35, "column": 22 } },
        "13": { "start": { "line": 32, "column": 10 }, "end": { "line": 32, "column": 66 } },
        "14": { "start": { "line": 38, "column": 4 }, "end": { "line": 38, "column": 91 } },
        "15": { "start": { "line": 44, "column": 22 }, "end": { "line": 51, "column": 7 } },
        "16": { "start": { "line": 45, "column": 25 }, "end": { "line": 45, "column": 37 } },
        "17": { "start": { "line": 46, "column": 33 }, "end": { "line": 51, "column": 5 } },
        "18": { "start": { "line": 53, "column": 2 }, "end": { "line": 53, "column": 20 } },
        "19": { "start": { "line": 56, "column": 54 }, "end": { "line": 79, "column": 1 } },
        "20": { "start": { "line": 57, "column": 2 }, "end": { "line": 78, "column": 3 } },
        "21": { "start": { "line": 82, "column": 2 }, "end": { "line": 89, "column": 5 } },
        "22": { "start": { "line": 82, "column": 41 }, "end": { "line": 89, "column": 3 } },
        "23": { "start": { "line": 93, "column": 38 }, "end": { "line": 95, "column": 3 } },
        "24": { "start": { "line": 94, "column": 16 }, "end": { "line": 94, "column": 55 } },
        "25": { "start": { "line": 96, "column": 2 }, "end": { "line": 98, "column": 3 } },
        "26": { "start": { "line": 97, "column": 4 }, "end": { "line": 97, "column": 15 } },
        "27": { "start": { "line": 100, "column": 2 }, "end": { "line": 104, "column": 3 } },
        "28": { "start": { "line": 107, "column": 35 }, "end": { "line": 139, "column": 1 } },
        "29": { "start": { "line": 108, "column": 20 }, "end": { "line": 108, "column": 31 } },
        "30": { "start": { "line": 109, "column": 25 }, "end": { "line": 109, "column": 41 } },
        "31": { "start": { "line": 110, "column": 24 }, "end": { "line": 110, "column": 35 } },
        "32": { "start": { "line": 111, "column": 25 }, "end": { "line": 111, "column": 37 } },
        "33": { "start": { "line": 112, "column": 23 }, "end": { "line": 112, "column": 33 } },
        "34": { "start": { "line": 114, "column": 4 }, "end": { "line": 114, "column": 81 } },
        "35": { "start": { "line": 115, "column": 23 }, "end": { "line": 115, "column": 44 } },
        "36": { "start": { "line": 116, "column": 21 }, "end": { "line": 116, "column": 40 } },
        "37": { "start": { "line": 117, "column": 20 }, "end": { "line": 117, "column": 40 } },
        "38": { "start": { "line": 118, "column": 27 }, "end": { "line": 118, "column": 45 } },
        "39": { "start": { "line": 120, "column": 25 }, "end": { "line": 120, "column": 45 } },
        "40": { "start": { "line": 121, "column": 25 }, "end": { "line": 121, "column": 45 } },
        "41": { "start": { "line": 122, "column": 25 }, "end": { "line": 122, "column": 45 } },
        "42": { "start": { "line": 123, "column": 25 }, "end": { "line": 123, "column": 45 } },
        "43": { "start": { "line": 124, "column": 25 }, "end": { "line": 124, "column": 45 } },
        "44": { "start": { "line": 125, "column": 36 }, "end": { "line": 125, "column": 70 } },
        "45": { "start": { "line": 126, "column": 25 }, "end": { "line": 126, "column": 48 } },
        "46": { "start": { "line": 127, "column": 36 }, "end": { "line": 127, "column": 70 } },
        "47": { "start": { "line": 128, "column": 29 }, "end": { "line": 128, "column": 56 } },
        "48": { "start": { "line": 129, "column": 23 }, "end": { "line": 129, "column": 44 } },
        "49": { "start": { "line": 130, "column": 21 }, "end": { "line": 130, "column": 40 } },
        "50": { "start": { "line": 131, "column": 23 }, "end": { "line": 131, "column": 44 } },
        "51": { "start": { "line": 132, "column": 27 }, "end": { "line": 132, "column": 52 } },
        "52": { "start": { "line": 133, "column": 24 }, "end": { "line": 133, "column": 46 } },
        "53": { "start": { "line": 134, "column": 21 }, "end": { "line": 134, "column": 40 } },
        "54": { "start": { "line": 135, "column": 34 }, "end": { "line": 135, "column": 66 } },
        "55": { "start": { "line": 136, "column": 40 }, "end": { "line": 136, "column": 78 } },
        "56": { "start": { "line": 137, "column": 30 }, "end": { "line": 137, "column": 58 } },
        "57": { "start": { "line": 142, "column": 22 }, "end": { "line": 142, "column": 73 } },
        "58": { "start": { "line": 144, "column": 2 }, "end": { "line": 151, "column": 3 } }
      },
      "fnMap": {
        "0": {
          "name": "transformBusinessCustomerToCustomerRole",
          "decl": { "start": { "line": 5, "column": 16 }, "end": { "line": 5, "column": 55 } },
          "loc": { "start": { "line": 5, "column": 72 }, "end": { "line": 9, "column": 1 } },
          "line": 5
        },
        "1": {
          "name": "(anonymous_1)",
          "decl": { "start": { "line": 6, "column": 34 }, "end": { "line": 6, "column": 35 } },
          "loc": { "start": { "line": 6, "column": 61 }, "end": { "line": 6, "column": 86 } },
          "line": 6
        },
        "2": {
          "name": "transformBusinessCustomerToCustomerPermissionGroups",
          "decl": { "start": { "line": 11, "column": 16 }, "end": { "line": 11, "column": 67 } },
          "loc": { "start": { "line": 15, "column": 2 }, "end": { "line": 40, "column": 1 } },
          "line": 15
        },
        "3": {
          "name": "(anonymous_3)",
          "decl": { "start": { "line": 16, "column": 34 }, "end": { "line": 16, "column": 35 } },
          "loc": { "start": { "line": 16, "column": 61 }, "end": { "line": 16, "column": 86 } },
          "line": 16
        },
        "4": {
          "name": "(anonymous_4)",
          "decl": { "start": { "line": 18, "column": 55 }, "end": { "line": 18, "column": 56 } },
          "loc": { "start": { "line": 18, "column": 70 }, "end": { "line": 18, "column": 93 } },
          "line": 18
        },
        "5": {
          "name": "(anonymous_5)",
          "decl": { "start": { "line": 21, "column": 32 }, "end": { "line": 21, "column": 33 } },
          "loc": { "start": { "line": 21, "column": 58 }, "end": { "line": 25, "column": 5 } },
          "line": 21
        },
        "6": {
          "name": "(anonymous_6)",
          "decl": { "start": { "line": 28, "column": 30 }, "end": { "line": 28, "column": 31 } },
          "loc": { "start": { "line": 28, "column": 55 }, "end": { "line": 39, "column": 3 } },
          "line": 28
        },
        "7": {
          "name": "(anonymous_7)",
          "decl": { "start": { "line": 30, "column": 6 }, "end": { "line": 30, "column": 7 } },
          "loc": { "start": { "line": 31, "column": 8 }, "end": { "line": 35, "column": 22 } },
          "line": 31
        },
        "8": {
          "name": "(anonymous_8)",
          "decl": { "start": { "line": 31, "column": 46 }, "end": { "line": 31, "column": 47 } },
          "loc": { "start": { "line": 32, "column": 10 }, "end": { "line": 32, "column": 66 } },
          "line": 32
        },
        "9": {
          "name": "transformPersonSummaryToCustomerAuthorisedBusinesses",
          "decl": { "start": { "line": 42, "column": 16 }, "end": { "line": 42, "column": 68 } },
          "loc": { "start": { "line": 42, "column": 90 }, "end": { "line": 54, "column": 1 } },
          "line": 42
        },
        "10": {
          "name": "(anonymous_10)",
          "decl": { "start": { "line": 45, "column": 12 }, "end": { "line": 45, "column": 13 } },
          "loc": { "start": { "line": 45, "column": 25 }, "end": { "line": 45, "column": 37 } },
          "line": 45
        },
        "11": {
          "name": "(anonymous_11)",
          "decl": { "start": { "line": 46, "column": 9 }, "end": { "line": 46, "column": 10 } },
          "loc": { "start": { "line": 46, "column": 33 }, "end": { "line": 51, "column": 5 } },
          "line": 46
        },
        "12": {
          "name": "(anonymous_12)",
          "decl": { "start": { "line": 56, "column": 54 }, "end": { "line": 56, "column": 55 } },
          "loc": { "start": { "line": 56, "column": 64 }, "end": { "line": 79, "column": 1 } },
          "line": 56
        },
        "13": {
          "name": "transformNotificationsToMessages",
          "decl": { "start": { "line": 81, "column": 16 }, "end": { "line": 81, "column": 48 } },
          "loc": { "start": { "line": 81, "column": 69 }, "end": { "line": 90, "column": 1 } },
          "line": 81
        },
        "14": {
          "name": "(anonymous_14)",
          "decl": { "start": { "line": 82, "column": 27 }, "end": { "line": 82, "column": 28 } },
          "loc": { "start": { "line": 82, "column": 41 }, "end": { "line": 89, "column": 3 } },
          "line": 82
        },
        "15": {
          "name": "transformPersonSummaryToCustomerAuthorisedFilteredBusiness",
          "decl": { "start": { "line": 92, "column": 16 }, "end": { "line": 92, "column": 74 } },
          "loc": { "start": { "line": 92, "column": 96 }, "end": { "line": 105, "column": 1 } },
          "line": 92
        },
        "16": {
          "name": "(anonymous_16)",
          "decl": { "start": { "line": 94, "column": 4 }, "end": { "line": 94, "column": 5 } },
          "loc": { "start": { "line": 94, "column": 16 }, "end": { "line": 94, "column": 55 } },
          "line": 94
        },
        "17": {
          "name": "(anonymous_17)",
          "decl": { "start": { "line": 108, "column": 9 }, "end": { "line": 108, "column": 10 } },
          "loc": { "start": { "line": 108, "column": 20 }, "end": { "line": 108, "column": 31 } },
          "line": 108
        },
        "18": {
          "name": "(anonymous_18)",
          "decl": { "start": { "line": 109, "column": 14 }, "end": { "line": 109, "column": 15 } },
          "loc": { "start": { "line": 109, "column": 25 }, "end": { "line": 109, "column": 41 } },
          "line": 109
        },
        "19": {
          "name": "(anonymous_19)",
          "decl": { "start": { "line": 110, "column": 13 }, "end": { "line": 110, "column": 14 } },
          "loc": { "start": { "line": 110, "column": 24 }, "end": { "line": 110, "column": 35 } },
          "line": 110
        },
        "20": {
          "name": "(anonymous_20)",
          "decl": { "start": { "line": 111, "column": 14 }, "end": { "line": 111, "column": 15 } },
          "loc": { "start": { "line": 111, "column": 25 }, "end": { "line": 111, "column": 37 } },
          "line": 111
        },
        "21": {
          "name": "(anonymous_21)",
          "decl": { "start": { "line": 112, "column": 12 }, "end": { "line": 112, "column": 13 } },
          "loc": { "start": { "line": 112, "column": 23 }, "end": { "line": 112, "column": 33 } },
          "line": 112
        },
        "22": {
          "name": "(anonymous_22)",
          "decl": { "start": { "line": 113, "column": 15 }, "end": { "line": 113, "column": 16 } },
          "loc": { "start": { "line": 114, "column": 4 }, "end": { "line": 114, "column": 81 } },
          "line": 114
        },
        "23": {
          "name": "(anonymous_23)",
          "decl": { "start": { "line": 115, "column": 12 }, "end": { "line": 115, "column": 13 } },
          "loc": { "start": { "line": 115, "column": 23 }, "end": { "line": 115, "column": 44 } },
          "line": 115
        },
        "24": {
          "name": "(anonymous_24)",
          "decl": { "start": { "line": 116, "column": 10 }, "end": { "line": 116, "column": 11 } },
          "loc": { "start": { "line": 116, "column": 21 }, "end": { "line": 116, "column": 40 } },
          "line": 116
        },
        "25": {
          "name": "(anonymous_25)",
          "decl": { "start": { "line": 117, "column": 9 }, "end": { "line": 117, "column": 10 } },
          "loc": { "start": { "line": 117, "column": 20 }, "end": { "line": 117, "column": 40 } },
          "line": 117
        },
        "26": {
          "name": "(anonymous_26)",
          "decl": { "start": { "line": 118, "column": 16 }, "end": { "line": 118, "column": 17 } },
          "loc": { "start": { "line": 118, "column": 27 }, "end": { "line": 118, "column": 45 } },
          "line": 118
        },
        "27": {
          "name": "(anonymous_27)",
          "decl": { "start": { "line": 120, "column": 14 }, "end": { "line": 120, "column": 15 } },
          "loc": { "start": { "line": 120, "column": 25 }, "end": { "line": 120, "column": 45 } },
          "line": 120
        },
        "28": {
          "name": "(anonymous_28)",
          "decl": { "start": { "line": 121, "column": 14 }, "end": { "line": 121, "column": 15 } },
          "loc": { "start": { "line": 121, "column": 25 }, "end": { "line": 121, "column": 45 } },
          "line": 121
        },
        "29": {
          "name": "(anonymous_29)",
          "decl": { "start": { "line": 122, "column": 14 }, "end": { "line": 122, "column": 15 } },
          "loc": { "start": { "line": 122, "column": 25 }, "end": { "line": 122, "column": 45 } },
          "line": 122
        },
        "30": {
          "name": "(anonymous_30)",
          "decl": { "start": { "line": 123, "column": 14 }, "end": { "line": 123, "column": 15 } },
          "loc": { "start": { "line": 123, "column": 25 }, "end": { "line": 123, "column": 45 } },
          "line": 123
        },
        "31": {
          "name": "(anonymous_31)",
          "decl": { "start": { "line": 124, "column": 14 }, "end": { "line": 124, "column": 15 } },
          "loc": { "start": { "line": 124, "column": 25 }, "end": { "line": 124, "column": 45 } },
          "line": 124
        },
        "32": {
          "name": "(anonymous_32)",
          "decl": { "start": { "line": 125, "column": 25 }, "end": { "line": 125, "column": 26 } },
          "loc": { "start": { "line": 125, "column": 36 }, "end": { "line": 125, "column": 70 } },
          "line": 125
        },
        "33": {
          "name": "(anonymous_33)",
          "decl": { "start": { "line": 126, "column": 14 }, "end": { "line": 126, "column": 15 } },
          "loc": { "start": { "line": 126, "column": 25 }, "end": { "line": 126, "column": 48 } },
          "line": 126
        },
        "34": {
          "name": "(anonymous_34)",
          "decl": { "start": { "line": 127, "column": 25 }, "end": { "line": 127, "column": 26 } },
          "loc": { "start": { "line": 127, "column": 36 }, "end": { "line": 127, "column": 70 } },
          "line": 127
        },
        "35": {
          "name": "(anonymous_35)",
          "decl": { "start": { "line": 128, "column": 18 }, "end": { "line": 128, "column": 19 } },
          "loc": { "start": { "line": 128, "column": 29 }, "end": { "line": 128, "column": 56 } },
          "line": 128
        },
        "36": {
          "name": "(anonymous_36)",
          "decl": { "start": { "line": 129, "column": 12 }, "end": { "line": 129, "column": 13 } },
          "loc": { "start": { "line": 129, "column": 23 }, "end": { "line": 129, "column": 44 } },
          "line": 129
        },
        "37": {
          "name": "(anonymous_37)",
          "decl": { "start": { "line": 130, "column": 10 }, "end": { "line": 130, "column": 11 } },
          "loc": { "start": { "line": 130, "column": 21 }, "end": { "line": 130, "column": 40 } },
          "line": 130
        },
        "38": {
          "name": "(anonymous_38)",
          "decl": { "start": { "line": 131, "column": 12 }, "end": { "line": 131, "column": 13 } },
          "loc": { "start": { "line": 131, "column": 23 }, "end": { "line": 131, "column": 44 } },
          "line": 131
        },
        "39": {
          "name": "(anonymous_39)",
          "decl": { "start": { "line": 132, "column": 16 }, "end": { "line": 132, "column": 17 } },
          "loc": { "start": { "line": 132, "column": 27 }, "end": { "line": 132, "column": 52 } },
          "line": 132
        },
        "40": {
          "name": "(anonymous_40)",
          "decl": { "start": { "line": 133, "column": 13 }, "end": { "line": 133, "column": 14 } },
          "loc": { "start": { "line": 133, "column": 24 }, "end": { "line": 133, "column": 46 } },
          "line": 133
        },
        "41": {
          "name": "(anonymous_41)",
          "decl": { "start": { "line": 134, "column": 10 }, "end": { "line": 134, "column": 11 } },
          "loc": { "start": { "line": 134, "column": 21 }, "end": { "line": 134, "column": 40 } },
          "line": 134
        },
        "42": {
          "name": "(anonymous_42)",
          "decl": { "start": { "line": 135, "column": 23 }, "end": { "line": 135, "column": 24 } },
          "loc": { "start": { "line": 135, "column": 34 }, "end": { "line": 135, "column": 66 } },
          "line": 135
        },
        "43": {
          "name": "(anonymous_43)",
          "decl": { "start": { "line": 136, "column": 29 }, "end": { "line": 136, "column": 30 } },
          "loc": { "start": { "line": 136, "column": 40 }, "end": { "line": 136, "column": 78 } },
          "line": 136
        },
        "44": {
          "name": "(anonymous_44)",
          "decl": { "start": { "line": 137, "column": 19 }, "end": { "line": 137, "column": 20 } },
          "loc": { "start": { "line": 137, "column": 30 }, "end": { "line": 137, "column": 58 } },
          "line": 137
        },
        "45": {
          "name": "transformCustomerUpdateInputToPersonUpdate",
          "decl": { "start": { "line": 141, "column": 16 }, "end": { "line": 141, "column": 58 } },
          "loc": { "start": { "line": 141, "column": 74 }, "end": { "line": 152, "column": 1 } },
          "line": 141
        }
      },
      "branchMap": {
        "0": {
          "loc": { "start": { "line": 20, "column": 2 }, "end": { "line": 26, "column": 3 } },
          "type": "if",
          "locations": [
            { "start": { "line": 20, "column": 2 }, "end": { "line": 26, "column": 3 } },
            { "start": {}, "end": {} }
          ],
          "line": 20
        },
        "1": {
          "loc": { "start": { "line": 31, "column": 8 }, "end": { "line": 35, "column": 22 } },
          "type": "cond-expr",
          "locations": [
            { "start": { "line": 34, "column": 12 }, "end": { "line": 34, "column": 29 } },
            { "start": { "line": 35, "column": 12 }, "end": { "line": 35, "column": 22 } }
          ],
          "line": 31
        },
        "2": {
          "loc": { "start": { "line": 81, "column": 49 }, "end": { "line": 81, "column": 67 } },
          "type": "default-arg",
          "locations": [
            { "start": { "line": 81, "column": 65 }, "end": { "line": 81, "column": 67 } }
          ],
          "line": 81
        },
        "3": {
          "loc": { "start": { "line": 96, "column": 2 }, "end": { "line": 98, "column": 3 } },
          "type": "if",
          "locations": [
            { "start": { "line": 96, "column": 2 }, "end": { "line": 98, "column": 3 } },
            { "start": {}, "end": {} }
          ],
          "line": 96
        },
        "4": {
          "loc": { "start": { "line": 114, "column": 4 }, "end": { "line": 114, "column": 81 } },
          "type": "cond-expr",
          "locations": [
            { "start": { "line": 114, "column": 24 }, "end": { "line": 114, "column": 61 } },
            { "start": { "line": 114, "column": 64 }, "end": { "line": 114, "column": 81 } }
          ],
          "line": 114
        }
      },
      "s": {
        "0": 6,
        "1": 6,
        "2": 6,
        "3": 53,
        "4": 52,
        "5": 53,
        "6": 62,
        "7": 53,
        "8": 2,
        "9": 14,
        "10": 51,
        "11": 357,
        "12": 1377,
        "13": 2216,
        "14": 357,
        "15": 5,
        "16": 9,
        "17": 9,
        "18": 5,
        "19": 14,
        "20": 7,
        "21": 6,
        "22": 8,
        "23": 6,
        "24": 6,
        "25": 6,
        "26": 2,
        "27": 4,
        "28": 14,
        "29": 28,
        "30": 28,
        "31": 28,
        "32": 28,
        "33": 28,
        "34": 28,
        "35": 28,
        "36": 28,
        "37": 28,
        "38": 28,
        "39": 28,
        "40": 28,
        "41": 28,
        "42": 28,
        "43": 28,
        "44": 28,
        "45": 28,
        "46": 28,
        "47": 28,
        "48": 28,
        "49": 28,
        "50": 28,
        "51": 28,
        "52": 28,
        "53": 28,
        "54": 28,
        "55": 28,
        "56": 28,
        "57": 28,
        "58": 28
      },
      "f": {
        "0": 6,
        "1": 6,
        "2": 53,
        "3": 52,
        "4": 62,
        "5": 14,
        "6": 357,
        "7": 1377,
        "8": 2216,
        "9": 5,
        "10": 9,
        "11": 9,
        "12": 7,
        "13": 6,
        "14": 8,
        "15": 6,
        "16": 6,
        "17": 28,
        "18": 28,
        "19": 28,
        "20": 28,
        "21": 28,
        "22": 28,
        "23": 28,
        "24": 28,
        "25": 28,
        "26": 28,
        "27": 28,
        "28": 28,
        "29": 28,
        "30": 28,
        "31": 28,
        "32": 28,
        "33": 28,
        "34": 28,
        "35": 28,
        "36": 28,
        "37": 28,
        "38": 28,
        "39": 28,
        "40": 28,
        "41": 28,
        "42": 28,
        "43": 28,
        "44": 28,
        "45": 28
      },
      "b": { "0": [2, 51], "1": [56, 1321], "2": [1], "3": [2, 4], "4": [3, 25] },
      "inputSourceMap": null,
      "_coverageSchema": "1a1c01bbd47fc00a2c39e90264f33305004495a9",
      "hash": "9cb4e687d8005f3acc0369481a1b916cec57ac40"
    },
    "/Users/dominic/Sites/defra/fcp-dal-api/app/graphql/resolvers/customer/customer.js": {
      "path": "/Users/dominic/Sites/defra/fcp-dal-api/app/graphql/resolvers/customer/customer.js",
      "statementMap": {
        "0": { "start": { "line": 12, "column": 24 }, "end": { "line": 37, "column": 1 } },
        "1": { "start": { "line": 14, "column": 21 }, "end": { "line": 14, "column": 90 } },
        "2": { "start": { "line": 15, "column": 4 }, "end": { "line": 15, "column": 59 } },
        "3": { "start": { "line": 19, "column": 20 }, "end": { "line": 19, "column": 99 } },
        "4": { "start": { "line": 21, "column": 4 }, "end": { "line": 24, "column": 5 } },
        "5": { "start": { "line": 28, "column": 20 }, "end": { "line": 28, "column": 99 } },
        "6": { "start": { "line": 30, "column": 4 }, "end": { "line": 30, "column": 91 } },
        "7": { "start": { "line": 34, "column": 20 }, "end": { "line": 34, "column": 92 } },
        "8": { "start": { "line": 35, "column": 4 }, "end": { "line": 35, "column": 57 } },
        "9": { "start": { "line": 39, "column": 32 }, "end": { "line": 77, "column": 1 } },
        "10": { "start": { "line": 42, "column": 6 }, "end": { "line": 44, "column": 7 } },
        "11": { "start": { "line": 45, "column": 4 }, "end": { "line": 45, "column": 74 } },
        "12": { "start": { "line": 49, "column": 4 }, "end": { "line": 51, "column": 5 } },
        "13": { "start": { "line": 50, "column": 6 }, "end": { "line": 50, "column": 43 } },
        "14": { "start": { "line": 54, "column": 6 }, "end": { "line": 58, "column": 7 } },
        "15": { "start": { "line": 60, "column": 4 }, "end": { "line": 60, "column": 58 } },
        "16": { "start": { "line": 65, "column": 6 }, "end": { "line": 67, "column": 7 } },
        "17": { "start": { "line": 69, "column": 29 }, "end": { "line": 69, "column": 74 } },
        "18": { "start": { "line": 71, "column": 4 }, "end": { "line": 75, "column": 5 } }
      },
      "fnMap": {
        "0": {
          "name": "(anonymous_0)",
          "decl": { "start": { "line": 13, "column": 2 }, "end": { "line": 13, "column": 3 } },
          "loc": { "start": { "line": 13, "column": 48 }, "end": { "line": 16, "column": 3 } },
          "line": 13
        },
        "1": {
          "name": "(anonymous_1)",
          "decl": { "start": { "line": 18, "column": 2 }, "end": { "line": 18, "column": 3 } },
          "loc": { "start": { "line": 18, "column": 62 }, "end": { "line": 25, "column": 3 } },
          "line": 18
        },
        "2": {
          "name": "(anonymous_2)",
          "decl": { "start": { "line": 27, "column": 2 }, "end": { "line": 27, "column": 3 } },
          "loc": { "start": { "line": 27, "column": 59 }, "end": { "line": 31, "column": 3 } },
          "line": 27
        },
        "3": {
          "name": "(anonymous_3)",
          "decl": { "start": { "line": 33, "column": 2 }, "end": { "line": 33, "column": 3 } },
          "loc": { "start": { "line": 33, "column": 62 }, "end": { "line": 36, "column": 3 } },
          "line": 33
        },
        "4": {
          "name": "(anonymous_4)",
          "decl": { "start": { "line": 40, "column": 2 }, "end": { "line": 40, "column": 3 } },
          "loc": { "start": { "line": 40, "column": 59 }, "end": { "line": 46, "column": 3 } },
          "line": 40
        },
        "5": {
          "name": "(anonymous_5)",
          "decl": { "start": { "line": 48, "column": 2 }, "end": { "line": 48, "column": 3 } },
          "loc": { "start": { "line": 48, "column": 78 }, "end": { "line": 61, "column": 3 } },
          "line": 48
        },
        "6": {
          "name": "(anonymous_6)",
          "decl": { "start": { "line": 63, "column": 2 }, "end": { "line": 63, "column": 3 } },
          "loc": { "start": { "line": 63, "column": 71 }, "end": { "line": 76, "column": 3 } },
          "line": 63
        }
      },
      "branchMap": {
        "0": {
          "loc": { "start": { "line": 49, "column": 4 }, "end": { "line": 51, "column": 5 } },
          "type": "if",
          "locations": [
            { "start": { "line": 49, "column": 4 }, "end": { "line": 51, "column": 5 } },
            { "start": {}, "end": {} }
          ],
          "line": 49
        }
      },
      "s": {
        "0": 11,
        "1": 7,
        "2": 7,
        "3": 4,
        "4": 4,
        "5": 3,
        "6": 3,
        "7": 3,
        "8": 3,
        "9": 11,
        "10": 5,
        "11": 5,
        "12": 5,
        "13": 2,
        "14": 4,
        "15": 4,
        "16": 4,
        "17": 4,
        "18": 4
      },
      "f": { "0": 7, "1": 4, "2": 3, "3": 3, "4": 5, "5": 5, "6": 4 },
      "b": { "0": [2, 3] },
      "inputSourceMap": null,
      "_coverageSchema": "1a1c01bbd47fc00a2c39e90264f33305004495a9",
      "hash": "3e64475c1ef813073568d26286a09c92690e41a1"
    },
    "/Users/dominic/Sites/defra/fcp-dal-api/app/graphql/resolvers/customer/mutation.js": {
      "path": "/Users/dominic/Sites/defra/fcp-dal-api/app/graphql/resolvers/customer/mutation.js",
      "statementMap": {
        "0": { "start": { "line": 4, "column": 19 }, "end": { "line": 4, "column": 86 } },
        "1": { "start": { "line": 6, "column": 17 }, "end": { "line": 6, "column": 86 } },
        "2": { "start": { "line": 8, "column": 2 }, "end": { "line": 11, "column": 3 } },
        "3": { "start": { "line": 13, "column": 2 }, "end": { "line": 16, "column": 3 } },
        "4": { "start": { "line": 19, "column": 24 }, "end": { "line": 26, "column": 1 } }
      },
      "fnMap": {
        "0": {
          "name": "updateCustomerResolver",
          "decl": { "start": { "line": 3, "column": 15 }, "end": { "line": 3, "column": 37 } },
          "loc": { "start": { "line": 3, "column": 69 }, "end": { "line": 17, "column": 1 } },
          "line": 3
        }
      },
      "branchMap": {},
      "s": { "0": 21, "1": 21, "2": 21, "3": 21, "4": 11 },
      "f": { "0": 21 },
      "b": {},
      "inputSourceMap": null,
      "_coverageSchema": "1a1c01bbd47fc00a2c39e90264f33305004495a9",
      "hash": "9562b80b0dec7f8117cdc8ba0e2a85b95171a1ef"
    },
    "/Users/dominic/Sites/defra/fcp-dal-api/app/graphql/resolvers/customer/query.js": {
      "path": "/Users/dominic/Sites/defra/fcp-dal-api/app/graphql/resolvers/customer/query.js",
      "statementMap": {
        "0": { "start": { "line": 1, "column": 21 }, "end": { "line": 6, "column": 1 } },
        "1": { "start": { "line": 3, "column": 21 }, "end": { "line": 3, "column": 82 } },
        "2": { "start": { "line": 4, "column": 4 }, "end": { "line": 4, "column": 28 } }
      },
      "fnMap": {
        "0": {
          "name": "(anonymous_0)",
          "decl": { "start": { "line": 2, "column": 2 }, "end": { "line": 2, "column": 3 } },
          "loc": { "start": { "line": 2, "column": 47 }, "end": { "line": 5, "column": 3 } },
          "line": 2
        }
      },
      "branchMap": {},
      "s": { "0": 11, "1": 3, "2": 3 },
      "f": { "0": 3 },
      "b": {},
      "inputSourceMap": null,
      "_coverageSchema": "1a1c01bbd47fc00a2c39e90264f33305004495a9",
      "hash": "149b21ceac345a757ab03eefcacb3b856ba725b4"
    },
    "/Users/dominic/Sites/defra/fcp-dal-api/app/transformers/rural-payments/permissions.js": {
      "path": "/Users/dominic/Sites/defra/fcp-dal-api/app/transformers/rural-payments/permissions.js",
      "statementMap": {
        "0": { "start": { "line": 6, "column": 2 }, "end": { "line": 6, "column": 23 } },
        "1": { "start": { "line": 8, "column": 25 }, "end": { "line": 10, "column": 3 } },
        "2": { "start": { "line": 9, "column": 4 }, "end": { "line": 9, "column": 81 } },
        "3": { "start": { "line": 12, "column": 2 }, "end": { "line": 19, "column": 3 } },
        "4": { "start": { "line": 13, "column": 29 }, "end": { "line": 15, "column": 5 } },
        "5": { "start": { "line": 14, "column": 6 }, "end": { "line": 14, "column": 51 } },
        "6": { "start": { "line": 16, "column": 4 }, "end": { "line": 18, "column": 5 } },
        "7": { "start": { "line": 17, "column": 6 }, "end": { "line": 17, "column": 29 } },
        "8": { "start": { "line": 21, "column": 2 }, "end": { "line": 21, "column": 13 } }
      },
      "fnMap": {
        "0": {
          "name": "transformOrganisationAuthorisationToCustomerBusinessPermissionLevel",
          "decl": { "start": { "line": 1, "column": 16 }, "end": { "line": 1, "column": 83 } },
          "loc": { "start": { "line": 5, "column": 2 }, "end": { "line": 22, "column": 1 } },
          "line": 5
        },
        "1": {
          "name": "(anonymous_1)",
          "decl": { "start": { "line": 8, "column": 46 }, "end": { "line": 8, "column": 47 } },
          "loc": { "start": { "line": 9, "column": 4 }, "end": { "line": 9, "column": 81 } },
          "line": 9
        },
        "2": {
          "name": "(anonymous_2)",
          "decl": { "start": { "line": 13, "column": 49 }, "end": { "line": 13, "column": 50 } },
          "loc": { "start": { "line": 14, "column": 6 }, "end": { "line": 14, "column": 51 } },
          "line": 14
        }
      },
      "branchMap": {
        "0": {
          "loc": { "start": { "line": 9, "column": 4 }, "end": { "line": 9, "column": 81 } },
          "type": "cond-expr",
          "locations": [
            { "start": { "line": 9, "column": 49 }, "end": { "line": 9, "column": 76 } },
            { "start": { "line": 9, "column": 79 }, "end": { "line": 9, "column": 81 } }
          ],
          "line": 9
        },
        "1": {
          "loc": { "start": { "line": 16, "column": 4 }, "end": { "line": 18, "column": 5 } },
          "type": "if",
          "locations": [
            { "start": { "line": 16, "column": 4 }, "end": { "line": 18, "column": 5 } },
            { "start": {}, "end": {} }
          ],
          "line": 16
        }
      },
      "s": { "0": 3, "1": 3, "2": 15, "3": 3, "4": 2, "5": 3, "6": 2, "7": 2, "8": 1 },
      "f": { "0": 3, "1": 15, "2": 3 },
      "b": { "0": [3, 12], "1": [2, 0] },
      "inputSourceMap": null,
      "_coverageSchema": "1a1c01bbd47fc00a2c39e90264f33305004495a9",
      "hash": "c06ba269beb479af762320cd05d1de915d883c02"
    },
    "/Users/dominic/Sites/defra/fcp-dal-api/app/graphql/resolvers/permissions/query.js": {
      "path": "/Users/dominic/Sites/defra/fcp-dal-api/app/graphql/resolvers/permissions/query.js",
      "statementMap": {
        "0": { "start": { "line": 3, "column": 21 }, "end": { "line": 7, "column": 1 } },
        "1": { "start": { "line": 5, "column": 4 }, "end": { "line": 5, "column": 56 } },
        "2": { "start": { "line": 9, "column": 26 }, "end": { "line": 29, "column": 1 } },
        "3": { "start": { "line": 11, "column": 35 }, "end": { "line": 14, "column": 6 } },
        "4": { "start": { "line": 17, "column": 6 }, "end": { "line": 19, "column": 7 } },
        "5": { "start": { "line": 21, "column": 4 }, "end": { "line": 27, "column": 5 } }
      },
      "fnMap": {
        "0": {
          "name": "(anonymous_0)",
          "decl": { "start": { "line": 4, "column": 2 }, "end": { "line": 4, "column": 3 } },
          "loc": { "start": { "line": 4, "column": 49 }, "end": { "line": 6, "column": 3 } },
          "line": 4
        },
        "1": {
          "name": "(anonymous_1)",
          "decl": { "start": { "line": 10, "column": 2 }, "end": { "line": 10, "column": 3 } },
          "loc": { "start": { "line": 10, "column": 63 }, "end": { "line": 28, "column": 3 } },
          "line": 10
        }
      },
      "branchMap": {},
      "s": { "0": 11, "1": 1, "2": 11, "3": 1, "4": 1, "5": 1 },
      "f": { "0": 1, "1": 1 },
      "b": {},
      "inputSourceMap": null,
      "_coverageSchema": "1a1c01bbd47fc00a2c39e90264f33305004495a9",
      "hash": "91dd275093f7d4502b5888833b46fb6ed2317a0a"
    },
    "/Users/dominic/Sites/defra/fcp-dal-api/app/graphql/schema.js": {
      "path": "/Users/dominic/Sites/defra/fcp-dal-api/app/graphql/schema.js",
      "statementMap": {
        "0": { "start": { "line": 22, "column": 2 }, "end": { "line": 25, "column": 4 } },
        "1": { "start": { "line": 24, "column": 39 }, "end": { "line": 24, "column": 70 } },
        "2": { "start": { "line": 29, "column": 15 }, "end": { "line": 41, "column": 4 } },
        "3": { "start": { "line": 43, "column": 2 }, "end": { "line": 45, "column": 3 } },
        "4": { "start": { "line": 44, "column": 4 }, "end": { "line": 44, "column": 43 } },
        "5": { "start": { "line": 46, "column": 2 }, "end": { "line": 53, "column": 3 } },
        "6": { "start": { "line": 47, "column": 4 }, "end": { "line": 47, "column": 45 } },
        "7": { "start": { "line": 48, "column": 9 }, "end": { "line": 53, "column": 3 } },
        "8": { "start": { "line": 49, "column": 4 }, "end": { "line": 52, "column": 5 } },
        "9": { "start": { "line": 55, "column": 2 }, "end": { "line": 55, "column": 45 } },
        "10": { "start": { "line": 57, "column": 2 }, "end": { "line": 61, "column": 4 } },
        "11": { "start": { "line": 60, "column": 6 }, "end": { "line": 60, "column": 78 } },
        "12": { "start": { "line": 63, "column": 2 }, "end": { "line": 63, "column": 30 } },
        "13": { "start": { "line": 65, "column": 2 }, "end": { "line": 65, "column": 15 } }
      },
      "fnMap": {
        "0": {
          "name": "getFiles",
          "decl": { "start": { "line": 21, "column": 15 }, "end": { "line": 21, "column": 23 } },
          "loc": { "start": { "line": 21, "column": 30 }, "end": { "line": 26, "column": 1 } },
          "line": 21
        },
        "1": {
          "name": "(anonymous_1)",
          "decl": { "start": { "line": 24, "column": 19 }, "end": { "line": 24, "column": 20 } },
          "loc": { "start": { "line": 24, "column": 39 }, "end": { "line": 24, "column": 70 } },
          "line": 24
        },
        "2": {
          "name": "createSchema",
          "decl": { "start": { "line": 28, "column": 22 }, "end": { "line": 28, "column": 34 } },
          "loc": { "start": { "line": 28, "column": 37 }, "end": { "line": 66, "column": 1 } },
          "line": 28
        },
        "3": {
          "name": "(anonymous_3)",
          "decl": { "start": { "line": 59, "column": 21 }, "end": { "line": 59, "column": 22 } },
          "loc": { "start": { "line": 60, "column": 6 }, "end": { "line": 60, "column": 78 } },
          "line": 60
        }
      },
      "branchMap": {
        "0": {
          "loc": { "start": { "line": 43, "column": 2 }, "end": { "line": 45, "column": 3 } },
          "type": "if",
          "locations": [
            { "start": { "line": 43, "column": 2 }, "end": { "line": 45, "column": 3 } },
            { "start": {}, "end": {} }
          ],
          "line": 43
        },
        "1": {
          "loc": { "start": { "line": 46, "column": 2 }, "end": { "line": 53, "column": 3 } },
          "type": "if",
          "locations": [
            { "start": { "line": 46, "column": 2 }, "end": { "line": 53, "column": 3 } },
            { "start": { "line": 48, "column": 9 }, "end": { "line": 53, "column": 3 } }
          ],
          "line": 46
        },
        "2": {
          "loc": { "start": { "line": 48, "column": 9 }, "end": { "line": 53, "column": 3 } },
          "type": "if",
          "locations": [
            { "start": { "line": 48, "column": 9 }, "end": { "line": 53, "column": 3 } },
            { "start": {}, "end": {} }
          ],
          "line": 48
        }
      },
      "s": {
        "0": 35,
        "1": 0,
        "2": 35,
        "3": 35,
        "4": 2,
        "5": 35,
        "6": 2,
        "7": 33,
        "8": 0,
        "9": 35,
        "10": 35,
        "11": 280,
        "12": 35,
        "13": 35
      },
      "f": { "0": 35, "1": 0, "2": 35, "3": 280 },
      "b": { "0": [2, 33], "1": [2, 33], "2": [0, 33] },
      "inputSourceMap": null,
      "_coverageSchema": "1a1c01bbd47fc00a2c39e90264f33305004495a9",
      "hash": "774617ef4ecf277d54b59d1247795f0d89594e30"
    },
    "/Users/dominic/Sites/defra/fcp-dal-api/app/graphql/server.js": {
      "path": "/Users/dominic/Sites/defra/fcp-dal-api/app/graphql/server.js",
      "statementMap": {
        "0": { "start": { "line": 7, "column": 22 }, "end": { "line": 7, "column": 42 } },
        "1": { "start": { "line": 9, "column": 39 }, "end": { "line": 15, "column": 1 } },
        "2": { "start": { "line": 10, "column": 2 }, "end": { "line": 12, "column": 3 } },
        "3": { "start": { "line": 11, "column": 4 }, "end": { "line": 11, "column": 54 } },
        "4": { "start": { "line": 14, "column": 2 }, "end": { "line": 14, "column": 48 } },
        "5": { "start": { "line": 17, "column": 28 }, "end": { "line": 21, "column": 2 } }
      },
      "fnMap": {
        "0": {
          "name": "(anonymous_0)",
          "decl": { "start": { "line": 9, "column": 39 }, "end": { "line": 9, "column": 40 } },
          "loc": { "start": { "line": 9, "column": 45 }, "end": { "line": 15, "column": 1 } },
          "line": 9
        }
      },
      "branchMap": {
        "0": {
          "loc": { "start": { "line": 10, "column": 2 }, "end": { "line": 12, "column": 3 } },
          "type": "if",
          "locations": [
            { "start": { "line": 10, "column": 2 }, "end": { "line": 12, "column": 3 } },
            { "start": {}, "end": {} }
          ],
          "line": 10
        }
      },
      "s": { "0": 4, "1": 4, "2": 6, "3": 4, "4": 2, "5": 4 },
      "f": { "0": 6 },
      "b": { "0": [4, 2] },
      "inputSourceMap": null,
      "_coverageSchema": "1a1c01bbd47fc00a2c39e90264f33305004495a9",
      "hash": "d305847aba384b63af2b52e18d42f3b928b8b17d"
    },
    "/Users/dominic/Sites/defra/fcp-dal-api/app/routes/health.js": {
      "path": "/Users/dominic/Sites/defra/fcp-dal-api/app/routes/health.js",
      "statementMap": {
        "0": { "start": { "line": 1, "column": 27 }, "end": { "line": 7, "column": 1 } },
        "1": { "start": { "line": 5, "column": 4 }, "end": { "line": 5, "column": 37 } }
      },
      "fnMap": {
        "0": {
          "name": "(anonymous_0)",
          "decl": { "start": { "line": 4, "column": 11 }, "end": { "line": 4, "column": 12 } },
          "loc": { "start": { "line": 4, "column": 28 }, "end": { "line": 6, "column": 3 } },
          "line": 4
        }
      },
      "branchMap": {},
      "s": { "0": 4, "1": 2 },
      "f": { "0": 2 },
      "b": {},
      "inputSourceMap": null,
      "_coverageSchema": "1a1c01bbd47fc00a2c39e90264f33305004495a9",
      "hash": "e93496317128529bf0f1979f33aef2428674d0ec"
    },
    "/Users/dominic/Sites/defra/fcp-dal-api/app/utils/throttle.js": {
      "path": "/Users/dominic/Sites/defra/fcp-dal-api/app/utils/throttle.js",
      "statementMap": {
        "0": { "start": { "line": 1, "column": 24 }, "end": { "line": 16, "column": 1 } },
        "1": { "start": { "line": 2, "column": 23 }, "end": { "line": 2, "column": 28 } },
        "2": { "start": { "line": 3, "column": 16 }, "end": { "line": 3, "column": 20 } },
        "3": { "start": { "line": 4, "column": 2 }, "end": { "line": 15, "column": 3 } },
        "4": { "start": { "line": 5, "column": 4 }, "end": { "line": 14, "column": 5 } },
        "5": { "start": { "line": 6, "column": 6 }, "end": { "line": 6, "column": 27 } },
        "6": { "start": { "line": 7, "column": 6 }, "end": { "line": 7, "column": 33 } },
        "7": { "start": { "line": 8, "column": 6 }, "end": { "line": 10, "column": 14 } },
        "8": { "start": { "line": 9, "column": 8 }, "end": { "line": 9, "column": 30 } },
        "9": { "start": { "line": 11, "column": 6 }, "end": { "line": 11, "column": 20 } },
        "10": { "start": { "line": 13, "column": 6 }, "end": { "line": 13, "column": 20 } }
      },
      "fnMap": {
        "0": {
          "name": "(anonymous_0)",
          "decl": { "start": { "line": 1, "column": 24 }, "end": { "line": 1, "column": 25 } },
          "loc": { "start": { "line": 1, "column": 38 }, "end": { "line": 16, "column": 1 } },
          "line": 1
        },
        "1": {
          "name": "(anonymous_1)",
          "decl": { "start": { "line": 4, "column": 9 }, "end": { "line": 4, "column": 10 } },
          "loc": { "start": { "line": 4, "column": 28 }, "end": { "line": 15, "column": 3 } },
          "line": 4
        },
        "2": {
          "name": "(anonymous_2)",
          "decl": { "start": { "line": 8, "column": 17 }, "end": { "line": 8, "column": 18 } },
          "loc": { "start": { "line": 8, "column": 23 }, "end": { "line": 10, "column": 7 } },
          "line": 8
        }
      },
      "branchMap": {
        "0": {
          "loc": { "start": { "line": 5, "column": 4 }, "end": { "line": 14, "column": 5 } },
          "type": "if",
          "locations": [
            { "start": { "line": 5, "column": 4 }, "end": { "line": 14, "column": 5 } },
            { "start": { "line": 12, "column": 11 }, "end": { "line": 14, "column": 5 } }
          ],
          "line": 5
        }
      },
      "s": {
        "0": 4,
        "1": 9,
        "2": 9,
        "3": 9,
        "4": 7,
        "5": 6,
        "6": 6,
        "7": 5,
        "8": 3,
        "9": 5,
        "10": 1
      },
      "f": { "0": 9, "1": 7, "2": 3 },
      "b": { "0": [6, 1] },
      "inputSourceMap": null,
      "_coverageSchema": "1a1c01bbd47fc00a2c39e90264f33305004495a9",
      "hash": "d5d03a64194e69b464c51423233539943c760100"
    },
    "/Users/dominic/Sites/defra/fcp-dal-api/app/routes/healthy.js": {
      "path": "/Users/dominic/Sites/defra/fcp-dal-api/app/routes/healthy.js",
      "statementMap": {
        "0": { "start": { "line": 8, "column": 33 }, "end": { "line": 16, "column": 1 } },
        "1": { "start": { "line": 9, "column": 32 }, "end": { "line": 12, "column": 3 } },
        "2": { "start": { "line": 13, "column": 2 }, "end": { "line": 15, "column": 3 } },
        "3": { "start": { "line": 17, "column": 42 }, "end": { "line": 20, "column": 1 } },
        "4": { "start": { "line": 22, "column": 28 }, "end": { "line": 41, "column": 1 } },
        "5": { "start": { "line": 26, "column": 4 }, "end": { "line": 39, "column": 5 } },
        "6": { "start": { "line": 27, "column": 23 }, "end": { "line": 27, "column": 52 } },
        "7": { "start": { "line": 28, "column": 6 }, "end": { "line": 34, "column": 7 } },
        "8": { "start": { "line": 29, "column": 8 }, "end": { "line": 29, "column": 98 } },
        "9": { "start": { "line": 30, "column": 13 }, "end": { "line": 34, "column": 7 } },
        "10": { "start": { "line": 31, "column": 8 }, "end": { "line": 31, "column": 93 } },
        "11": { "start": { "line": 33, "column": 8 }, "end": { "line": 33, "column": 92 } },
        "12": { "start": { "line": 36, "column": 6 }, "end": { "line": 36, "column": 54 } },
        "13": { "start": { "line": 38, "column": 6 }, "end": { "line": 38, "column": 72 } }
      },
      "fnMap": {
        "0": {
          "name": "(anonymous_0)",
          "decl": { "start": { "line": 8, "column": 33 }, "end": { "line": 8, "column": 34 } },
          "loc": { "start": { "line": 8, "column": 45 }, "end": { "line": 16, "column": 1 } },
          "line": 8
        },
        "1": {
          "name": "(anonymous_1)",
          "decl": { "start": { "line": 25, "column": 11 }, "end": { "line": 25, "column": 12 } },
          "loc": { "start": { "line": 25, "column": 34 }, "end": { "line": 40, "column": 3 } },
          "line": 25
        }
      },
      "branchMap": {
        "0": {
          "loc": { "start": { "line": 28, "column": 6 }, "end": { "line": 34, "column": 7 } },
          "type": "if",
          "locations": [
            { "start": { "line": 28, "column": 6 }, "end": { "line": 34, "column": 7 } },
            { "start": { "line": 30, "column": 13 }, "end": { "line": 34, "column": 7 } }
          ],
          "line": 28
        },
        "1": {
          "loc": { "start": { "line": 29, "column": 39 }, "end": { "line": 29, "column": 98 } },
          "type": "cond-expr",
          "locations": [
            { "start": { "line": 29, "column": 85 }, "end": { "line": 29, "column": 89 } },
            { "start": { "line": 29, "column": 92 }, "end": { "line": 29, "column": 98 } }
          ],
          "line": 29
        },
        "2": {
          "loc": { "start": { "line": 30, "column": 13 }, "end": { "line": 34, "column": 7 } },
          "type": "if",
          "locations": [
            { "start": { "line": 30, "column": 13 }, "end": { "line": 34, "column": 7 } },
            { "start": { "line": 32, "column": 13 }, "end": { "line": 34, "column": 7 } }
          ],
          "line": 30
        }
      },
      "s": {
        "0": 4,
        "1": 3,
        "2": 3,
        "3": 4,
        "4": 4,
        "5": 7,
        "6": 7,
        "7": 7,
        "8": 3,
        "9": 4,
        "10": 1,
        "11": 3,
        "12": 5,
        "13": 2
      },
      "f": { "0": 3, "1": 7 },
      "b": { "0": [3, 4], "1": [1, 1], "2": [1, 3] },
      "inputSourceMap": null,
      "_coverageSchema": "1a1c01bbd47fc00a2c39e90264f33305004495a9",
      "hash": "91fa7c262fca8ccbf661103a1c540b69896cb1d3"
    },
    "/Users/dominic/Sites/defra/fcp-dal-api/app/server.js": {
      "path": "/Users/dominic/Sites/defra/fcp-dal-api/app/server.js",
      "statementMap": {
        "0": { "start": { "line": 12, "column": 22 }, "end": { "line": 14, "column": 2 } },
        "1": { "start": { "line": 16, "column": 0 }, "end": { "line": 18, "column": 2 } },
        "2": { "start": { "line": 17, "column": 2 }, "end": { "line": 17, "column": 60 } },
        "3": { "start": { "line": 20, "column": 15 }, "end": { "line": 20, "column": 51 } },
        "4": { "start": { "line": 21, "column": 0 }, "end": { "line": 21, "column": 20 } },
        "5": { "start": { "line": 23, "column": 0 }, "end": { "line": 50, "column": 2 } },
        "6": { "start": { "line": 26, "column": 4 }, "end": { "line": 29, "column": 14 } },
        "7": { "start": { "line": 30, "column": 4 }, "end": { "line": 30, "column": 69 } },
        "8": { "start": { "line": 32, "column": 4 }, "end": { "line": 46, "column": 6 } },
        "9": { "start": { "line": 48, "column": 4 }, "end": { "line": 48, "column": 21 } },
        "10": { "start": { "line": 52, "column": 0 }, "end": { "line": 94, "column": 2 } },
        "11": { "start": { "line": 53, "column": 24 }, "end": { "line": 53, "column": 70 } },
        "12": { "start": { "line": 55, "column": 2 }, "end": { "line": 81, "column": 3 } },
        "13": { "start": { "line": 57, "column": 4 }, "end": { "line": 59, "column": 6 } },
        "14": { "start": { "line": 61, "column": 4 }, "end": { "line": 80, "column": 6 } },
        "15": { "start": { "line": 83, "column": 2 }, "end": { "line": 93, "column": 4 } }
      },
      "fnMap": {
        "0": {
          "name": "(anonymous_0)",
          "decl": { "start": { "line": 16, "column": 25 }, "end": { "line": 16, "column": 26 } },
          "loc": { "start": { "line": 16, "column": 31 }, "end": { "line": 18, "column": 1 } },
          "line": 16
        },
        "1": {
          "name": "(anonymous_1)",
          "decl": { "start": { "line": 25, "column": 10 }, "end": { "line": 25, "column": 11 } },
          "loc": { "start": { "line": 25, "column": 32 }, "end": { "line": 49, "column": 3 } },
          "line": 25
        },
        "2": {
          "name": "(anonymous_2)",
          "decl": { "start": { "line": 52, "column": 29 }, "end": { "line": 52, "column": 30 } },
          "loc": { "start": { "line": 52, "column": 48 }, "end": { "line": 94, "column": 1 } },
          "line": 52
        }
      },
      "branchMap": {
        "0": {
          "loc": { "start": { "line": 27, "column": 6 }, "end": { "line": 29, "column": 14 } },
          "type": "binary-expr",
          "locations": [
            { "start": { "line": 27, "column": 6 }, "end": { "line": 27, "column": 47 } },
            { "start": { "line": 28, "column": 6 }, "end": { "line": 28, "column": 48 } },
            { "start": { "line": 29, "column": 6 }, "end": { "line": 29, "column": 14 } }
          ],
          "line": 27
        },
        "1": {
          "loc": { "start": { "line": 30, "column": 22 }, "end": { "line": 30, "column": 69 } },
          "type": "binary-expr",
          "locations": [
            { "start": { "line": 30, "column": 22 }, "end": { "line": 30, "column": 57 } },
            { "start": { "line": 30, "column": 61 }, "end": { "line": 30, "column": 69 } }
          ],
          "line": 30
        },
        "2": {
          "loc": { "start": { "line": 55, "column": 2 }, "end": { "line": 81, "column": 3 } },
          "type": "if",
          "locations": [
            { "start": { "line": 55, "column": 2 }, "end": { "line": 81, "column": 3 } },
            { "start": {}, "end": {} }
          ],
          "line": 55
        }
      },
      "s": {
        "0": 9,
        "1": 9,
        "2": 13,
        "3": 9,
        "4": 9,
        "5": 9,
        "6": 10,
        "7": 10,
        "8": 10,
        "9": 10,
        "10": 9,
        "11": 10,
        "12": 10,
        "13": 8,
        "14": 8,
        "15": 10
      },
      "f": { "0": 13, "1": 10, "2": 10 },
      "b": { "0": [10, 9, 9], "1": [10, 9], "2": [8, 2] },
      "inputSourceMap": null,
      "_coverageSchema": "1a1c01bbd47fc00a2c39e90264f33305004495a9",
      "hash": "a4e4d6393606e0ec3a226e10b77917c4f7a1cf24"
    },
    "/Users/dominic/Sites/defra/fcp-dal-api/app/index.js": {
      "path": "/Users/dominic/Sites/defra/fcp-dal-api/app/index.js",
      "statementMap": {
        "0": { "start": { "line": 9, "column": 13 }, "end": { "line": 24, "column": 1 } },
        "1": { "start": { "line": 10, "column": 2 }, "end": { "line": 10, "column": 28 } },
        "2": { "start": { "line": 12, "column": 2 }, "end": { "line": 19, "column": 4 } },
        "3": { "start": { "line": 21, "column": 2 }, "end": { "line": 21, "column": 22 } },
        "4": { "start": { "line": 23, "column": 2 }, "end": { "line": 23, "column": 53 } },
        "5": { "start": { "line": 26, "column": 0 }, "end": { "line": 29, "column": 2 } },
        "6": { "start": { "line": 27, "column": 2 }, "end": { "line": 27, "column": 86 } },
        "7": { "start": { "line": 28, "column": 2 }, "end": { "line": 28, "column": 17 } },
        "8": { "start": { "line": 31, "column": 0 }, "end": { "line": 34, "column": 2 } },
        "9": { "start": { "line": 32, "column": 2 }, "end": { "line": 32, "column": 85 } },
        "10": { "start": { "line": 33, "column": 2 }, "end": { "line": 33, "column": 17 } },
        "11": { "start": { "line": 36, "column": 0 }, "end": { "line": 36, "column": 6 } }
      },
      "fnMap": {
        "0": {
          "name": "(anonymous_0)",
          "decl": { "start": { "line": 9, "column": 13 }, "end": { "line": 9, "column": 14 } },
          "loc": { "start": { "line": 9, "column": 25 }, "end": { "line": 24, "column": 1 } },
          "line": 9
        },
        "1": {
          "name": "(anonymous_1)",
          "decl": { "start": { "line": 26, "column": 33 }, "end": { "line": 26, "column": 34 } },
          "loc": { "start": { "line": 26, "column": 44 }, "end": { "line": 29, "column": 1 } },
          "line": 26
        },
        "2": {
          "name": "(anonymous_2)",
          "decl": { "start": { "line": 31, "column": 32 }, "end": { "line": 31, "column": 33 } },
          "loc": { "start": { "line": 31, "column": 43 }, "end": { "line": 34, "column": 1 } },
          "line": 31
        }
      },
      "branchMap": {},
      "s": {
        "0": 1,
        "1": 1,
        "2": 1,
        "3": 1,
        "4": 1,
        "5": 1,
        "6": 1,
        "7": 1,
        "8": 1,
        "9": 1,
        "10": 1,
        "11": 1
      },
      "f": { "0": 1, "1": 1, "2": 1 },
      "b": {},
      "inputSourceMap": null,
      "_coverageSchema": "1a1c01bbd47fc00a2c39e90264f33305004495a9",
      "hash": "90e3b4db8035b7c502afc0aa5dbef385f8474573"
    }
  }
}
