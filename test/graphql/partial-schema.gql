scalar Int
scalar Float
scalar Date
scalar UUID

type Query {
  business(sbi: ID!): Business
  customer(crn: ID!): Customer
}

type BusinessCustomer {
  personId: ID
  firstName: String
  lastName: String
  crn: String
  role: String
  permissionGroups: [ActivePermissionGroup]
}

type Business {
  organisationId: ID
  sbi: ID!
  info: BusinessInfo
  land: BusinessLand
  customers: [BusinessCustomerPartial]
  customer(crn: ID!): BusinessCustomer
  countyParishHoldings: [CountyParishHolding]
}

type CountyParishHolding {
  cphNumber: ID
  parish: String
  startDate: Date
  endDate: Date
  species: String
  xCoordinate: Int
  yCoordinate: Int
  address: String
}

type BusinessCustomerPartial {
  personId: ID
  firstName: String
  lastName: String
  crn: String
  role: String
}

type BusinessInfo {
  name: String
  address: String
  email: String
  legalStatus: BusinessType
  phone: String
  traderNumber: String
  type: BusinessType
  vat: String
  vendorNumber: String
}

type BusinessLandParcel {
  id: ID!
  sheetId: String
  parcelId: String
  area: Float
  pendingDigitisation: Boolean
  effectiveToDate: Date
  effectiveFromDate: Date
}

type BusinessLandSummary {
  arableLandArea: Float
  permanentCropsArea: Float
  permanentGrasslandArea: Float
  totalArea: Float
  totalParcels: Float
}

type BusinessLandCover {
  id: ID!
  name: String
  area: Float
  code: String
  isBpsEligible: Boolean
}

type BusinessLand {
  parcels(date: Date): [BusinessLandParcelPartial]
  parcel(date: Date, sheetId: ID!, parcelId: ID!): BusinessLandParcel
  parcelCovers(date: Date, sheetId: ID!, parcelId: ID!): [BusinessLandCover]
  summary(date: Date): BusinessLandSummary
}

type BusinessLandParcelPartial {
  id: ID!
  sheetId: String
  parcelId: String
  area: Float
  pendingDigitisation: Boolean
}

# eslint-disable-next-line @graphql-eslint/naming-convention
type BusinessType {
  code: Int
  type: String
}

type CustomerInfo {
  name: CustomerName
  dateOfBirth: String
}

type CustomerName {
  title: String
  otherTitle: String
  first: String
  middle: String
  last: String
}

type CustomerAuthenticationQuestions {
  memorableDate: String
  memorableEvent: String
  memorableLocation: String
  updatedAt: Date
  isFound: Boolean
}

type Customer {
  personId: ID!
  crn: ID!
  info: CustomerInfo
  authenticationQuestions: CustomerAuthenticationQuestions
  businesses: [CustomerBusinessPartial]
  business(sbi: ID!): CustomerBusiness
}

type CustomerBusinessPartial {
  organisationId: ID
  sbi: ID!
  name: String!
  role: String
}

type CustomerBusiness {
  organisationId: ID
  sbi: ID!
  name: String!
  role: String
  messages(fromDate: Date): [CustomerBusinessMessage]
  permissionGroups: [ActivePermissionGroup]
}

type CustomerBusinessMessage {
  id: ID!
  subject: String
  date: Date
  body: String
  read: Boolean
  deleted: Boolean
}

enum PermissionLevel {
  NO_ACCESS
  VIEW
  AMEND
  SUBMIT
  MAKE_LEGAL_CHANGES
  FULL_PERMISSION
}

enum PermissionGroupId {
  BASIC_PAYMENT_SCHEME
  BUSINESS_DETAILS
  COUNTRYSIDE_STEWARDSHIP_AGREEMENTS
  COUNTRYSIDE_STEWARDSHIP_APPLICATIONS
  ENTITLEMENTS
  ENVIRONMENTAL_LAND_MANAGEMENT_APPLICATIONS
  LAND_DETAILS
}

type ActivePermissionGroup {
  id: PermissionGroupId!
  level: PermissionLevel
  functions: [String]
}
